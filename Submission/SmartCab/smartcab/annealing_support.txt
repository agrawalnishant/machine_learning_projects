gma = 0.005
eps = 0.5
alp = 0.7
epsilon:  0.5
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (4, 1), destination = (8, 3), deadline = 30
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 2.5 , self.eps_freq:  1.0 

annealing now. self.epsilon: 2.5 , action:  None , deadline: 30
annealing now. self.epsilon: 2.5 , action:  right , deadline: 29
annealing now. self.epsilon: 2.5 , action:  None , deadline: 28
annealing now. self.epsilon: 2.5 , action:  None , deadline: 27
annealing now. self.epsilon: 2.5 , action:  left , deadline: 26
annealing now. self.epsilon: 2.5 , action:  left , deadline: 25
annealing now. self.epsilon: 2.5 , action:  right , deadline: 24
annealing now. self.epsilon: 2.5 , action:  left , deadline: 23
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 22
annealing now. self.epsilon: 2.5 , action:  left , deadline: 21
annealing now. self.epsilon: 2.5 , action:  left , deadline: 20
annealing now. self.epsilon: 2.5 , action:  left , deadline: 19
annealing now. self.epsilon: 2.5 , action:  None , deadline: 18
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 17
annealing now. self.epsilon: 2.5 , action:  right , deadline: 16
annealing now. self.epsilon: 2.5 , action:  None , deadline: 15
annealing now. self.epsilon: 2.5 , action:  None , deadline: 14
annealing now. self.epsilon: 2.5 , action:  right , deadline: 13
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 12
annealing now. self.epsilon: 2.5 , action:  None , deadline: 11
annealing now. self.epsilon: 2.5 , action:  left , deadline: 10
annealing now. self.epsilon: 2.5 , action:  right , deadline: 9
Environment.act(): Primary agent has reached destination!
success: 1 / 1
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (6, 3), destination = (8, 6), deadline = 25
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 1.25 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.25 , action:  forward , deadline: 25
annealing now. self.epsilon: 1.25 , action:  None , deadline: 24
annealing now. self.epsilon: 1.25 , action:  right , deadline: 23
annealing now. self.epsilon: 1.25 , action:  left , deadline: 22
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 21
annealing now. self.epsilon: 1.25 , action:  None , deadline: 20
annealing now. self.epsilon: 1.25 , action:  left , deadline: 19
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 18
annealing now. self.epsilon: 1.25 , action:  left , deadline: 17
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 16
annealing now. self.epsilon: 1.25 , action:  left , deadline: 15
annealing now. self.epsilon: 1.25 , action:  right , deadline: 14
annealing now. self.epsilon: 1.25 , action:  right , deadline: 13
annealing now. self.epsilon: 1.25 , action:  right , deadline: 12
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 11
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 10
annealing now. self.epsilon: 1.25 , action:  left , deadline: 9
annealing now. self.epsilon: 1.25 , action:  right , deadline: 8
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 7
annealing now. self.epsilon: 1.25 , action:  None , deadline: 6
annealing now. self.epsilon: 1.25 , action:  right , deadline: 5
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 4
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 3
annealing now. self.epsilon: 1.25 , action:  left , deadline: 2
success: 1 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (8, 4), destination = (5, 1), deadline = 30
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.833333333333 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 30
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 28
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 26
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 24
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 22
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 20
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 18
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 16
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 14
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 12
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 10
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 8
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 6
Environment.act(): Primary agent has reached destination!
success: 2 / 3
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (6, 1), destination = (2, 4), deadline = 35
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.625 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.625 , action:  right , deadline: 34
annealing now. self.epsilon: 0.625 , action:  None , deadline: 32
annealing now. self.epsilon: 0.625 , action:  right , deadline: 30
annealing now. self.epsilon: 0.625 , action:  left , deadline: 28
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 26
annealing now. self.epsilon: 0.625 , action:  right , deadline: 24
annealing now. self.epsilon: 0.625 , action:  None , deadline: 22
annealing now. self.epsilon: 0.625 , action:  None , deadline: 20
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.625 , action:  right , deadline: 16
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 14
annealing now. self.epsilon: 0.625 , action:  left , deadline: 12
annealing now. self.epsilon: 0.625 , action:  left , deadline: 10
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 8
annealing now. self.epsilon: 0.625 , action:  None , deadline: 6
annealing now. self.epsilon: 0.625 , action:  left , deadline: 4
success: 2 / 4
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (1, 5), destination = (7, 4), deadline = 35
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  right , deadline: 34
annealing now. self.epsilon: 0.5 , action:  right , deadline: 32
annealing now. self.epsilon: 0.5 , action:  right , deadline: 30
annealing now. self.epsilon: 0.5 , action:  None , deadline: 28
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 26
annealing now. self.epsilon: 0.5 , action:  None , deadline: 24
annealing now. self.epsilon: 0.5 , action:  None , deadline: 22
annealing now. self.epsilon: 0.5 , action:  right , deadline: 20
annealing now. self.epsilon: 0.5 , action:  None , deadline: 18
annealing now. self.epsilon: 0.5 , action:  left , deadline: 16
annealing now. self.epsilon: 0.5 , action:  None , deadline: 14
annealing now. self.epsilon: 0.5 , action:  right , deadline: 12
annealing now. self.epsilon: 0.5 , action:  left , deadline: 10
annealing now. self.epsilon: 0.5 , action:  None , deadline: 8
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 6
Environment.act(): Primary agent has reached destination!
success: 3 / 5
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (2, 4), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.416666666667 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.416666666667 , action:  left , deadline: 18
annealing now. self.epsilon: 0.416666666667 , action:  forward , deadline: 15
annealing now. self.epsilon: 0.416666666667 , action:  forward , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 4 / 6
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (7, 5), destination = (1, 1), deadline = 50
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.357142857143 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 48
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 45
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 42
annealing now. self.epsilon: 0.357142857143 , action:  forward , deadline: 39
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 36
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 33
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 30
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 27
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 24
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 21
Environment.act(): Primary agent has reached destination!
success: 5 / 7
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (3, 6), destination = (1, 3), deadline = 25
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.3125 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.3125 , action:  None , deadline: 24
annealing now. self.epsilon: 0.3125 , action:  left , deadline: 20
annealing now. self.epsilon: 0.3125 , action:  left , deadline: 16
annealing now. self.epsilon: 0.3125 , action:  left , deadline: 12
annealing now. self.epsilon: 0.3125 , action:  forward , deadline: 8
Environment.act(): Primary agent has reached destination!
success: 6 / 8
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (7, 5), destination = (2, 6), deadline = 30
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.277777777778 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.277777777778 , action:  right , deadline: 28
annealing now. self.epsilon: 0.277777777778 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.277777777778 , action:  left , deadline: 20
annealing now. self.epsilon: 0.277777777778 , action:  None , deadline: 16
annealing now. self.epsilon: 0.277777777778 , action:  None , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 7 / 9
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (4, 2), destination = (4, 6), deadline = 20
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  None , deadline: 20
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 12
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 8
Environment.act(): Primary agent has reached destination!
success: 8 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (7, 4), destination = (5, 2), deadline = 20
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.227272727273 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.227272727273 , action:  left , deadline: 20
annealing now. self.epsilon: 0.227272727273 , action:  forward , deadline: 15
annealing now. self.epsilon: 0.227272727273 , action:  left , deadline: 10
success: 8 / 11
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (2, 1), destination = (5, 3), deadline = 25
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.208333333333 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.208333333333 , action:  left , deadline: 25
annealing now. self.epsilon: 0.208333333333 , action:  left , deadline: 20
annealing now. self.epsilon: 0.208333333333 , action:  forward , deadline: 15
Environment.act(): Primary agent has reached destination!
success: 9 / 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (6, 6), destination = (8, 1), deadline = 35
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.192307692308 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.192307692308 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.192307692308 , action:  left , deadline: 24
annealing now. self.epsilon: 0.192307692308 , action:  right , deadline: 18
annealing now. self.epsilon: 0.192307692308 , action:  right , deadline: 12
success: 9 / 13
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (5, 4), destination = (3, 1), deadline = 25
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.178571428571 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.178571428571 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.178571428571 , action:  forward , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 10 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (8, 1), destination = (8, 5), deadline = 20
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 11 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (5, 6), destination = (1, 4), deadline = 30
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.15625 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.15625 , action:  None , deadline: 28
annealing now. self.epsilon: 0.15625 , action:  None , deadline: 21
annealing now. self.epsilon: 0.15625 , action:  forward , deadline: 14
success: 11 / 16
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (6, 2), destination = (2, 6), deadline = 40
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.147058823529 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.147058823529 , action:  forward , deadline: 35
annealing now. self.epsilon: 0.147058823529 , action:  forward , deadline: 28
annealing now. self.epsilon: 0.147058823529 , action:  right , deadline: 21
annealing now. self.epsilon: 0.147058823529 , action:  None , deadline: 14
Environment.act(): Primary agent has reached destination!
success: 12 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (8, 5), destination = (3, 2), deadline = 40
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.138888888889 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.138888888889 , action:  forward , deadline: 40
annealing now. self.epsilon: 0.138888888889 , action:  left , deadline: 32
Environment.act(): Primary agent has reached destination!
success: 13 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (6, 3), destination = (1, 6), deadline = 40
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.131578947368 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.131578947368 , action:  forward , deadline: 40
annealing now. self.epsilon: 0.131578947368 , action:  left , deadline: 32
annealing now. self.epsilon: 0.131578947368 , action:  right , deadline: 24
annealing now. self.epsilon: 0.131578947368 , action:  None , deadline: 16
success: 13 / 19
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (2, 4), destination = (7, 4), deadline = 25
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  left , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 14 / 20
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (4, 5), destination = (1, 4), deadline = 20
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.119047619048 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.119047619048 , action:  left , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 15 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (7, 5), destination = (4, 2), deadline = 30
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.113636363636 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.113636363636 , action:  forward , deadline: 27
annealing now. self.epsilon: 0.113636363636 , action:  left , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 16 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (8, 1), destination = (5, 3), deadline = 25
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.108695652174 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.108695652174 , action:  right , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 17 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (3, 3), destination = (8, 4), deadline = 30
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.104166666667 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.104166666667 , action:  right , deadline: 30
annealing now. self.epsilon: 0.104166666667 , action:  left , deadline: 20
success: 17 / 24
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (7, 2), destination = (4, 6), deadline = 35
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  left , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 18 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (7, 1), destination = (1, 1), deadline = 30
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0961538461538 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0961538461538 , action:  forward , deadline: 22
Environment.act(): Primary agent has reached destination!
success: 19 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (5, 1), destination = (8, 5), deadline = 35
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0925925925926 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0925925925926 , action:  left , deadline: 33
Environment.act(): Primary agent has reached destination!
success: 20 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (2, 4), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0892857142857 , self.eps_freq:  12.0 

Environment.act(): Primary agent has reached destination!
success: 21 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (5, 5), destination = (6, 1), deadline = 25
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0862068965517 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0862068965517 , action:  None , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 22 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (4, 4), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

Environment.act(): Primary agent has reached destination!
success: 23 / 30
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (8, 5), destination = (1, 2), deadline = 50
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0806451612903 , self.eps_freq:  13.0 

annealing now. self.epsilon: 0.0806451612903 , action:  forward , deadline: 39
Environment.act(): Primary agent has reached destination!
success: 24 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (6, 2), destination = (2, 6), deadline = 40
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.078125 , self.eps_freq:  13.0 

annealing now. self.epsilon: 0.078125 , action:  left , deadline: 39
annealing now. self.epsilon: 0.078125 , action:  right , deadline: 26
Environment.act(): Primary agent has reached destination!
success: 25 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (2, 4), destination = (6, 6), deadline = 30
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0757575757576 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0757575757576 , action:  left , deadline: 28
Environment.act(): Primary agent has reached destination!
success: 26 / 33
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (1, 4), destination = (8, 1), deadline = 50
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0735294117647 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0735294117647 , action:  forward , deadline: 42
Environment.act(): Primary agent has reached destination!
success: 27 / 34
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (6, 4), destination = (1, 4), deadline = 25
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

success: 27 / 35
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (2, 4), destination = (8, 4), deadline = 30
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0694444444444 , self.eps_freq:  15.0 

annealing now. self.epsilon: 0.0694444444444 , action:  None , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 28 / 36
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (1, 1), destination = (6, 1), deadline = 25
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0675675675676 , self.eps_freq:  15.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 37
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (5, 2), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0657894736842 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (8, 2), destination = (8, 6), deadline = 20
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0641025641026 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (3, 2), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 40
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (7, 5), destination = (8, 1), deadline = 25
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0609756097561 , self.eps_freq:  17.0 

success: 32 / 41
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (7, 3), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0595238095238 , self.eps_freq:  17.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 42
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (5, 6), destination = (7, 1), deadline = 35
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0581395348837 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (1, 6), destination = (7, 3), deadline = 45
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0568181818182 , self.eps_freq:  18.0 

annealing now. self.epsilon: 0.0568181818182 , action:  left , deadline: 36
Environment.act(): Primary agent has reached destination!
success: 35 / 44
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (2, 3), destination = (6, 1), deadline = 30
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (4, 4), destination = (8, 3), deadline = 25
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.054347826087 , self.eps_freq:  19.0 

success: 36 / 46
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (1, 4), destination = (7, 1), deadline = 45
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0531914893617 , self.eps_freq:  19.0 

annealing now. self.epsilon: 0.0531914893617 , action:  left , deadline: 38
Environment.act(): Primary agent has reached destination!
success: 37 / 47
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (1, 5), destination = (6, 3), deadline = 35
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0520833333333 , self.eps_freq:  20.0 

success: 37 / 48
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 5), deadline = 30
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0510204081633 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (4, 5), destination = (8, 5), deadline = 20
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.05 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (4, 3), destination = (8, 4), deadline = 25
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0490196078431 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (4, 2), destination = (6, 6), deadline = 30
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0480769230769 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 52
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (1, 5), destination = (4, 2), deadline = 30
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0471698113208 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (5, 5), destination = (1, 4), deadline = 25
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0462962962963 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (6, 5), destination = (1, 4), deadline = 30
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (5, 1), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0446428571429 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (1, 3), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0438596491228 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 57
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (6, 5), destination = (3, 2), deadline = 30
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0431034482759 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 47 / 58
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (2, 6), destination = (1, 2), deadline = 25
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0423728813559 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (4, 2), destination = (7, 5), deadline = 30
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (2, 6), destination = (6, 3), deadline = 35
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0409836065574 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 61
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (8, 3), destination = (6, 1), deadline = 20
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0403225806452 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 62
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (8, 3), destination = (4, 6), deadline = 35
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0396825396825 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (2, 5), destination = (1, 2), deadline = 20
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0390625 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 53 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (7, 4), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 54 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (6, 6), destination = (2, 6), deadline = 20
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0378787878788 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 55 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (6, 2), destination = (3, 4), deadline = 25
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0373134328358 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (8, 6), destination = (2, 5), deadline = 35
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0367647058824 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 57 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (5, 6), destination = (2, 3), deadline = 30
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.036231884058 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 58 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (3, 4), destination = (7, 1), deadline = 35
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 59 / 70
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (2, 1), destination = (8, 6), deadline = 55
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0352112676056 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 60 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (2, 5), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0347222222222 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 61 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (7, 1), destination = (2, 4), deadline = 40
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0342465753425 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 62 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (6, 3), destination = (1, 2), deadline = 30
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0337837837838 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 63 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (2, 1), destination = (6, 4), deadline = 35
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 64 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (8, 6), destination = (1, 2), deadline = 55
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0328947368421 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 65 / 76
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (3, 6), destination = (8, 2), deadline = 45
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0324675324675 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 66 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (8, 1), destination = (3, 4), deadline = 40
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0320512820513 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 67 / 78
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (2, 5), destination = (6, 3), deadline = 30
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0316455696203 , self.eps_freq:  32.0 

success: 67 / 79
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (6, 1), destination = (3, 6), deadline = 40
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

success: 67 / 80
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (2, 3), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0308641975309 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 68 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (7, 2), destination = (2, 4), deadline = 35
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.030487804878 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 69 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (6, 6), destination = (7, 2), deadline = 25
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0301204819277 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 70 / 83
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (6, 5), destination = (2, 2), deadline = 35
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0297619047619 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 71 / 84
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (1, 5), destination = (6, 3), deadline = 35
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 72 / 85
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (2, 2), destination = (7, 5), deadline = 40
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0290697674419 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 73 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (3, 6), destination = (7, 5), deadline = 25
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0287356321839 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 74 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (1, 5), destination = (8, 4), deadline = 40
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0284090909091 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 75 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (3, 4), destination = (7, 4), deadline = 20
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0280898876404 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 76 / 89
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (3, 1), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 77 / 90
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (8, 1), destination = (8, 5), deadline = 20
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0274725274725 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 78 / 91
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (7, 1), destination = (2, 2), deadline = 30
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0271739130435 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 79 / 92
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (1, 5), destination = (8, 6), deadline = 40
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0268817204301 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 80 / 93
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (8, 4), destination = (2, 3), deadline = 35
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0265957446809 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 81 / 94
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (1, 4), destination = (6, 4), deadline = 25
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 82 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (2, 4), destination = (8, 6), deadline = 40
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0260416666667 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 83 / 96
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (3, 3), destination = (7, 2), deadline = 25
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0257731958763 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 84 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (3, 2), destination = (3, 6), deadline = 20
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0255102040816 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 85 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (3, 1), destination = (1, 4), deadline = 25
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0252525252525 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 86 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (5, 2), destination = (7, 6), deadline = 30
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 87 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.47009
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01370
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.16668
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02809
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02041
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04819
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01351
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.40234
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00492
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06677
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.24869
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.20368
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.13210
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.15179
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.45293
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00166
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02632
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.27647
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04968
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.33333
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00700
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09749
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.52212
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04109
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02703
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.11419
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99963
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01053
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04188
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01408
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05037
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.28168
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.47585
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.34027
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01370
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.68940
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 4.19812
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 1.66470
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.06449
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.99769
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.42820
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.12552
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.00133
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.22887
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50222
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.49858
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.35361
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.78659
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.52069
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.72220
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.28693
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.17972
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.30852
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.00107
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.50430
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.02644
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.16751
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.59506
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.45102
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.18035
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.00163
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 2.87861
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 2.00375
--------------------------------------------------------------------------------
updated cells:  63 , self.total_cell_count: 2048 , updated_func_counter: 1707
self.alpha: 0.7 self.gamma: 0.005 , self.epsilon: 0.5 , success: 87
________________________________________________________________________________
gma = 0.005
eps = 0.2
alp = 0.7
epsilon:  0.2
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (5, 2), destination = (7, 4), deadline = 20
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 1.0 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.0 , action:  right , deadline: 20
annealing now. self.epsilon: 1.0 , action:  left , deadline: 19
annealing now. self.epsilon: 1.0 , action:  right , deadline: 18
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 17
annealing now. self.epsilon: 1.0 , action:  left , deadline: 16
annealing now. self.epsilon: 1.0 , action:  None , deadline: 15
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 14
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 13
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 12
annealing now. self.epsilon: 1.0 , action:  None , deadline: 11
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 10
annealing now. self.epsilon: 1.0 , action:  None , deadline: 9
annealing now. self.epsilon: 1.0 , action:  None , deadline: 8
annealing now. self.epsilon: 1.0 , action:  right , deadline: 7
annealing now. self.epsilon: 1.0 , action:  None , deadline: 6
annealing now. self.epsilon: 1.0 , action:  left , deadline: 5
annealing now. self.epsilon: 1.0 , action:  left , deadline: 4
annealing now. self.epsilon: 1.0 , action:  right , deadline: 3
annealing now. self.epsilon: 1.0 , action:  None , deadline: 2
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (8, 2), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  None , deadline: 20
annealing now. self.epsilon: 0.5 , action:  left , deadline: 18
annealing now. self.epsilon: 0.5 , action:  right , deadline: 16
annealing now. self.epsilon: 0.5 , action:  None , deadline: 14
annealing now. self.epsilon: 0.5 , action:  left , deadline: 12
annealing now. self.epsilon: 0.5 , action:  None , deadline: 10
annealing now. self.epsilon: 0.5 , action:  left , deadline: 8
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 6
annealing now. self.epsilon: 0.5 , action:  left , deadline: 4
success: 0 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (6, 2), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.333333333333 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.333333333333 , action:  None , deadline: 18
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 15
annealing now. self.epsilon: 0.333333333333 , action:  None , deadline: 12
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 9
Environment.act(): Primary agent has reached destination!
success: 1 / 3
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (7, 1), destination = (5, 5), deadline = 30
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  forward , deadline: 28
annealing now. self.epsilon: 0.25 , action:  right , deadline: 24
annealing now. self.epsilon: 0.25 , action:  left , deadline: 20
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 12
annealing now. self.epsilon: 0.25 , action:  left , deadline: 8
success: 1 / 4
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (1, 2), destination = (4, 6), deadline = 35
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.2 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.2 , action:  forward , deadline: 35
annealing now. self.epsilon: 0.2 , action:  right , deadline: 30
annealing now. self.epsilon: 0.2 , action:  left , deadline: 25
annealing now. self.epsilon: 0.2 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.2 , action:  right , deadline: 15
annealing now. self.epsilon: 0.2 , action:  right , deadline: 10
success: 1 / 5
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (3, 1), destination = (1, 5), deadline = 30
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 30
annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 2 / 6
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (7, 1), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.142857142857 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.142857142857 , action:  None , deadline: 14
Environment.act(): Primary agent has reached destination!
success: 3 / 7
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (8, 3), destination = (3, 4), deadline = 30
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.125 , action:  None , deadline: 16
success: 3 / 8
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (3, 3), destination = (8, 5), deadline = 35
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.111111111111 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.111111111111 , action:  left , deadline: 27
annealing now. self.epsilon: 0.111111111111 , action:  None , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 4 / 9
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (8, 2), destination = (3, 6), deadline = 45
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  None , deadline: 40
annealing now. self.epsilon: 0.1 , action:  right , deadline: 30
annealing now. self.epsilon: 0.1 , action:  left , deadline: 20
success: 4 / 10
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (4, 6), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0909090909091 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0909090909091 , action:  right , deadline: 22
Environment.act(): Primary agent has reached destination!
success: 5 / 11
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (7, 1), destination = (1, 1), deadline = 30
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  forward , deadline: 24
success: 5 / 12
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (4, 5), destination = (2, 2), deadline = 25
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0769230769231 , self.eps_freq:  13.0 

Environment.act(): Primary agent has reached destination!
success: 6 / 13
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (8, 6), destination = (2, 5), deadline = 35
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0714285714286 , action:  forward , deadline: 28
Environment.act(): Primary agent has reached destination!
success: 7 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (1, 3), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0666666666667 , self.eps_freq:  15.0 

Environment.act(): Primary agent has reached destination!
success: 8 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (8, 1), destination = (1, 4), deadline = 50
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

annealing now. self.epsilon: 0.0625 , action:  left , deadline: 48
annealing now. self.epsilon: 0.0625 , action:  right , deadline: 32
Environment.act(): Primary agent has reached destination!
success: 9 / 16
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (4, 4), destination = (5, 1), deadline = 20
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0588235294118 , self.eps_freq:  17.0 

success: 9 / 17
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (1, 1), destination = (8, 2), deadline = 40
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

annealing now. self.epsilon: 0.0555555555556 , action:  left , deadline: 36
Environment.act(): Primary agent has reached destination!
success: 10 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (1, 4), destination = (3, 1), deadline = 25
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0526315789474 , self.eps_freq:  19.0 

success: 10 / 19
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (1, 5), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.05 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 11 / 20
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (8, 6), destination = (3, 3), deadline = 40
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.047619047619 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 12 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (2, 5), destination = (7, 6), deadline = 30
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 13 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (7, 4), destination = (1, 6), deadline = 40
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0434782608696 , self.eps_freq:  23.0 

success: 13 / 23
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (8, 5), destination = (2, 3), deadline = 40
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 14 / 24
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (1, 4), destination = (7, 2), deadline = 40
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.04 , self.eps_freq:  25.0 

success: 14 / 25
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 4), deadline = 35
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 15 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (7, 3), destination = (1, 1), deadline = 40
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.037037037037 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 16 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (5, 1), destination = (1, 5), deadline = 40
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

success: 16 / 28
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (1, 3), destination = (6, 4), deadline = 30
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0344827586207 , self.eps_freq:  29.0 

success: 16 / 29
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (6, 1), destination = (2, 1), deadline = 20
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

success: 16 / 30
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (2, 2), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0322580645161 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 17 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (6, 1), destination = (2, 6), deadline = 45
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 18 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (3, 3), destination = (6, 6), deadline = 30
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.030303030303 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 19 / 33
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (3, 6), destination = (7, 5), deadline = 25
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 20 / 34
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (1, 5), destination = (6, 4), deadline = 30
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0285714285714 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 21 / 35
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (6, 1), destination = (4, 5), deadline = 30
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

success: 21 / 36
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (3, 4), destination = (8, 6), deadline = 35
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.027027027027 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 22 / 37
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (5, 5), destination = (1, 5), deadline = 20
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 23 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (3, 5), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.025641025641 , self.eps_freq:  39.0 

success: 23 / 39
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (6, 1), destination = (3, 5), deadline = 35
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 40
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (1, 4), destination = (7, 6), deadline = 40
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0243902439024 , self.eps_freq:  41.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 41
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (1, 6), destination = (5, 2), deadline = 40
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

success: 25 / 42
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (3, 6), destination = (5, 2), deadline = 30
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0232558139535 , self.eps_freq:  43.0 

success: 25 / 43
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (5, 2), destination = (1, 1), deadline = 25
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 44
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (8, 6), destination = (5, 3), deadline = 30
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0222222222222 , self.eps_freq:  45.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (3, 4), destination = (5, 2), deadline = 20
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

success: 27 / 46
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (8, 1), destination = (3, 6), deadline = 50
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0212765957447 , self.eps_freq:  47.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 47
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (6, 5), destination = (2, 2), deadline = 35
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (3, 1), destination = (5, 5), deadline = 30
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0204081632653 , self.eps_freq:  50.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (8, 1), destination = (2, 5), deadline = 50
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.02 , self.eps_freq:  50.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (7, 6), destination = (1, 3), deadline = 45
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0196078431373 , self.eps_freq:  51.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (5, 1), destination = (1, 1), deadline = 20
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

success: 32 / 52
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (2, 2), destination = (8, 1), deadline = 35
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0188679245283 , self.eps_freq:  53.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (7, 3), destination = (1, 5), deadline = 40
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

success: 33 / 54
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (2, 3), destination = (7, 2), deadline = 30
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0181818181818 , self.eps_freq:  55.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (5, 2), destination = (5, 6), deadline = 20
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

success: 34 / 56
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (3, 3), destination = (5, 1), deadline = 20
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0175438596491 , self.eps_freq:  57.0 

success: 34 / 57
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (5, 1), destination = (7, 4), deadline = 25
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

Environment.act(): Primary agent has reached destination!
success: 35 / 58
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (4, 6), destination = (7, 1), deadline = 40
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0169491525424 , self.eps_freq:  59.0 

success: 35 / 59
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (7, 5), destination = (2, 5), deadline = 25
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (2, 1), destination = (6, 3), deadline = 30
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.016393442623 , self.eps_freq:  61.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 61
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (5, 6), destination = (1, 2), deadline = 40
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

success: 37 / 62
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (6, 5), destination = (3, 2), deadline = 30
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.015873015873 , self.eps_freq:  63.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (1, 1), destination = (7, 6), deadline = 55
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (6, 5), destination = (3, 3), deadline = 25
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0153846153846 , self.eps_freq:  65.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (8, 4), destination = (2, 5), deadline = 35
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (4, 2), destination = (1, 6), deadline = 35
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0149253731343 , self.eps_freq:  67.0 

success: 41 / 67
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (2, 5), destination = (7, 5), deadline = 25
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

success: 41 / 68
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (6, 6), destination = (7, 1), deadline = 30
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0144927536232 , self.eps_freq:  69.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (7, 1), destination = (6, 6), deadline = 30
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

success: 42 / 70
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (8, 1), destination = (5, 5), deadline = 35
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0140845070423 , self.eps_freq:  71.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (5, 1), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

success: 43 / 72
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (7, 1), destination = (2, 4), deadline = 40
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.013698630137 , self.eps_freq:  73.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (6, 3), destination = (2, 4), deadline = 25
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

success: 44 / 74
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (2, 1), destination = (8, 5), deadline = 50
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0133333333333 , self.eps_freq:  75.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (3, 6), destination = (7, 2), deadline = 40
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

success: 45 / 76
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (3, 6), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.012987012987 , self.eps_freq:  77.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (3, 5), destination = (3, 1), deadline = 20
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

Environment.act(): Primary agent has reached destination!
success: 47 / 78
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (1, 1), destination = (8, 6), deadline = 60
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0126582278481 , self.eps_freq:  79.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (2, 4), destination = (8, 1), deadline = 45
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

success: 48 / 80
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (3, 4), destination = (5, 6), deadline = 20
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0123456790123 , self.eps_freq:  81.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (5, 2), destination = (7, 4), deadline = 20
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (4, 2), destination = (1, 3), deadline = 20
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0120481927711 , self.eps_freq:  83.0 

success: 50 / 83
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (3, 1), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 84
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (8, 3), destination = (2, 5), deadline = 40
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0117647058824 , self.eps_freq:  85.0 

success: 51 / 85
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (6, 3), destination = (2, 5), deadline = 30
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

success: 51 / 86
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (8, 1), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0114942528736 , self.eps_freq:  87.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (8, 4), destination = (1, 2), deadline = 45
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

Environment.act(): Primary agent has reached destination!
success: 53 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (5, 2), destination = (1, 6), deadline = 40
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0112359550562 , self.eps_freq:  89.0 

success: 53 / 89
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (1, 4), destination = (7, 5), deadline = 35
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

success: 53 / 90
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (5, 4), destination = (1, 2), deadline = 30
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.010989010989 , self.eps_freq:  91.0 

Environment.act(): Primary agent has reached destination!
success: 54 / 91
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (6, 3), destination = (2, 4), deadline = 25
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

success: 54 / 92
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (7, 6), destination = (1, 4), deadline = 40
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.010752688172 , self.eps_freq:  93.0 

Environment.act(): Primary agent has reached destination!
success: 55 / 93
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (5, 1), destination = (2, 5), deadline = 35
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 94
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (3, 6), destination = (8, 6), deadline = 25
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0105263157895 , self.eps_freq:  95.0 

Environment.act(): Primary agent has reached destination!
success: 57 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (1, 1), destination = (8, 3), deadline = 45
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

Environment.act(): Primary agent has reached destination!
success: 58 / 96
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (3, 5), destination = (1, 2), deadline = 25
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0103092783505 , self.eps_freq:  97.0 

Environment.act(): Primary agent has reached destination!
success: 59 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (1, 6), destination = (6, 5), deadline = 30
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

Environment.act(): Primary agent has reached destination!
success: 60 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (8, 1), destination = (5, 6), deadline = 40
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.010101010101 , self.eps_freq:  99.0 

Environment.act(): Primary agent has reached destination!
success: 61 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (1, 6), destination = (4, 1), deadline = 40
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.01 , self.eps_freq:  100.0 

success: 61 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00078
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01961
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07825
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.14393
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.17008
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09929
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12153
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.17790
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.66684
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01613
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00407
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.11987
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04023
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.52771
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.62945
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.47319
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.66057
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08318
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.00006
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.64165
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06297
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.55563
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02485
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01000
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04167
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06210
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.20600
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01515
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.76724
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00248
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10841
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.16001
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.57836
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01786
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.47731
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02500
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01176
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00208
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03478
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01639
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10855
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01515
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03361
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01124
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01124
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.18732
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: -1.00000
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 3.39303
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.99891
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.50194
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.12516
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50072
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.29988
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.08734
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.33333
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.50047
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.95422
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.68647
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: -1.00125
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.05563
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.25031
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.99886
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.14614
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.26001
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.00125
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.66708
--------------------------------------------------------------------------------
updated cells:  66 , self.total_cell_count: 2048 , updated_func_counter: 2419
self.alpha: 0.7 self.gamma: 0.005 , self.epsilon: 0.2 , success: 61
________________________________________________________________________________
Environment.reset(): Primary agent could not reach destination within deadline!
gma = 0.005
eps = 0.1
alp = 0.7
epsilon:  0.1
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (5, 5), destination = (7, 1), deadline = 30
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.5 , action:  right , deadline: 28
annealing now. self.epsilon: 0.5 , action:  right , deadline: 26
annealing now. self.epsilon: 0.5 , action:  left , deadline: 24
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 22
annealing now. self.epsilon: 0.5 , action:  right , deadline: 20
annealing now. self.epsilon: 0.5 , action:  left , deadline: 18
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.5 , action:  right , deadline: 14
annealing now. self.epsilon: 0.5 , action:  None , deadline: 12
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 10
annealing now. self.epsilon: 0.5 , action:  left , deadline: 8
Environment.act(): Primary agent has reached destination!
success: 1 / 1
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (2, 4), destination = (5, 1), deadline = 30
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  right , deadline: 28
annealing now. self.epsilon: 0.25 , action:  left , deadline: 24
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.25 , action:  None , deadline: 16
annealing now. self.epsilon: 0.25 , action:  left , deadline: 12
annealing now. self.epsilon: 0.25 , action:  right , deadline: 8
success: 1 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (7, 1), destination = (2, 4), deadline = 40
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  forward , deadline: 36
annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 30
annealing now. self.epsilon: 0.166666666667 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 18
annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 12
success: 1 / 3
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (7, 2), destination = (2, 4), deadline = 35
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  forward , deadline: 32
annealing now. self.epsilon: 0.125 , action:  None , deadline: 24
annealing now. self.epsilon: 0.125 , action:  left , deadline: 16
success: 1 / 4
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (2, 1), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  left , deadline: 20
success: 1 / 5
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (4, 2), destination = (8, 1), deadline = 25
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  right , deadline: 24
success: 1 / 6
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (3, 2), destination = (6, 5), deadline = 30
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0714285714286 , action:  left , deadline: 28
success: 1 / 7
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (2, 3), destination = (1, 6), deadline = 20
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

success: 1 / 8
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (2, 3), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

success: 1 / 9
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (1, 5), destination = (5, 2), deadline = 35
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.05 , self.eps_freq:  20.0 

success: 1 / 10
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (3, 6), destination = (7, 2), deadline = 40
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

success: 1 / 11
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (6, 2), destination = (3, 3), deadline = 20
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

success: 1 / 12
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (1, 5), destination = (5, 4), deadline = 25
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

success: 1 / 13
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (8, 2), destination = (4, 4), deadline = 30
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 2 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (1, 3), destination = (6, 4), deadline = 30
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

success: 2 / 15
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (7, 2), destination = (1, 6), deadline = 50
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

success: 2 / 16
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (1, 4), destination = (6, 1), deadline = 40
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 3 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (7, 2), destination = (2, 4), deadline = 35
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 4 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (6, 2), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

success: 4 / 19
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (2, 6), destination = (6, 3), deadline = 35
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 5 / 20
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (6, 2), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

success: 5 / 21
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (5, 3), destination = (1, 4), deadline = 25
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

success: 5 / 22
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (6, 2), destination = (4, 6), deadline = 30
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

success: 5 / 23
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (5, 6), destination = (2, 2), deadline = 35
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

success: 5 / 24
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (2, 5), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.02 , self.eps_freq:  50.0 

success: 5 / 25
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (2, 5), destination = (6, 4), deadline = 25
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

success: 5 / 26
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (2, 6), destination = (4, 1), deadline = 35
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

Environment.act(): Primary agent has reached destination!
success: 6 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (3, 1), destination = (4, 6), deadline = 30
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

Environment.act(): Primary agent has reached destination!
success: 7 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (6, 3), destination = (3, 4), deadline = 20
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

success: 7 / 29
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (1, 1), destination = (5, 2), deadline = 25
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

success: 7 / 30
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (3, 1), destination = (7, 2), deadline = 25
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

success: 7 / 31
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (5, 3), destination = (8, 1), deadline = 25
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

success: 7 / 32
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (5, 6), destination = (7, 4), deadline = 20
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

success: 7 / 33
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (8, 3), destination = (1, 2), deadline = 40
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

Environment.act(): Primary agent has reached destination!
success: 8 / 34
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (7, 3), destination = (5, 1), deadline = 20
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

Environment.act(): Primary agent has reached destination!
success: 9 / 35
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (7, 4), destination = (5, 6), deadline = 20
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

success: 9 / 36
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (4, 3), destination = (1, 6), deadline = 30
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

Environment.act(): Primary agent has reached destination!
success: 10 / 37
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (8, 2), destination = (6, 6), deadline = 30
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

Environment.act(): Primary agent has reached destination!
success: 11 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (8, 2), destination = (4, 6), deadline = 40
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

success: 11 / 39
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (8, 4), destination = (3, 1), deadline = 40
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

success: 11 / 40
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (4, 4), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

success: 11 / 41
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (7, 1), destination = (5, 4), deadline = 25
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

success: 11 / 42
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (8, 6), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

success: 11 / 43
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (4, 6), destination = (2, 4), deadline = 20
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

Environment.act(): Primary agent has reached destination!
success: 12 / 44
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (4, 6), destination = (2, 3), deadline = 25
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

success: 12 / 45
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (2, 5), destination = (3, 2), deadline = 20
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

success: 12 / 46
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (5, 1), destination = (1, 2), deadline = 25
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

success: 12 / 47
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (1, 2), destination = (6, 4), deadline = 35
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

success: 12 / 48
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (6, 2), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

success: 12 / 49
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (4, 6), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.01 , self.eps_freq:  100.0 

Environment.act(): Primary agent has reached destination!
success: 13 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (4, 6), destination = (2, 4), deadline = 20
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.00980392156863 , self.eps_freq:  102.0 

success: 13 / 51
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (2, 1), destination = (8, 6), deadline = 55
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.00961538461538 , self.eps_freq:  104.0 

Environment.act(): Primary agent has reached destination!
success: 14 / 52
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (3, 1), destination = (8, 1), deadline = 25
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00943396226415 , self.eps_freq:  106.0 

success: 14 / 53
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (6, 4), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.00925925925926 , self.eps_freq:  108.0 

success: 14 / 54
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (4, 3), destination = (5, 6), deadline = 20
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.00909090909091 , self.eps_freq:  110.0 

success: 14 / 55
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (3, 3), destination = (6, 1), deadline = 25
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.00892857142857 , self.eps_freq:  112.0 

success: 14 / 56
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (5, 6), destination = (1, 5), deadline = 25
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.00877192982456 , self.eps_freq:  114.0 

success: 14 / 57
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (4, 2), destination = (7, 5), deadline = 30
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.00862068965517 , self.eps_freq:  116.0 

success: 14 / 58
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (8, 3), destination = (1, 1), deadline = 45
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.00847457627119 , self.eps_freq:  118.0 

success: 14 / 59
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (1, 1), destination = (5, 4), deadline = 35
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.00833333333333 , self.eps_freq:  120.0 

Environment.act(): Primary agent has reached destination!
success: 15 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (2, 6), destination = (2, 1), deadline = 25
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.00819672131148 , self.eps_freq:  122.0 

Environment.act(): Primary agent has reached destination!
success: 16 / 61
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (2, 1), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.00806451612903 , self.eps_freq:  124.0 

Environment.act(): Primary agent has reached destination!
success: 17 / 62
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (3, 4), destination = (8, 1), deadline = 40
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00793650793651 , self.eps_freq:  126.0 

Environment.act(): Primary agent has reached destination!
success: 18 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (5, 4), destination = (1, 3), deadline = 25
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0078125 , self.eps_freq:  128.0 

success: 18 / 64
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (3, 4), destination = (4, 1), deadline = 20
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.00769230769231 , self.eps_freq:  130.0 

success: 18 / 65
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (1, 5), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.00757575757576 , self.eps_freq:  132.0 

success: 18 / 66
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (5, 1), destination = (8, 3), deadline = 25
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.00746268656716 , self.eps_freq:  134.0 

Environment.act(): Primary agent has reached destination!
success: 19 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (4, 5), destination = (2, 3), deadline = 20
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.00735294117647 , self.eps_freq:  136.0 

Environment.act(): Primary agent has reached destination!
success: 20 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (1, 6), destination = (1, 1), deadline = 25
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.00724637681159 , self.eps_freq:  138.0 

Environment.act(): Primary agent has reached destination!
success: 21 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (5, 5), destination = (8, 4), deadline = 20
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.00714285714286 , self.eps_freq:  140.0 

success: 21 / 70
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (4, 1), destination = (8, 1), deadline = 20
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00704225352113 , self.eps_freq:  142.0 

success: 21 / 71
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (6, 2), destination = (5, 6), deadline = 25
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.00694444444444 , self.eps_freq:  144.0 

success: 21 / 72
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (2, 4), destination = (6, 2), deadline = 30
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.00684931506849 , self.eps_freq:  146.0 

success: 21 / 73
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (4, 3), destination = (8, 6), deadline = 35
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.00675675675676 , self.eps_freq:  148.0 

Environment.act(): Primary agent has reached destination!
success: 22 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (3, 4), destination = (8, 1), deadline = 40
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00666666666667 , self.eps_freq:  150.0 

Environment.act(): Primary agent has reached destination!
success: 23 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (1, 1), destination = (6, 4), deadline = 40
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.00657894736842 , self.eps_freq:  152.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 76
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (1, 1), destination = (8, 1), deadline = 35
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00649350649351 , self.eps_freq:  154.0 

success: 24 / 77
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (7, 2), destination = (2, 2), deadline = 25
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.00641025641026 , self.eps_freq:  156.0 

success: 24 / 78
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (2, 6), destination = (8, 4), deadline = 40
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.00632911392405 , self.eps_freq:  158.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (8, 3), destination = (4, 1), deadline = 30
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.00625 , self.eps_freq:  160.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (2, 1), destination = (5, 4), deadline = 30
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.00617283950617 , self.eps_freq:  162.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (6, 6), destination = (7, 1), deadline = 30
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.00609756097561 , self.eps_freq:  164.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (4, 2), destination = (1, 5), deadline = 30
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.00602409638554 , self.eps_freq:  166.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 83
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (8, 5), destination = (8, 1), deadline = 20
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00595238095238 , self.eps_freq:  168.0 

success: 29 / 84
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (3, 6), destination = (7, 3), deadline = 35
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.00588235294118 , self.eps_freq:  170.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 85
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (4, 3), destination = (8, 4), deadline = 25
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.00581395348837 , self.eps_freq:  172.0 

success: 30 / 86
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (6, 3), destination = (8, 5), deadline = 20
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.00574712643678 , self.eps_freq:  174.0 

success: 30 / 87
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (8, 4), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.00568181818182 , self.eps_freq:  176.0 

success: 30 / 88
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (7, 6), destination = (7, 2), deadline = 20
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.00561797752809 , self.eps_freq:  178.0 

success: 30 / 89
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (5, 2), destination = (7, 4), deadline = 20
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.00555555555556 , self.eps_freq:  180.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 90
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (2, 6), destination = (1, 1), deadline = 30
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.00549450549451 , self.eps_freq:  182.0 

success: 31 / 91
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (4, 6), destination = (6, 2), deadline = 30
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0054347826087 , self.eps_freq:  184.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 92
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (8, 2), destination = (1, 2), deadline = 35
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.00537634408602 , self.eps_freq:  186.0 

success: 32 / 93
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (3, 5), destination = (5, 1), deadline = 30
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.00531914893617 , self.eps_freq:  188.0 

success: 32 / 94
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (2, 3), destination = (7, 3), deadline = 25
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.00526315789474 , self.eps_freq:  190.0 

success: 32 / 95
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (7, 4), destination = (1, 6), deadline = 40
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.00520833333333 , self.eps_freq:  192.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 96
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (2, 2), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.00515463917526 , self.eps_freq:  194.0 

success: 33 / 97
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (1, 1), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.00510204081633 , self.eps_freq:  197.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (8, 4), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.00505050505051 , self.eps_freq:  198.0 

Environment.act(): Primary agent has reached destination!
success: 35 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (2, 4), destination = (7, 5), deadline = 30
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.005 , self.eps_freq:  200.0 

success: 35 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.33333
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01370
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02778
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01000
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.15052
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02564
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.79074
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00215
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01695
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.21753
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09481
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.14572
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05796
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05610
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01695
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.73288
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00000
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.14286
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02326
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01961
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.14194
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.13455
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.91138
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00251
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.56533
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08050
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01370
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03306
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01961
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.90893
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00118
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01408
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01053
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04340
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01190
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03808
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08333
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03306
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04166
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09966
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02072
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02864
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.70403
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.49969
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.50375
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.55465
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.50188
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.50308
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50275
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.37641
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.61149
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50000
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.22334
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.19992
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.34165
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.50375
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 3.08515
--------------------------------------------------------------------------------
updated cells:  57 , self.total_cell_count: 2048 , updated_func_counter: 2413
self.alpha: 0.7 self.gamma: 0.005 , self.epsilon: 0.1 , success: 35
________________________________________________________________________________
Environment.reset(): Primary agent could not reach destination within deadline!
gma = 0.05
eps = 0.5
alp = 0.7
epsilon:  0.5
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (6, 5), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 2.5 , self.eps_freq:  1.0 

annealing now. self.epsilon: 2.5 , action:  None , deadline: 20
annealing now. self.epsilon: 2.5 , action:  left , deadline: 19
annealing now. self.epsilon: 2.5 , action:  right , deadline: 18
annealing now. self.epsilon: 2.5 , action:  right , deadline: 17
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 16
annealing now. self.epsilon: 2.5 , action:  left , deadline: 15
annealing now. self.epsilon: 2.5 , action:  right , deadline: 14
annealing now. self.epsilon: 2.5 , action:  None , deadline: 13
annealing now. self.epsilon: 2.5 , action:  left , deadline: 12
annealing now. self.epsilon: 2.5 , action:  right , deadline: 11
annealing now. self.epsilon: 2.5 , action:  None , deadline: 10
annealing now. self.epsilon: 2.5 , action:  left , deadline: 9
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 8
annealing now. self.epsilon: 2.5 , action:  None , deadline: 7
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 6
annealing now. self.epsilon: 2.5 , action:  right , deadline: 5
annealing now. self.epsilon: 2.5 , action:  left , deadline: 4
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 3
annealing now. self.epsilon: 2.5 , action:  right , deadline: 2
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (7, 1), destination = (2, 6), deadline = 50
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 1.25 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.25 , action:  left , deadline: 50
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 49
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 48
annealing now. self.epsilon: 1.25 , action:  right , deadline: 47
annealing now. self.epsilon: 1.25 , action:  None , deadline: 46
annealing now. self.epsilon: 1.25 , action:  right , deadline: 45
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 44
annealing now. self.epsilon: 1.25 , action:  left , deadline: 43
annealing now. self.epsilon: 1.25 , action:  right , deadline: 42
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 41
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 40
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 39
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 38
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 37
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 36
annealing now. self.epsilon: 1.25 , action:  left , deadline: 35
annealing now. self.epsilon: 1.25 , action:  right , deadline: 34
annealing now. self.epsilon: 1.25 , action:  right , deadline: 33
annealing now. self.epsilon: 1.25 , action:  right , deadline: 32
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 31
annealing now. self.epsilon: 1.25 , action:  right , deadline: 30
annealing now. self.epsilon: 1.25 , action:  right , deadline: 29
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 28
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 27
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 26
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 25
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 24
annealing now. self.epsilon: 1.25 , action:  right , deadline: 23
annealing now. self.epsilon: 1.25 , action:  right , deadline: 22
annealing now. self.epsilon: 1.25 , action:  right , deadline: 21
annealing now. self.epsilon: 1.25 , action:  right , deadline: 20
annealing now. self.epsilon: 1.25 , action:  left , deadline: 19
annealing now. self.epsilon: 1.25 , action:  right , deadline: 18
annealing now. self.epsilon: 1.25 , action:  right , deadline: 17
annealing now. self.epsilon: 1.25 , action:  left , deadline: 16
annealing now. self.epsilon: 1.25 , action:  None , deadline: 15
annealing now. self.epsilon: 1.25 , action:  right , deadline: 14
annealing now. self.epsilon: 1.25 , action:  None , deadline: 13
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 12
annealing now. self.epsilon: 1.25 , action:  left , deadline: 11
annealing now. self.epsilon: 1.25 , action:  None , deadline: 10
annealing now. self.epsilon: 1.25 , action:  None , deadline: 9
annealing now. self.epsilon: 1.25 , action:  left , deadline: 8
annealing now. self.epsilon: 1.25 , action:  left , deadline: 7
annealing now. self.epsilon: 1.25 , action:  None , deadline: 6
annealing now. self.epsilon: 1.25 , action:  right , deadline: 5
annealing now. self.epsilon: 1.25 , action:  None , deadline: 4
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 3
annealing now. self.epsilon: 1.25 , action:  right , deadline: 2
success: 0 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (7, 4), destination = (3, 4), deadline = 20
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.833333333333 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 20
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 18
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 16
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 14
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 12
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 10
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 8
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 6
Environment.act(): Primary agent has reached destination!
success: 1 / 3
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (3, 6), destination = (7, 1), deadline = 45
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.625 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.625 , action:  right , deadline: 44
annealing now. self.epsilon: 0.625 , action:  None , deadline: 42
annealing now. self.epsilon: 0.625 , action:  left , deadline: 40
annealing now. self.epsilon: 0.625 , action:  right , deadline: 38
Environment.act(): Primary agent has reached destination!
success: 2 / 4
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (4, 4), destination = (7, 6), deadline = 25
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  left , deadline: 24
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 22
annealing now. self.epsilon: 0.5 , action:  left , deadline: 20
annealing now. self.epsilon: 0.5 , action:  right , deadline: 18
annealing now. self.epsilon: 0.5 , action:  right , deadline: 16
annealing now. self.epsilon: 0.5 , action:  left , deadline: 14
annealing now. self.epsilon: 0.5 , action:  left , deadline: 12
annealing now. self.epsilon: 0.5 , action:  right , deadline: 10
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 8
annealing now. self.epsilon: 0.5 , action:  None , deadline: 6
annealing now. self.epsilon: 0.5 , action:  left , deadline: 4
success: 2 / 5
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (2, 3), destination = (8, 4), deadline = 35
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.416666666667 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.416666666667 , action:  right , deadline: 33
annealing now. self.epsilon: 0.416666666667 , action:  None , deadline: 30
annealing now. self.epsilon: 0.416666666667 , action:  forward , deadline: 27
annealing now. self.epsilon: 0.416666666667 , action:  left , deadline: 24
annealing now. self.epsilon: 0.416666666667 , action:  forward , deadline: 21
annealing now. self.epsilon: 0.416666666667 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.416666666667 , action:  right , deadline: 15
annealing now. self.epsilon: 0.416666666667 , action:  None , deadline: 12
annealing now. self.epsilon: 0.416666666667 , action:  None , deadline: 9
annealing now. self.epsilon: 0.416666666667 , action:  None , deadline: 6
success: 2 / 6
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 1), deadline = 50
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.357142857143 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 48
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 45
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 42
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 39
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 36
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 33
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 30
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 27
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 24
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 21
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 18
annealing now. self.epsilon: 0.357142857143 , action:  forward , deadline: 15
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 12
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 9
annealing now. self.epsilon: 0.357142857143 , action:  forward , deadline: 6
success: 2 / 7
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (4, 6), destination = (8, 5), deadline = 25
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.3125 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.3125 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.3125 , action:  left , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 3 / 8
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (3, 3), destination = (5, 1), deadline = 20
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.277777777778 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.277777777778 , action:  None , deadline: 20
annealing now. self.epsilon: 0.277777777778 , action:  left , deadline: 16
annealing now. self.epsilon: 0.277777777778 , action:  right , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 4 / 9
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (5, 3), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  left , deadline: 20
annealing now. self.epsilon: 0.25 , action:  right , deadline: 16
annealing now. self.epsilon: 0.25 , action:  left , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 5 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (7, 6), destination = (7, 1), deadline = 25
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.227272727273 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.227272727273 , action:  None , deadline: 25
annealing now. self.epsilon: 0.227272727273 , action:  left , deadline: 20
annealing now. self.epsilon: 0.227272727273 , action:  left , deadline: 15
Environment.act(): Primary agent has reached destination!
success: 6 / 11
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (3, 2), destination = (7, 5), deadline = 35
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.208333333333 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.208333333333 , action:  left , deadline: 35
annealing now. self.epsilon: 0.208333333333 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.208333333333 , action:  None , deadline: 25
annealing now. self.epsilon: 0.208333333333 , action:  None , deadline: 20
annealing now. self.epsilon: 0.208333333333 , action:  forward , deadline: 15
annealing now. self.epsilon: 0.208333333333 , action:  None , deadline: 10
Environment.act(): Primary agent has reached destination!
success: 7 / 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (2, 5), destination = (5, 2), deadline = 30
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.192307692308 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.192307692308 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.192307692308 , action:  None , deadline: 24
annealing now. self.epsilon: 0.192307692308 , action:  left , deadline: 18
annealing now. self.epsilon: 0.192307692308 , action:  left , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 8 / 13
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (8, 5), destination = (2, 1), deadline = 50
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.178571428571 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.178571428571 , action:  forward , deadline: 48
annealing now. self.epsilon: 0.178571428571 , action:  right , deadline: 42
annealing now. self.epsilon: 0.178571428571 , action:  None , deadline: 36
annealing now. self.epsilon: 0.178571428571 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.178571428571 , action:  right , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 9 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (1, 6), destination = (7, 4), deadline = 40
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 36
annealing now. self.epsilon: 0.166666666667 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.166666666667 , action:  left , deadline: 24
annealing now. self.epsilon: 0.166666666667 , action:  forward , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 10 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (8, 5), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.15625 , self.eps_freq:  7.0 

Environment.act(): Primary agent has reached destination!
success: 11 / 16
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (6, 3), destination = (1, 1), deadline = 35
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.147058823529 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.147058823529 , action:  forward , deadline: 35
annealing now. self.epsilon: 0.147058823529 , action:  None , deadline: 28
annealing now. self.epsilon: 0.147058823529 , action:  left , deadline: 21
Environment.act(): Primary agent has reached destination!
success: 12 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (8, 6), destination = (7, 1), deadline = 30
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.138888888889 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.138888888889 , action:  right , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 13 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (3, 5), destination = (5, 1), deadline = 30
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.131578947368 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.131578947368 , action:  None , deadline: 24
annealing now. self.epsilon: 0.131578947368 , action:  None , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 14 / 19
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (1, 4), destination = (6, 3), deadline = 30
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  None , deadline: 24
annealing now. self.epsilon: 0.125 , action:  left , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 15 / 20
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (3, 1), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.119047619048 , self.eps_freq:  9.0 

Environment.act(): Primary agent has reached destination!
success: 16 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (8, 4), destination = (1, 4), deadline = 35
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.113636363636 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.113636363636 , action:  left , deadline: 27
annealing now. self.epsilon: 0.113636363636 , action:  left , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 17 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (1, 4), destination = (8, 1), deadline = 50
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.108695652174 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.108695652174 , action:  right , deadline: 50
annealing now. self.epsilon: 0.108695652174 , action:  left , deadline: 40
annealing now. self.epsilon: 0.108695652174 , action:  right , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 18 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (6, 1), destination = (3, 5), deadline = 35
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.104166666667 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.104166666667 , action:  right , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 19 / 24
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (5, 4), destination = (8, 1), deadline = 30
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  None , deadline: 30
annealing now. self.epsilon: 0.1 , action:  forward , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 20 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (5, 6), destination = (1, 5), deadline = 25
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0961538461538 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0961538461538 , action:  forward , deadline: 22
Environment.act(): Primary agent has reached destination!
success: 21 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (4, 1), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0925925925926 , self.eps_freq:  11.0 

Environment.act(): Primary agent has reached destination!
success: 22 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (8, 2), destination = (2, 4), deadline = 40
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0892857142857 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0892857142857 , action:  None , deadline: 36
annealing now. self.epsilon: 0.0892857142857 , action:  right , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 23 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (1, 5), destination = (7, 4), deadline = 35
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0862068965517 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0862068965517 , action:  None , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 24 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (8, 4), destination = (2, 6), deadline = 40
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  None , deadline: 36
annealing now. self.epsilon: 0.0833333333333 , action:  left , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 25 / 30
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (6, 2), destination = (1, 6), deadline = 45
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0806451612903 , self.eps_freq:  13.0 

annealing now. self.epsilon: 0.0806451612903 , action:  forward , deadline: 39
annealing now. self.epsilon: 0.0806451612903 , action:  forward , deadline: 26
Environment.act(): Primary agent has reached destination!
success: 26 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (5, 2), destination = (2, 4), deadline = 25
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.078125 , self.eps_freq:  13.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (1, 4), destination = (6, 4), deadline = 25
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0757575757576 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 33
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (3, 3), destination = (8, 6), deadline = 40
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0735294117647 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0735294117647 , action:  left , deadline: 28
Environment.act(): Primary agent has reached destination!
success: 29 / 34
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (8, 4), destination = (2, 1), deadline = 45
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0714285714286 , action:  right , deadline: 42
Environment.act(): Primary agent has reached destination!
success: 30 / 35
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (7, 6), destination = (2, 6), deadline = 25
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0694444444444 , self.eps_freq:  15.0 

success: 30 / 36
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (4, 3), destination = (8, 5), deadline = 30
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0675675675676 , self.eps_freq:  15.0 

annealing now. self.epsilon: 0.0675675675676 , action:  right , deadline: 30
success: 30 / 37
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (7, 5), destination = (5, 2), deadline = 25
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0657894736842 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (8, 1), destination = (4, 3), deadline = 30
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0641025641026 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (7, 4), destination = (3, 5), deadline = 25
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 40
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (5, 4), destination = (2, 5), deadline = 20
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0609756097561 , self.eps_freq:  17.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 41
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (8, 6), destination = (4, 3), deadline = 35
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0595238095238 , self.eps_freq:  17.0 

annealing now. self.epsilon: 0.0595238095238 , action:  left , deadline: 34
Environment.act(): Primary agent has reached destination!
success: 35 / 42
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (3, 6), destination = (8, 1), deadline = 50
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0581395348837 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (6, 1), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0568181818182 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 44
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (8, 1), destination = (5, 2), deadline = 20
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (7, 1), destination = (8, 6), deadline = 30
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.054347826087 , self.eps_freq:  19.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 46
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (7, 2), destination = (3, 4), deadline = 30
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0531914893617 , self.eps_freq:  19.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 47
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (6, 4), destination = (3, 3), deadline = 20
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0520833333333 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (7, 1), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0510204081633 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (7, 5), destination = (7, 1), deadline = 20
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.05 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (1, 5), destination = (7, 1), deadline = 50
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0490196078431 , self.eps_freq:  21.0 

annealing now. self.epsilon: 0.0490196078431 , action:  None , deadline: 42
Environment.act(): Primary agent has reached destination!
success: 44 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (6, 1), destination = (8, 5), deadline = 30
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0480769230769 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 52
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (8, 1), destination = (6, 6), deadline = 35
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0471698113208 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (1, 6), destination = (8, 1), deadline = 60
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0462962962963 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 47 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (5, 6), destination = (8, 4), deadline = 25
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (4, 4), destination = (8, 3), deadline = 25
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0446428571429 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (1, 3), destination = (7, 1), deadline = 40
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0438596491228 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 57
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (2, 4), destination = (6, 2), deadline = 30
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0431034482759 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 58
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (2, 5), destination = (6, 3), deadline = 30
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0423728813559 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (7, 2), destination = (4, 5), deadline = 30
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

success: 52 / 60
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (1, 2), destination = (6, 4), deadline = 35
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0409836065574 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 53 / 61
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (7, 4), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0403225806452 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 54 / 62
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (6, 1), destination = (1, 3), deadline = 35
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0396825396825 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 55 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (5, 3), destination = (2, 1), deadline = 25
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0390625 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (8, 6), destination = (2, 2), deadline = 50
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 57 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (3, 4), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0378787878788 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 58 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (8, 1), destination = (1, 6), deadline = 60
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0373134328358 , self.eps_freq:  27.0 

annealing now. self.epsilon: 0.0373134328358 , action:  right , deadline: 54
Environment.act(): Primary agent has reached destination!
success: 59 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (4, 2), destination = (8, 4), deadline = 30
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0367647058824 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 60 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (7, 1), destination = (8, 5), deadline = 25
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.036231884058 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 61 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (2, 6), destination = (7, 1), deadline = 50
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 62 / 70
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (1, 1), destination = (4, 3), deadline = 25
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0352112676056 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 63 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (1, 2), destination = (2, 5), deadline = 20
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0347222222222 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 64 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (3, 5), destination = (8, 2), deadline = 40
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0342465753425 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 65 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (4, 4), destination = (2, 1), deadline = 25
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0337837837838 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 66 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (1, 4), destination = (6, 3), deadline = 30
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 67 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (2, 5), destination = (2, 1), deadline = 20
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0328947368421 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 68 / 76
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (6, 4), destination = (2, 2), deadline = 30
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0324675324675 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 69 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (3, 2), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0320512820513 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 70 / 78
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (7, 3), destination = (2, 3), deadline = 25
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0316455696203 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 71 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (8, 5), destination = (1, 5), deadline = 35
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 72 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (5, 6), destination = (3, 3), deadline = 25
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0308641975309 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 73 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (6, 2), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.030487804878 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 74 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (4, 1), destination = (1, 4), deadline = 30
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0301204819277 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 75 / 83
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (8, 3), destination = (1, 3), deadline = 35
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0297619047619 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 76 / 84
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (3, 5), destination = (6, 2), deadline = 30
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 77 / 85
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (7, 6), destination = (3, 6), deadline = 20
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0290697674419 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 78 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (2, 6), destination = (1, 1), deadline = 30
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0287356321839 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 79 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (3, 2), destination = (5, 5), deadline = 25
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0284090909091 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 80 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (6, 3), destination = (3, 1), deadline = 25
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0280898876404 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 81 / 89
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (8, 4), destination = (2, 3), deadline = 35
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 82 / 90
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (5, 4), destination = (1, 1), deadline = 35
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0274725274725 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 83 / 91
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (1, 2), destination = (6, 6), deadline = 45
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0271739130435 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 84 / 92
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (3, 5), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0268817204301 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 85 / 93
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (4, 3), destination = (8, 3), deadline = 20
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0265957446809 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 86 / 94
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (1, 5), destination = (6, 6), deadline = 30
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 87 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (8, 2), destination = (5, 4), deadline = 25
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0260416666667 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 88 / 96
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (6, 5), destination = (2, 2), deadline = 35
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0257731958763 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 89 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (2, 2), destination = (8, 4), deadline = 40
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0255102040816 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 90 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (1, 3), destination = (3, 6), deadline = 25
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0252525252525 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 91 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (8, 5), destination = (2, 2), deadline = 45
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 92 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99384
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01176
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.25000
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12307
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01124
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01538
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02880
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01020
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.48578
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.70786
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.21471
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.13971
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03941
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.13888
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06627
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01493
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.50195
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.01717
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01299
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08333
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01587
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07598
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02222
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.26691
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00320
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08333
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04688
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.00371
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03931
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03226
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.34543
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.44707
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03226
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01176
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.00857
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 4.00835
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.92984
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.52318
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.04665
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.99767
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.46248
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.24693
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.52599
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.51671
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.08224
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.00859
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.45741
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.24584
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 1.01762
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.82213
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.41322
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.00378
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.41723
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.02514
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.97910
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.49668
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.50656
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.50000
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.17610
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: -0.50000
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 4.27301
--------------------------------------------------------------------------------
updated cells:  61 , self.total_cell_count: 2048 , updated_func_counter: 1645
self.alpha: 0.7 self.gamma: 0.05 , self.epsilon: 0.5 , success: 92
________________________________________________________________________________
gma = 0.05
eps = 0.2
alp = 0.7
epsilon:  0.2
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (1, 4), destination = (4, 1), deadline = 30
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 1.0 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.0 , action:  forward , deadline: 30
annealing now. self.epsilon: 1.0 , action:  None , deadline: 29
annealing now. self.epsilon: 1.0 , action:  right , deadline: 28
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 27
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 26
annealing now. self.epsilon: 1.0 , action:  None , deadline: 25
annealing now. self.epsilon: 1.0 , action:  None , deadline: 24
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 23
annealing now. self.epsilon: 1.0 , action:  None , deadline: 22
annealing now. self.epsilon: 1.0 , action:  left , deadline: 21
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 20
annealing now. self.epsilon: 1.0 , action:  left , deadline: 19
annealing now. self.epsilon: 1.0 , action:  right , deadline: 18
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 17
annealing now. self.epsilon: 1.0 , action:  None , deadline: 16
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 15
annealing now. self.epsilon: 1.0 , action:  None , deadline: 14
annealing now. self.epsilon: 1.0 , action:  left , deadline: 13
annealing now. self.epsilon: 1.0 , action:  None , deadline: 12
annealing now. self.epsilon: 1.0 , action:  None , deadline: 11
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 10
annealing now. self.epsilon: 1.0 , action:  right , deadline: 9
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 8
annealing now. self.epsilon: 1.0 , action:  left , deadline: 7
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 6
annealing now. self.epsilon: 1.0 , action:  None , deadline: 5
annealing now. self.epsilon: 1.0 , action:  right , deadline: 4
annealing now. self.epsilon: 1.0 , action:  None , deadline: 3
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 2
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (1, 3), destination = (8, 3), deadline = 35
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  forward , deadline: 34
annealing now. self.epsilon: 0.5 , action:  left , deadline: 32
annealing now. self.epsilon: 0.5 , action:  None , deadline: 30
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 28
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 26
annealing now. self.epsilon: 0.5 , action:  left , deadline: 24
annealing now. self.epsilon: 0.5 , action:  right , deadline: 22
annealing now. self.epsilon: 0.5 , action:  left , deadline: 20
annealing now. self.epsilon: 0.5 , action:  None , deadline: 18
annealing now. self.epsilon: 0.5 , action:  left , deadline: 16
annealing now. self.epsilon: 0.5 , action:  right , deadline: 14
annealing now. self.epsilon: 0.5 , action:  None , deadline: 12
annealing now. self.epsilon: 0.5 , action:  right , deadline: 10
annealing now. self.epsilon: 0.5 , action:  None , deadline: 8
annealing now. self.epsilon: 0.5 , action:  left , deadline: 6
annealing now. self.epsilon: 0.5 , action:  right , deadline: 4
success: 0 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (7, 4), destination = (3, 6), deadline = 30
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.333333333333 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.333333333333 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.333333333333 , action:  None , deadline: 27
annealing now. self.epsilon: 0.333333333333 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.333333333333 , action:  None , deadline: 21
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 18
annealing now. self.epsilon: 0.333333333333 , action:  None , deadline: 15
annealing now. self.epsilon: 0.333333333333 , action:  right , deadline: 12
annealing now. self.epsilon: 0.333333333333 , action:  right , deadline: 9
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 6
success: 0 / 3
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (7, 5), destination = (2, 5), deadline = 25
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  left , deadline: 24
annealing now. self.epsilon: 0.25 , action:  right , deadline: 20
annealing now. self.epsilon: 0.25 , action:  left , deadline: 16
annealing now. self.epsilon: 0.25 , action:  None , deadline: 12
annealing now. self.epsilon: 0.25 , action:  None , deadline: 8
success: 0 / 4
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (1, 2), destination = (2, 5), deadline = 20
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.2 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.2 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.2 , action:  None , deadline: 15
annealing now. self.epsilon: 0.2 , action:  forward , deadline: 10
success: 0 / 5
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (8, 1), destination = (3, 3), deadline = 35
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 30
annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 24
annealing now. self.epsilon: 0.166666666667 , action:  left , deadline: 18
annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 12
success: 0 / 6
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (8, 3), destination = (2, 3), deadline = 30
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.142857142857 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.142857142857 , action:  None , deadline: 28
annealing now. self.epsilon: 0.142857142857 , action:  forward , deadline: 21
Environment.act(): Primary agent has reached destination!
success: 1 / 7
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (4, 2), destination = (1, 3), deadline = 20
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  left , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 2 / 8
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (7, 2), destination = (1, 5), deadline = 45
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.111111111111 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.111111111111 , action:  None , deadline: 45
annealing now. self.epsilon: 0.111111111111 , action:  forward , deadline: 36
annealing now. self.epsilon: 0.111111111111 , action:  right , deadline: 27
annealing now. self.epsilon: 0.111111111111 , action:  left , deadline: 18
success: 2 / 9
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (4, 4), destination = (8, 6), deadline = 30
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.1 , action:  forward , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 3 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (4, 5), destination = (7, 2), deadline = 30
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0909090909091 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0909090909091 , action:  forward , deadline: 22
success: 3 / 11
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (4, 5), destination = (8, 6), deadline = 25
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  right , deadline: 24
success: 3 / 12
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (5, 1), destination = (8, 2), deadline = 20
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0769230769231 , self.eps_freq:  13.0 

success: 3 / 13
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (8, 6), destination = (2, 3), deadline = 45
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0714285714286 , action:  right , deadline: 42
annealing now. self.epsilon: 0.0714285714286 , action:  right , deadline: 28
success: 3 / 14
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (5, 4), destination = (8, 5), deadline = 20
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0666666666667 , self.eps_freq:  15.0 

success: 3 / 15
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (8, 1), destination = (2, 3), deadline = 40
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

annealing now. self.epsilon: 0.0625 , action:  None , deadline: 32
success: 3 / 16
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (5, 6), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0588235294118 , self.eps_freq:  17.0 

success: 3 / 17
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (6, 4), destination = (2, 4), deadline = 20
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

success: 3 / 18
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (8, 4), destination = (3, 6), deadline = 35
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0526315789474 , self.eps_freq:  19.0 

success: 3 / 19
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (1, 2), destination = (5, 2), deadline = 20
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.05 , self.eps_freq:  20.0 

success: 3 / 20
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (5, 2), destination = (7, 4), deadline = 20
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.047619047619 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 4 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (1, 6), destination = (2, 3), deadline = 20
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

success: 4 / 22
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (7, 2), destination = (2, 5), deadline = 40
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0434782608696 , self.eps_freq:  23.0 

success: 4 / 23
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (8, 2), destination = (3, 3), deadline = 30
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

success: 4 / 24
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (4, 4), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.04 , self.eps_freq:  25.0 

success: 4 / 25
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (4, 1), destination = (8, 4), deadline = 35
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 5 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (7, 2), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.037037037037 , self.eps_freq:  27.0 

success: 5 / 27
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (3, 6), destination = (8, 2), deadline = 45
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

success: 5 / 28
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (2, 3), destination = (8, 5), deadline = 40
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0344827586207 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 6 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (2, 1), destination = (1, 4), deadline = 20
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

success: 6 / 30
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (6, 5), destination = (1, 6), deadline = 30
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0322580645161 , self.eps_freq:  31.0 

success: 6 / 31
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (3, 1), destination = (5, 6), deadline = 35
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 7 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (1, 3), destination = (5, 1), deadline = 30
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.030303030303 , self.eps_freq:  33.0 

success: 7 / 33
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (8, 6), destination = (1, 1), deadline = 60
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

success: 7 / 34
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (5, 1), destination = (1, 3), deadline = 30
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0285714285714 , self.eps_freq:  35.0 

success: 7 / 35
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (1, 4), destination = (3, 6), deadline = 20
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 8 / 36
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (3, 5), destination = (6, 4), deadline = 20
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.027027027027 , self.eps_freq:  37.0 

success: 8 / 37
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (4, 1), destination = (2, 6), deadline = 35
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

success: 8 / 38
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (6, 6), destination = (8, 4), deadline = 20
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.025641025641 , self.eps_freq:  39.0 

success: 8 / 39
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (5, 5), destination = (5, 1), deadline = 20
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.025 , self.eps_freq:  40.0 

success: 8 / 40
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (5, 2), destination = (2, 4), deadline = 25
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0243902439024 , self.eps_freq:  41.0 

success: 8 / 41
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (3, 6), destination = (3, 1), deadline = 25
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

success: 8 / 42
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (8, 6), destination = (4, 4), deadline = 30
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0232558139535 , self.eps_freq:  43.0 

Environment.act(): Primary agent has reached destination!
success: 9 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (2, 2), destination = (2, 6), deadline = 20
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

success: 9 / 44
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (6, 3), destination = (1, 5), deadline = 35
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0222222222222 , self.eps_freq:  45.0 

success: 9 / 45
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (7, 4), destination = (1, 5), deadline = 35
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

success: 9 / 46
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (8, 3), destination = (6, 5), deadline = 20
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0212765957447 , self.eps_freq:  47.0 

success: 9 / 47
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (6, 4), destination = (2, 2), deadline = 30
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

Environment.act(): Primary agent has reached destination!
success: 10 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (5, 2), destination = (2, 4), deadline = 25
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0204081632653 , self.eps_freq:  50.0 

success: 10 / 49
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (7, 3), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.02 , self.eps_freq:  50.0 

Environment.act(): Primary agent has reached destination!
success: 11 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (1, 3), destination = (5, 2), deadline = 25
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0196078431373 , self.eps_freq:  51.0 

success: 11 / 51
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (8, 1), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

success: 11 / 52
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (3, 2), destination = (8, 1), deadline = 30
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0188679245283 , self.eps_freq:  53.0 

success: 11 / 53
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (1, 2), destination = (8, 3), deadline = 40
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

Environment.act(): Primary agent has reached destination!
success: 12 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (1, 6), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0181818181818 , self.eps_freq:  55.0 

success: 12 / 55
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (5, 4), destination = (2, 1), deadline = 30
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

success: 12 / 56
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (4, 4), destination = (1, 5), deadline = 20
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0175438596491 , self.eps_freq:  57.0 

success: 12 / 57
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (1, 2), destination = (8, 5), deadline = 50
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

success: 12 / 58
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (2, 5), destination = (3, 2), deadline = 20
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0169491525424 , self.eps_freq:  59.0 

success: 12 / 59
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (1, 2), destination = (3, 6), deadline = 30
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

Environment.act(): Primary agent has reached destination!
success: 13 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (5, 5), destination = (2, 2), deadline = 30
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.016393442623 , self.eps_freq:  61.0 

Environment.act(): Primary agent has reached destination!
success: 14 / 61
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (2, 3), destination = (8, 2), deadline = 35
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

success: 14 / 62
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (1, 5), destination = (4, 6), deadline = 20
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.015873015873 , self.eps_freq:  63.0 

Environment.act(): Primary agent has reached destination!
success: 15 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (2, 4), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

Environment.act(): Primary agent has reached destination!
success: 16 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (5, 3), destination = (2, 6), deadline = 30
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0153846153846 , self.eps_freq:  65.0 

success: 16 / 65
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (4, 4), destination = (7, 6), deadline = 25
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

Environment.act(): Primary agent has reached destination!
success: 17 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (5, 2), destination = (3, 6), deadline = 30
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0149253731343 , self.eps_freq:  67.0 

success: 17 / 67
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (7, 4), destination = (1, 4), deadline = 30
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

Environment.act(): Primary agent has reached destination!
success: 18 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (5, 6), destination = (3, 2), deadline = 30
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0144927536232 , self.eps_freq:  69.0 

success: 18 / 69
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (4, 2), destination = (1, 4), deadline = 25
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

success: 18 / 70
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (1, 2), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0140845070423 , self.eps_freq:  71.0 

Environment.act(): Primary agent has reached destination!
success: 19 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (2, 1), destination = (3, 4), deadline = 20
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

success: 19 / 72
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (4, 2), destination = (3, 6), deadline = 25
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.013698630137 , self.eps_freq:  73.0 

success: 19 / 73
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (7, 4), destination = (1, 6), deadline = 40
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

success: 19 / 74
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (4, 3), destination = (1, 6), deadline = 30
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0133333333333 , self.eps_freq:  75.0 

success: 19 / 75
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (7, 4), destination = (1, 3), deadline = 35
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

success: 19 / 76
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (6, 3), destination = (2, 4), deadline = 25
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.012987012987 , self.eps_freq:  77.0 

success: 19 / 77
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (8, 3), destination = (2, 5), deadline = 40
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

success: 19 / 78
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (8, 1), destination = (4, 5), deadline = 40
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0126582278481 , self.eps_freq:  79.0 

success: 19 / 79
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (4, 6), destination = (1, 5), deadline = 20
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

Environment.act(): Primary agent has reached destination!
success: 20 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (5, 1), destination = (7, 4), deadline = 25
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0123456790123 , self.eps_freq:  81.0 

Environment.act(): Primary agent has reached destination!
success: 21 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (2, 3), destination = (7, 1), deadline = 35
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

success: 21 / 82
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (5, 1), destination = (3, 5), deadline = 30
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0120481927711 , self.eps_freq:  83.0 

success: 21 / 83
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (8, 1), destination = (1, 6), deadline = 60
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

success: 21 / 84
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (7, 1), destination = (3, 3), deadline = 30
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0117647058824 , self.eps_freq:  85.0 

success: 21 / 85
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (5, 3), destination = (8, 6), deadline = 30
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

Environment.act(): Primary agent has reached destination!
success: 22 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (6, 2), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0114942528736 , self.eps_freq:  87.0 

success: 22 / 87
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (7, 5), destination = (2, 1), deadline = 45
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

success: 22 / 88
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (4, 1), destination = (3, 4), deadline = 20
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0112359550562 , self.eps_freq:  89.0 

success: 22 / 89
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (5, 4), destination = (7, 6), deadline = 20
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

success: 22 / 90
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (7, 1), destination = (5, 4), deadline = 25
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.010989010989 , self.eps_freq:  91.0 

success: 22 / 91
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (8, 2), destination = (4, 6), deadline = 40
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

success: 22 / 92
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (2, 2), destination = (6, 5), deadline = 35
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.010752688172 , self.eps_freq:  93.0 

Environment.act(): Primary agent has reached destination!
success: 23 / 93
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (2, 2), destination = (7, 4), deadline = 35
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

success: 23 / 94
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (8, 2), destination = (6, 6), deadline = 30
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0105263157895 , self.eps_freq:  95.0 

success: 23 / 95
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (4, 2), destination = (7, 1), deadline = 20
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

success: 23 / 96
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (5, 4), destination = (2, 6), deadline = 25
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0103092783505 , self.eps_freq:  97.0 

success: 23 / 97
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (8, 1), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

success: 23 / 98
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (2, 6), destination = (7, 5), deadline = 30
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.010101010101 , self.eps_freq:  99.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (6, 1), destination = (4, 4), deadline = 25
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.01 , self.eps_freq:  100.0 

success: 24 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00303
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.23344
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06268
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01562
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01961
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06299
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01613
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12952
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.92198
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06250
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02941
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.04514
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09996
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07763
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.61309
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02139
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01333
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09432
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.13104
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01818
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.92430
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.40435
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00849
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01408
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03333
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.50000
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.74553
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.03020
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.43751
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.67198
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08333
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.98976
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.11207
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01220
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04954
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01205
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03791
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04892
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04120
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09535
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.03878
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.55970
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06147
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09729
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07272
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05568
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05814
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07636
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05409
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01205
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.27841
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 2.87724
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.09903
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.51214
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.00403
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.52492
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50511
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50645
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.67953
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.55776
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.20615
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.51438
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.98734
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.30051
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.91010
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.01143
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 1.02397
--------------------------------------------------------------------------------
updated cells:  67 , self.total_cell_count: 2048 , updated_func_counter: 2700
self.alpha: 0.7 self.gamma: 0.05 , self.epsilon: 0.2 , success: 24
________________________________________________________________________________
Environment.reset(): Primary agent could not reach destination within deadline!
gma = 0.05
eps = 0.1
alp = 0.7
epsilon:  0.1
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (1, 6), destination = (5, 6), deadline = 20
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  right , deadline: 20
annealing now. self.epsilon: 0.5 , action:  right , deadline: 18
annealing now. self.epsilon: 0.5 , action:  None , deadline: 16
annealing now. self.epsilon: 0.5 , action:  right , deadline: 14
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 12
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 10
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 8
Environment.act(): Primary agent has reached destination!
success: 1 / 1
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (3, 2), destination = (8, 4), deadline = 35
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  right , deadline: 32
annealing now. self.epsilon: 0.25 , action:  right , deadline: 28
annealing now. self.epsilon: 0.25 , action:  None , deadline: 24
annealing now. self.epsilon: 0.25 , action:  None , deadline: 20
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.25 , action:  None , deadline: 12
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 8
Environment.act(): Primary agent has reached destination!
success: 2 / 2
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (2, 1), destination = (7, 1), deadline = 25
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 18
annealing now. self.epsilon: 0.166666666667 , action:  left , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 3 / 3
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (5, 3), destination = (7, 5), deadline = 20
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  right , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 4 / 4
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (3, 5), destination = (8, 5), deadline = 25
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  left , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 5 / 5
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (6, 5), destination = (3, 6), deadline = 20
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

success: 5 / 6
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (6, 2), destination = (2, 5), deadline = 35
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0714285714286 , action:  forward , deadline: 28
success: 5 / 7
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (4, 1), destination = (7, 3), deadline = 25
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 6 / 8
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (8, 5), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 7 / 9
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (8, 2), destination = (4, 6), deadline = 40
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.05 , self.eps_freq:  20.0 

annealing now. self.epsilon: 0.05 , action:  forward , deadline: 40
success: 7 / 10
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (3, 1), destination = (1, 6), deadline = 35
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

success: 7 / 11
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (7, 4), destination = (2, 5), deadline = 30
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

success: 7 / 12
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (4, 2), destination = (8, 6), deadline = 40
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 8 / 13
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (7, 1), destination = (1, 3), deadline = 40
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

success: 8 / 14
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (3, 2), destination = (8, 5), deadline = 40
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 9 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (1, 4), destination = (6, 1), deadline = 40
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 10 / 16
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (2, 1), destination = (4, 5), deadline = 30
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 11 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (1, 6), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 12 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (2, 5), destination = (1, 2), deadline = 20
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 13 / 19
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (1, 4), destination = (5, 2), deadline = 30
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 14 / 20
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (4, 5), destination = (1, 1), deadline = 35
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

Environment.act(): Primary agent has reached destination!
success: 15 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (7, 4), destination = (2, 6), deadline = 35
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

success: 15 / 22
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (4, 3), destination = (8, 4), deadline = 25
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

Environment.act(): Primary agent has reached destination!
success: 16 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (8, 5), destination = (2, 4), deadline = 35
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

success: 16 / 24
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (1, 1), destination = (7, 4), deadline = 45
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.02 , self.eps_freq:  50.0 

Environment.act(): Primary agent has reached destination!
success: 17 / 25
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (2, 1), destination = (6, 1), deadline = 20
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

Environment.act(): Primary agent has reached destination!
success: 18 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (1, 1), destination = (4, 4), deadline = 30
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

Environment.act(): Primary agent has reached destination!
success: 19 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (1, 4), destination = (6, 4), deadline = 25
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

Environment.act(): Primary agent has reached destination!
success: 20 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (7, 5), destination = (2, 3), deadline = 35
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

Environment.act(): Primary agent has reached destination!
success: 21 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (8, 4), destination = (7, 1), deadline = 20
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

success: 21 / 30
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (5, 2), destination = (6, 5), deadline = 20
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

Environment.act(): Primary agent has reached destination!
success: 22 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (1, 3), destination = (8, 6), deadline = 50
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

Environment.act(): Primary agent has reached destination!
success: 23 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (4, 6), destination = (8, 1), deadline = 45
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

success: 23 / 33
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (7, 6), destination = (3, 5), deadline = 25
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

success: 23 / 34
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (2, 5), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 35
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (2, 5), destination = (6, 5), deadline = 20
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 36
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (3, 1), destination = (8, 2), deadline = 30
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 37
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (3, 1), destination = (1, 4), deadline = 25
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (1, 3), destination = (5, 2), deadline = 25
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (4, 4), destination = (1, 3), deadline = 20
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 40
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (7, 2), destination = (1, 4), deadline = 40
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

success: 29 / 41
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (4, 4), destination = (1, 1), deadline = 30
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

success: 29 / 42
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (8, 3), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (1, 6), destination = (2, 1), deadline = 30
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

success: 30 / 44
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (1, 1), destination = (7, 2), deadline = 35
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (3, 3), destination = (7, 1), deadline = 30
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

success: 31 / 46
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (6, 3), destination = (3, 5), deadline = 25
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

success: 31 / 47
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (6, 6), destination = (3, 1), deadline = 40
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (5, 4), destination = (7, 1), deadline = 25
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

success: 32 / 49
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (2, 4), destination = (1, 1), deadline = 20
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.01 , self.eps_freq:  100.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (6, 2), destination = (1, 4), deadline = 35
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.00980392156863 , self.eps_freq:  102.0 

success: 33 / 51
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (6, 6), destination = (4, 2), deadline = 30
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.00961538461538 , self.eps_freq:  104.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 52
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (3, 3), destination = (8, 5), deadline = 35
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.00943396226415 , self.eps_freq:  106.0 

Environment.act(): Primary agent has reached destination!
success: 35 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (5, 1), destination = (8, 6), deadline = 40
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.00925925925926 , self.eps_freq:  108.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (5, 1), destination = (3, 3), deadline = 20
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.00909090909091 , self.eps_freq:  110.0 

success: 36 / 55
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (4, 6), destination = (8, 1), deadline = 45
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00892857142857 , self.eps_freq:  112.0 

success: 36 / 56
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (7, 1), destination = (8, 5), deadline = 25
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.00877192982456 , self.eps_freq:  114.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 57
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (3, 6), destination = (7, 1), deadline = 45
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.00862068965517 , self.eps_freq:  116.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 58
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (2, 3), destination = (7, 6), deadline = 40
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.00847457627119 , self.eps_freq:  118.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (3, 1), destination = (2, 4), deadline = 20
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.00833333333333 , self.eps_freq:  120.0 

success: 39 / 60
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (6, 4), destination = (5, 1), deadline = 20
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.00819672131148 , self.eps_freq:  122.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 61
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (5, 2), destination = (7, 4), deadline = 20
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.00806451612903 , self.eps_freq:  124.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 62
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (3, 6), destination = (8, 3), deadline = 40
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.00793650793651 , self.eps_freq:  126.0 

success: 41 / 63
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (3, 5), destination = (5, 2), deadline = 25
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0078125 , self.eps_freq:  128.0 

success: 41 / 64
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 1), deadline = 50
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00769230769231 , self.eps_freq:  130.0 

success: 41 / 65
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (1, 3), destination = (5, 5), deadline = 30
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.00757575757576 , self.eps_freq:  132.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (6, 5), destination = (2, 1), deadline = 40
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.00746268656716 , self.eps_freq:  134.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (1, 4), destination = (8, 4), deadline = 35
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.00735294117647 , self.eps_freq:  136.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (2, 5), destination = (7, 1), deadline = 45
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.00724637681159 , self.eps_freq:  138.0 

success: 44 / 69
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (8, 1), destination = (4, 1), deadline = 20
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.00714285714286 , self.eps_freq:  140.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 70
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (7, 3), destination = (5, 6), deadline = 25
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.00704225352113 , self.eps_freq:  142.0 

success: 45 / 71
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (6, 2), destination = (3, 1), deadline = 20
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.00694444444444 , self.eps_freq:  144.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (1, 5), destination = (7, 5), deadline = 30
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.00684931506849 , self.eps_freq:  146.0 

Environment.act(): Primary agent has reached destination!
success: 47 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (4, 2), destination = (8, 5), deadline = 35
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.00675675675676 , self.eps_freq:  148.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (8, 2), destination = (2, 5), deadline = 45
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.00666666666667 , self.eps_freq:  150.0 

success: 48 / 75
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (6, 5), destination = (6, 1), deadline = 20
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.00657894736842 , self.eps_freq:  152.0 

success: 48 / 76
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (8, 3), destination = (3, 2), deadline = 30
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.00649350649351 , self.eps_freq:  154.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (2, 3), destination = (6, 6), deadline = 35
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.00641025641026 , self.eps_freq:  156.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 78
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (3, 4), destination = (7, 2), deadline = 30
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.00632911392405 , self.eps_freq:  158.0 

success: 50 / 79
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (5, 1), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.00625 , self.eps_freq:  160.0 

success: 50 / 80
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (3, 1), destination = (1, 5), deadline = 30
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.00617283950617 , self.eps_freq:  162.0 

success: 50 / 81
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (7, 5), destination = (3, 1), deadline = 40
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.00609756097561 , self.eps_freq:  164.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (4, 5), destination = (4, 1), deadline = 20
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.00602409638554 , self.eps_freq:  166.0 

success: 51 / 83
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (5, 2), destination = (7, 6), deadline = 30
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.00595238095238 , self.eps_freq:  168.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 84
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (6, 6), destination = (8, 4), deadline = 20
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.00588235294118 , self.eps_freq:  170.0 

success: 52 / 85
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (2, 1), destination = (1, 5), deadline = 25
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.00581395348837 , self.eps_freq:  172.0 

Environment.act(): Primary agent has reached destination!
success: 53 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (1, 3), destination = (6, 4), deadline = 30
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.00574712643678 , self.eps_freq:  174.0 

Environment.act(): Primary agent has reached destination!
success: 54 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (2, 3), destination = (5, 6), deadline = 30
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.00568181818182 , self.eps_freq:  176.0 

Environment.act(): Primary agent has reached destination!
success: 55 / 88
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (3, 1), destination = (8, 1), deadline = 25
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00561797752809 , self.eps_freq:  178.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 89
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (6, 4), destination = (8, 1), deadline = 25
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00555555555556 , self.eps_freq:  180.0 

success: 56 / 90
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (2, 2), destination = (5, 6), deadline = 35
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.00549450549451 , self.eps_freq:  182.0 

Environment.act(): Primary agent has reached destination!
success: 57 / 91
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (2, 1), destination = (6, 4), deadline = 35
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0054347826087 , self.eps_freq:  184.0 

Environment.act(): Primary agent has reached destination!
success: 58 / 92
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (8, 2), destination = (3, 3), deadline = 30
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.00537634408602 , self.eps_freq:  186.0 

success: 58 / 93
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (6, 2), destination = (3, 3), deadline = 20
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.00531914893617 , self.eps_freq:  188.0 

success: 58 / 94
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (6, 3), destination = (3, 4), deadline = 20
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.00526315789474 , self.eps_freq:  190.0 

Environment.act(): Primary agent has reached destination!
success: 59 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (3, 3), destination = (7, 2), deadline = 25
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.00520833333333 , self.eps_freq:  192.0 

success: 59 / 96
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (1, 3), destination = (4, 6), deadline = 30
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.00515463917526 , self.eps_freq:  194.0 

Environment.act(): Primary agent has reached destination!
success: 60 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (1, 6), destination = (6, 1), deadline = 50
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.00510204081633 , self.eps_freq:  197.0 

success: 60 / 98
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (5, 5), destination = (2, 1), deadline = 35
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.00505050505051 , self.eps_freq:  198.0 

Environment.act(): Primary agent has reached destination!
success: 61 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (3, 6), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.005 , self.eps_freq:  200.0 

Environment.act(): Primary agent has reached destination!
success: 62 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00804
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02941
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10000
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02703
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03491
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03529
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.48786
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05079
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.50064
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04000
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.01250
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.24521
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.11526
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01124
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.19343
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.52868
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.15157
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01124
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07692
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02151
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01010
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.00000
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00178
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09725
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02552
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02381
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03297
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01316
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02439
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04545
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01538
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.98625
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01220
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.45939
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05799
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01562
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04398
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01667
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.16214
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04546
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01667
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01266
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08822
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05675
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.01135
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01786
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09587
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.19140
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02439
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03030
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09091
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.54055
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: -1.00000
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 3.40470
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 2.49898
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.66035
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.07717
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50469
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.33754
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.11075
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.70873
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.32905
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.19914
--------------------------------------------------------------------------------
updated cells:  63 , self.total_cell_count: 2048 , updated_func_counter: 2391
self.alpha: 0.7 self.gamma: 0.05 , self.epsilon: 0.1 , success: 62
________________________________________________________________________________
gma = 0.1
eps = 0.5
alp = 0.7
epsilon:  0.5
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (8, 6), destination = (2, 5), deadline = 35
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 2.5 , self.eps_freq:  1.0 

annealing now. self.epsilon: 2.5 , action:  left , deadline: 35
annealing now. self.epsilon: 2.5 , action:  right , deadline: 34
annealing now. self.epsilon: 2.5 , action:  left , deadline: 33
annealing now. self.epsilon: 2.5 , action:  right , deadline: 32
annealing now. self.epsilon: 2.5 , action:  left , deadline: 31
annealing now. self.epsilon: 2.5 , action:  left , deadline: 30
annealing now. self.epsilon: 2.5 , action:  right , deadline: 29
annealing now. self.epsilon: 2.5 , action:  left , deadline: 28
annealing now. self.epsilon: 2.5 , action:  left , deadline: 27
annealing now. self.epsilon: 2.5 , action:  None , deadline: 26
annealing now. self.epsilon: 2.5 , action:  right , deadline: 25
annealing now. self.epsilon: 2.5 , action:  left , deadline: 24
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 23
annealing now. self.epsilon: 2.5 , action:  right , deadline: 22
annealing now. self.epsilon: 2.5 , action:  None , deadline: 21
annealing now. self.epsilon: 2.5 , action:  None , deadline: 20
annealing now. self.epsilon: 2.5 , action:  left , deadline: 19
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 18
annealing now. self.epsilon: 2.5 , action:  right , deadline: 17
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 16
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 15
annealing now. self.epsilon: 2.5 , action:  right , deadline: 14
annealing now. self.epsilon: 2.5 , action:  None , deadline: 13
annealing now. self.epsilon: 2.5 , action:  None , deadline: 12
annealing now. self.epsilon: 2.5 , action:  None , deadline: 11
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 10
annealing now. self.epsilon: 2.5 , action:  right , deadline: 9
annealing now. self.epsilon: 2.5 , action:  None , deadline: 8
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 7
annealing now. self.epsilon: 2.5 , action:  right , deadline: 6
annealing now. self.epsilon: 2.5 , action:  None , deadline: 5
annealing now. self.epsilon: 2.5 , action:  right , deadline: 4
annealing now. self.epsilon: 2.5 , action:  None , deadline: 3
annealing now. self.epsilon: 2.5 , action:  None , deadline: 2
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (6, 5), destination = (4, 1), deadline = 30
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 1.25 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.25 , action:  None , deadline: 30
annealing now. self.epsilon: 1.25 , action:  left , deadline: 29
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 28
annealing now. self.epsilon: 1.25 , action:  None , deadline: 27
annealing now. self.epsilon: 1.25 , action:  right , deadline: 26
annealing now. self.epsilon: 1.25 , action:  right , deadline: 25
annealing now. self.epsilon: 1.25 , action:  None , deadline: 24
annealing now. self.epsilon: 1.25 , action:  left , deadline: 23
annealing now. self.epsilon: 1.25 , action:  None , deadline: 22
annealing now. self.epsilon: 1.25 , action:  right , deadline: 21
annealing now. self.epsilon: 1.25 , action:  None , deadline: 20
annealing now. self.epsilon: 1.25 , action:  right , deadline: 19
annealing now. self.epsilon: 1.25 , action:  left , deadline: 18
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 17
annealing now. self.epsilon: 1.25 , action:  right , deadline: 16
annealing now. self.epsilon: 1.25 , action:  right , deadline: 15
annealing now. self.epsilon: 1.25 , action:  None , deadline: 14
annealing now. self.epsilon: 1.25 , action:  left , deadline: 13
annealing now. self.epsilon: 1.25 , action:  left , deadline: 12
annealing now. self.epsilon: 1.25 , action:  right , deadline: 11
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 10
annealing now. self.epsilon: 1.25 , action:  right , deadline: 9
annealing now. self.epsilon: 1.25 , action:  right , deadline: 8
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 7
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 6
annealing now. self.epsilon: 1.25 , action:  None , deadline: 5
annealing now. self.epsilon: 1.25 , action:  None , deadline: 4
annealing now. self.epsilon: 1.25 , action:  right , deadline: 3
annealing now. self.epsilon: 1.25 , action:  left , deadline: 2
success: 0 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (5, 3), destination = (8, 5), deadline = 25
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.833333333333 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 24
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 22
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 20
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 18
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 16
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 14
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 12
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 10
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 8
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 6
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 4
success: 0 / 3
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (4, 4), destination = (1, 3), deadline = 20
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.625 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.625 , action:  left , deadline: 20
annealing now. self.epsilon: 0.625 , action:  None , deadline: 18
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.625 , action:  None , deadline: 14
annealing now. self.epsilon: 0.625 , action:  left , deadline: 12
annealing now. self.epsilon: 0.625 , action:  None , deadline: 10
annealing now. self.epsilon: 0.625 , action:  None , deadline: 8
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 6
annealing now. self.epsilon: 0.625 , action:  left , deadline: 4
success: 0 / 4
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (2, 5), destination = (5, 2), deadline = 30
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  None , deadline: 30
annealing now. self.epsilon: 0.5 , action:  None , deadline: 28
annealing now. self.epsilon: 0.5 , action:  left , deadline: 26
annealing now. self.epsilon: 0.5 , action:  left , deadline: 24
annealing now. self.epsilon: 0.5 , action:  None , deadline: 22
annealing now. self.epsilon: 0.5 , action:  right , deadline: 20
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.5 , action:  left , deadline: 16
annealing now. self.epsilon: 0.5 , action:  left , deadline: 14
annealing now. self.epsilon: 0.5 , action:  None , deadline: 12
annealing now. self.epsilon: 0.5 , action:  left , deadline: 10
annealing now. self.epsilon: 0.5 , action:  right , deadline: 8
annealing now. self.epsilon: 0.5 , action:  right , deadline: 6
annealing now. self.epsilon: 0.5 , action:  None , deadline: 4
Environment.act(): Primary agent has reached destination!
success: 1 / 5
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (2, 2), destination = (7, 3), deadline = 30
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.416666666667 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.416666666667 , action:  right , deadline: 30
annealing now. self.epsilon: 0.416666666667 , action:  None , deadline: 27
annealing now. self.epsilon: 0.416666666667 , action:  right , deadline: 24
annealing now. self.epsilon: 0.416666666667 , action:  left , deadline: 21
Environment.act(): Primary agent has reached destination!
success: 2 / 6
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (3, 2), destination = (8, 6), deadline = 45
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.357142857143 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.357142857143 , action:  forward , deadline: 45
annealing now. self.epsilon: 0.357142857143 , action:  forward , deadline: 42
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 39
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 36
annealing now. self.epsilon: 0.357142857143 , action:  forward , deadline: 33
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 30
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 27
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 24
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 21
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 18
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 15
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 12
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 9
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 6
Environment.act(): Primary agent has reached destination!
success: 3 / 7
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (7, 1), destination = (2, 3), deadline = 35
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.3125 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.3125 , action:  right , deadline: 32
annealing now. self.epsilon: 0.3125 , action:  left , deadline: 28
annealing now. self.epsilon: 0.3125 , action:  None , deadline: 24
annealing now. self.epsilon: 0.3125 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.3125 , action:  None , deadline: 16
annealing now. self.epsilon: 0.3125 , action:  right , deadline: 12
annealing now. self.epsilon: 0.3125 , action:  right , deadline: 8
success: 3 / 8
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (3, 5), destination = (6, 4), deadline = 20
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.277777777778 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.277777777778 , action:  left , deadline: 20
annealing now. self.epsilon: 0.277777777778 , action:  left , deadline: 16
annealing now. self.epsilon: 0.277777777778 , action:  left , deadline: 12
annealing now. self.epsilon: 0.277777777778 , action:  None , deadline: 8
success: 3 / 9
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (4, 3), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.25 , action:  None , deadline: 16
annealing now. self.epsilon: 0.25 , action:  right , deadline: 12
annealing now. self.epsilon: 0.25 , action:  None , deadline: 8
Environment.act(): Primary agent has reached destination!
success: 4 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (4, 4), destination = (8, 4), deadline = 20
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.227272727273 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.227272727273 , action:  None , deadline: 20
annealing now. self.epsilon: 0.227272727273 , action:  right , deadline: 15
annealing now. self.epsilon: 0.227272727273 , action:  forward , deadline: 10
success: 4 / 11
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (2, 1), destination = (8, 5), deadline = 50
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.208333333333 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.208333333333 , action:  left , deadline: 50
annealing now. self.epsilon: 0.208333333333 , action:  right , deadline: 45
annealing now. self.epsilon: 0.208333333333 , action:  left , deadline: 40
annealing now. self.epsilon: 0.208333333333 , action:  left , deadline: 35
annealing now. self.epsilon: 0.208333333333 , action:  None , deadline: 30
annealing now. self.epsilon: 0.208333333333 , action:  left , deadline: 25
annealing now. self.epsilon: 0.208333333333 , action:  left , deadline: 20
annealing now. self.epsilon: 0.208333333333 , action:  right , deadline: 15
Environment.act(): Primary agent has reached destination!
success: 5 / 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (8, 2), destination = (3, 4), deadline = 35
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.192307692308 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.192307692308 , action:  left , deadline: 30
annealing now. self.epsilon: 0.192307692308 , action:  None , deadline: 24
annealing now. self.epsilon: 0.192307692308 , action:  right , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 6 / 13
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (2, 6), destination = (2, 1), deadline = 25
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.178571428571 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.178571428571 , action:  None , deadline: 24
annealing now. self.epsilon: 0.178571428571 , action:  None , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 7 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (2, 2), destination = (6, 5), deadline = 35
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  left , deadline: 30
annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 8 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (2, 6), destination = (4, 2), deadline = 30
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.15625 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.15625 , action:  left , deadline: 28
annealing now. self.epsilon: 0.15625 , action:  forward , deadline: 21
Environment.act(): Primary agent has reached destination!
success: 9 / 16
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (4, 1), destination = (8, 3), deadline = 30
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.147058823529 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.147058823529 , action:  forward , deadline: 28
Environment.act(): Primary agent has reached destination!
success: 10 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (4, 2), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.138888888889 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.138888888889 , action:  right , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 11 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (5, 3), destination = (2, 1), deadline = 25
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.131578947368 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.131578947368 , action:  left , deadline: 24
annealing now. self.epsilon: 0.131578947368 , action:  left , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 12 / 19
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (7, 5), destination = (2, 1), deadline = 45
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  left , deadline: 40
annealing now. self.epsilon: 0.125 , action:  left , deadline: 32
Environment.act(): Primary agent has reached destination!
success: 13 / 20
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (8, 5), destination = (8, 1), deadline = 20
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.119047619048 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.119047619048 , action:  None , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 14 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (5, 6), destination = (8, 3), deadline = 30
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.113636363636 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.113636363636 , action:  right , deadline: 27
annealing now. self.epsilon: 0.113636363636 , action:  right , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 15 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (6, 6), destination = (1, 4), deadline = 35
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.108695652174 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.108695652174 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.108695652174 , action:  None , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 16 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (8, 2), destination = (3, 2), deadline = 25
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.104166666667 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.104166666667 , action:  left , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 17 / 24
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (6, 3), destination = (4, 1), deadline = 20
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  right , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 18 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (6, 4), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0961538461538 , self.eps_freq:  11.0 

Environment.act(): Primary agent has reached destination!
success: 19 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (3, 5), destination = (2, 1), deadline = 25
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0925925925926 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0925925925926 , action:  left , deadline: 22
Environment.act(): Primary agent has reached destination!
success: 20 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (5, 5), destination = (1, 6), deadline = 25
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0892857142857 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0892857142857 , action:  None , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 21 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (4, 6), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0862068965517 , self.eps_freq:  12.0 

Environment.act(): Primary agent has reached destination!
success: 22 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (5, 2), destination = (1, 4), deadline = 30
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  forward , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 23 / 30
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (1, 5), destination = (7, 3), deadline = 40
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0806451612903 , self.eps_freq:  13.0 

annealing now. self.epsilon: 0.0806451612903 , action:  left , deadline: 39
Environment.act(): Primary agent has reached destination!
success: 24 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (3, 4), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.078125 , self.eps_freq:  13.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (6, 1), destination = (8, 6), deadline = 35
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0757575757576 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0757575757576 , action:  forward , deadline: 28
Environment.act(): Primary agent has reached destination!
success: 26 / 33
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (7, 1), destination = (1, 3), deadline = 40
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0735294117647 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0735294117647 , action:  None , deadline: 28
Environment.act(): Primary agent has reached destination!
success: 27 / 34
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (7, 1), destination = (3, 5), deadline = 40
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0714285714286 , action:  right , deadline: 28
Environment.act(): Primary agent has reached destination!
success: 28 / 35
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (1, 4), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0694444444444 , self.eps_freq:  15.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 36
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (5, 3), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0675675675676 , self.eps_freq:  15.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 37
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (6, 3), destination = (1, 2), deadline = 30
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0657894736842 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (4, 4), destination = (8, 4), deadline = 20
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0641025641026 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (8, 4), destination = (4, 6), deadline = 30
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 40
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (8, 5), destination = (3, 5), deadline = 25
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0609756097561 , self.eps_freq:  17.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 41
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (1, 4), destination = (7, 6), deadline = 40
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0595238095238 , self.eps_freq:  17.0 

annealing now. self.epsilon: 0.0595238095238 , action:  forward , deadline: 34
Environment.act(): Primary agent has reached destination!
success: 35 / 42
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (5, 6), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0581395348837 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (8, 3), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0568181818182 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 44
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (8, 6), destination = (2, 1), deadline = 55
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

annealing now. self.epsilon: 0.0555555555556 , action:  left , deadline: 54
Environment.act(): Primary agent has reached destination!
success: 38 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (3, 2), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.054347826087 , self.eps_freq:  19.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 46
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (7, 3), destination = (6, 6), deadline = 20
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0531914893617 , self.eps_freq:  19.0 

success: 39 / 47
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (8, 3), destination = (6, 5), deadline = 20
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0520833333333 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (8, 2), destination = (7, 6), deadline = 25
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0510204081633 , self.eps_freq:  20.0 

success: 40 / 49
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (5, 5), destination = (2, 6), deadline = 20
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.05 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (8, 4), destination = (5, 6), deadline = 25
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0490196078431 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (7, 1), destination = (7, 6), deadline = 25
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0480769230769 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 52
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (5, 2), destination = (3, 5), deadline = 25
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0471698113208 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (3, 1), destination = (3, 5), deadline = 20
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0462962962963 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (2, 6), destination = (4, 2), deadline = 30
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (4, 4), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0446428571429 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 47 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (3, 1), destination = (7, 6), deadline = 45
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0438596491228 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 57
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (3, 1), destination = (7, 1), deadline = 20
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0431034482759 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 58
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (8, 5), destination = (4, 2), deadline = 35
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0423728813559 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (7, 6), destination = (1, 4), deadline = 40
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (4, 2), destination = (1, 1), deadline = 20
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0409836065574 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 61
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (2, 4), destination = (7, 2), deadline = 35
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0403225806452 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 53 / 62
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (2, 6), destination = (8, 6), deadline = 30
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0396825396825 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 54 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (4, 2), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0390625 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 55 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (2, 2), destination = (7, 6), deadline = 45
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (7, 1), destination = (2, 3), deadline = 35
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0378787878788 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 57 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (2, 5), destination = (7, 3), deadline = 35
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0373134328358 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 58 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (3, 2), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0367647058824 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 59 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (8, 2), destination = (4, 4), deadline = 30
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.036231884058 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 60 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (1, 4), destination = (6, 2), deadline = 35
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 61 / 70
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (8, 5), destination = (1, 6), deadline = 40
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0352112676056 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 62 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (8, 2), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0347222222222 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 63 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (5, 4), destination = (3, 1), deadline = 25
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0342465753425 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 64 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (1, 5), destination = (6, 2), deadline = 40
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0337837837838 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 65 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (5, 5), destination = (8, 1), deadline = 35
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 66 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (4, 6), destination = (1, 1), deadline = 40
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0328947368421 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 67 / 76
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (8, 1), destination = (1, 4), deadline = 50
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0324675324675 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 68 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (1, 1), destination = (8, 6), deadline = 60
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0320512820513 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 69 / 78
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (2, 2), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0316455696203 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 70 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (6, 1), destination = (6, 5), deadline = 20
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 71 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (2, 5), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0308641975309 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 72 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 4), deadline = 35
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.030487804878 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 73 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (8, 6), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0301204819277 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 74 / 83
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (7, 5), destination = (1, 4), deadline = 35
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0297619047619 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 75 / 84
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (1, 2), destination = (7, 2), deadline = 30
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 76 / 85
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (3, 6), destination = (7, 1), deadline = 45
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0290697674419 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 77 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (6, 2), destination = (2, 3), deadline = 25
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0287356321839 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 78 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (8, 6), destination = (6, 2), deadline = 30
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0284090909091 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 79 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (7, 5), destination = (4, 3), deadline = 25
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0280898876404 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 80 / 89
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (6, 6), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 81 / 90
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (5, 1), destination = (1, 1), deadline = 20
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0274725274725 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 82 / 91
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (7, 4), destination = (3, 3), deadline = 25
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0271739130435 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 83 / 92
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (1, 4), destination = (2, 1), deadline = 20
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0268817204301 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 84 / 93
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (6, 6), destination = (1, 2), deadline = 45
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0265957446809 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 85 / 94
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (6, 6), destination = (8, 2), deadline = 30
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 86 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (2, 6), destination = (1, 3), deadline = 20
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0260416666667 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 87 / 96
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (6, 3), destination = (3, 4), deadline = 20
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0257731958763 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 88 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (7, 3), destination = (1, 1), deadline = 40
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0255102040816 , self.eps_freq:  40.0 

success: 88 / 98
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (4, 1), destination = (8, 3), deadline = 30
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0252525252525 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 89 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (2, 2), destination = (5, 6), deadline = 35
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 90 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.98653
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01613
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.11762
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02803
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03054
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04301
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06793
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03394
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01852
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.61073
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.90573
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01493
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03126
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.74948
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.22163
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04903
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02260
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07143
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02273
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.81161
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02041
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04021
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99835
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01282
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02857
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08249
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02128
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.48786
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12500
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.05124
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06978
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.35317
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03226
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04168
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.66303
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.98739
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02083
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02941
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.06895
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03739
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.00000
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01163
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05557
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.01650
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 3.57773
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.59290
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.68804
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: -0.12436
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.53060
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.01374
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.30086
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50453
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.03505
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.53193
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.04774
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.63494
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.26296
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 3.18363
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.99983
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.53117
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.28892
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.49396
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.50000
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.01318
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.51926
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.06952
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.02493
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.01187
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: -0.05263
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: -0.12500
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.51182
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.08882
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.00776
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 4.05499
--------------------------------------------------------------------------------
updated cells:  74 , self.total_cell_count: 2048 , updated_func_counter: 1722
self.alpha: 0.7 self.gamma: 0.1 , self.epsilon: 0.5 , success: 90
________________________________________________________________________________
gma = 0.1
eps = 0.2
alp = 0.7
epsilon:  0.2
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (6, 2), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 1.0 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.0 , action:  right , deadline: 25
annealing now. self.epsilon: 1.0 , action:  left , deadline: 24
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 23
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 22
annealing now. self.epsilon: 1.0 , action:  None , deadline: 21
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 20
annealing now. self.epsilon: 1.0 , action:  left , deadline: 19
annealing now. self.epsilon: 1.0 , action:  left , deadline: 18
annealing now. self.epsilon: 1.0 , action:  left , deadline: 17
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 16
annealing now. self.epsilon: 1.0 , action:  right , deadline: 15
annealing now. self.epsilon: 1.0 , action:  right , deadline: 14
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 13
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 12
annealing now. self.epsilon: 1.0 , action:  right , deadline: 11
annealing now. self.epsilon: 1.0 , action:  left , deadline: 10
annealing now. self.epsilon: 1.0 , action:  left , deadline: 9
annealing now. self.epsilon: 1.0 , action:  left , deadline: 8
annealing now. self.epsilon: 1.0 , action:  left , deadline: 7
annealing now. self.epsilon: 1.0 , action:  left , deadline: 6
annealing now. self.epsilon: 1.0 , action:  left , deadline: 5
annealing now. self.epsilon: 1.0 , action:  None , deadline: 4
annealing now. self.epsilon: 1.0 , action:  right , deadline: 3
annealing now. self.epsilon: 1.0 , action:  right , deadline: 2
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (3, 5), destination = (7, 6), deadline = 25
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.5 , action:  right , deadline: 22
annealing now. self.epsilon: 0.5 , action:  left , deadline: 20
annealing now. self.epsilon: 0.5 , action:  right , deadline: 18
annealing now. self.epsilon: 0.5 , action:  right , deadline: 16
annealing now. self.epsilon: 0.5 , action:  None , deadline: 14
annealing now. self.epsilon: 0.5 , action:  None , deadline: 12
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 10
annealing now. self.epsilon: 0.5 , action:  right , deadline: 8
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 6
annealing now. self.epsilon: 0.5 , action:  None , deadline: 4
success: 0 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (1, 3), destination = (5, 4), deadline = 25
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.333333333333 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.333333333333 , action:  right , deadline: 24
annealing now. self.epsilon: 0.333333333333 , action:  None , deadline: 21
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 18
annealing now. self.epsilon: 0.333333333333 , action:  right , deadline: 15
annealing now. self.epsilon: 0.333333333333 , action:  right , deadline: 12
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 9
annealing now. self.epsilon: 0.333333333333 , action:  forward , deadline: 6
success: 0 / 3
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (1, 1), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  None , deadline: 20
annealing now. self.epsilon: 0.25 , action:  left , deadline: 16
annealing now. self.epsilon: 0.25 , action:  None , deadline: 12
annealing now. self.epsilon: 0.25 , action:  left , deadline: 8
success: 0 / 4
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (8, 6), destination = (3, 5), deadline = 30
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.2 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.2 , action:  right , deadline: 30
annealing now. self.epsilon: 0.2 , action:  left , deadline: 25
annealing now. self.epsilon: 0.2 , action:  None , deadline: 20
annealing now. self.epsilon: 0.2 , action:  right , deadline: 15
annealing now. self.epsilon: 0.2 , action:  left , deadline: 10
success: 0 / 5
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (3, 2), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 18
annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 12
success: 0 / 6
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (7, 4), destination = (4, 1), deadline = 30
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.142857142857 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.142857142857 , action:  forward , deadline: 28
annealing now. self.epsilon: 0.142857142857 , action:  left , deadline: 21
annealing now. self.epsilon: 0.142857142857 , action:  forward , deadline: 14
success: 0 / 7
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (6, 6), destination = (1, 5), deadline = 30
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  left , deadline: 24
annealing now. self.epsilon: 0.125 , action:  right , deadline: 16
success: 0 / 8
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (1, 4), destination = (7, 3), deadline = 35
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.111111111111 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.111111111111 , action:  forward , deadline: 27
annealing now. self.epsilon: 0.111111111111 , action:  None , deadline: 18
success: 0 / 9
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (8, 1), destination = (7, 6), deadline = 30
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  left , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 1 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (8, 6), destination = (4, 1), deadline = 45
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0909090909091 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0909090909091 , action:  left , deadline: 44
annealing now. self.epsilon: 0.0909090909091 , action:  right , deadline: 33
annealing now. self.epsilon: 0.0909090909091 , action:  None , deadline: 22
success: 1 / 11
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (3, 5), destination = (7, 4), deadline = 25
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  None , deadline: 24
success: 1 / 12
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (3, 6), destination = (5, 3), deadline = 25
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0769230769231 , self.eps_freq:  13.0 

success: 1 / 13
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (1, 6), destination = (7, 2), deadline = 50
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0714285714286 , action:  right , deadline: 42
annealing now. self.epsilon: 0.0714285714286 , action:  forward , deadline: 28
success: 1 / 14
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (1, 3), destination = (7, 3), deadline = 30
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0666666666667 , self.eps_freq:  15.0 

annealing now. self.epsilon: 0.0666666666667 , action:  forward , deadline: 30
success: 1 / 15
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (7, 1), destination = (1, 2), deadline = 35
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

annealing now. self.epsilon: 0.0625 , action:  forward , deadline: 32
success: 1 / 16
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (2, 6), destination = (7, 6), deadline = 25
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0588235294118 , self.eps_freq:  17.0 

success: 1 / 17
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (3, 5), destination = (3, 1), deadline = 20
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

success: 1 / 18
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (5, 1), destination = (8, 4), deadline = 30
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0526315789474 , self.eps_freq:  19.0 

success: 1 / 19
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (3, 5), destination = (8, 6), deadline = 30
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.05 , self.eps_freq:  20.0 

success: 1 / 20
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (8, 6), destination = (2, 1), deadline = 55
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.047619047619 , self.eps_freq:  21.0 

annealing now. self.epsilon: 0.047619047619 , action:  left , deadline: 42
success: 1 / 21
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (7, 5), destination = (2, 5), deadline = 25
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

success: 1 / 22
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (7, 5), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0434782608696 , self.eps_freq:  23.0 

success: 1 / 23
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (3, 5), destination = (8, 5), deadline = 25
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

success: 1 / 24
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (3, 6), destination = (1, 3), deadline = 25
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.04 , self.eps_freq:  25.0 

success: 1 / 25
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (2, 1), destination = (8, 2), deadline = 35
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

success: 1 / 26
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (7, 6), destination = (3, 6), deadline = 20
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.037037037037 , self.eps_freq:  27.0 

success: 1 / 27
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (5, 5), destination = (3, 2), deadline = 25
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

success: 1 / 28
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (2, 1), destination = (8, 3), deadline = 40
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0344827586207 , self.eps_freq:  29.0 

success: 1 / 29
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (3, 6), destination = (2, 3), deadline = 20
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

success: 1 / 30
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (2, 5), destination = (6, 3), deadline = 30
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0322580645161 , self.eps_freq:  31.0 

success: 1 / 31
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (6, 1), destination = (2, 1), deadline = 20
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

success: 1 / 32
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (6, 4), destination = (3, 6), deadline = 25
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.030303030303 , self.eps_freq:  33.0 

success: 1 / 33
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (4, 6), destination = (7, 1), deadline = 40
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

success: 1 / 34
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (5, 5), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0285714285714 , self.eps_freq:  35.0 

success: 1 / 35
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (6, 6), destination = (4, 1), deadline = 35
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

success: 1 / 36
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (3, 1), destination = (7, 2), deadline = 25
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.027027027027 , self.eps_freq:  37.0 

success: 1 / 37
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (2, 5), destination = (5, 3), deadline = 25
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

success: 1 / 38
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (8, 5), destination = (4, 2), deadline = 35
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.025641025641 , self.eps_freq:  39.0 

success: 1 / 39
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (8, 2), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.025 , self.eps_freq:  40.0 

success: 1 / 40
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (8, 6), destination = (2, 5), deadline = 35
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0243902439024 , self.eps_freq:  41.0 

success: 1 / 41
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (1, 4), destination = (6, 2), deadline = 35
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

success: 1 / 42
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (7, 6), destination = (2, 2), deadline = 45
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0232558139535 , self.eps_freq:  43.0 

success: 1 / 43
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (2, 5), destination = (5, 1), deadline = 35
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

success: 1 / 44
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (3, 4), destination = (7, 5), deadline = 25
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0222222222222 , self.eps_freq:  45.0 

success: 1 / 45
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (4, 1), destination = (7, 6), deadline = 40
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

success: 1 / 46
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (3, 4), destination = (8, 2), deadline = 35
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0212765957447 , self.eps_freq:  47.0 

success: 1 / 47
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (5, 1), destination = (8, 2), deadline = 20
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

success: 1 / 48
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (8, 3), destination = (4, 2), deadline = 25
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0204081632653 , self.eps_freq:  50.0 

success: 1 / 49
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (6, 3), destination = (3, 4), deadline = 20
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.02 , self.eps_freq:  50.0 

success: 1 / 50
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (3, 1), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0196078431373 , self.eps_freq:  51.0 

success: 1 / 51
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (4, 6), destination = (2, 1), deadline = 35
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

success: 1 / 52
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (7, 6), destination = (4, 1), deadline = 40
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0188679245283 , self.eps_freq:  53.0 

success: 1 / 53
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (5, 3), destination = (2, 4), deadline = 20
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

success: 1 / 54
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (4, 4), destination = (2, 6), deadline = 20
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0181818181818 , self.eps_freq:  55.0 

success: 1 / 55
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (2, 1), destination = (8, 4), deadline = 45
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

success: 1 / 56
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (6, 4), destination = (1, 3), deadline = 30
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0175438596491 , self.eps_freq:  57.0 

success: 1 / 57
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (2, 3), destination = (7, 5), deadline = 35
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

success: 1 / 58
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (8, 5), destination = (4, 1), deadline = 40
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0169491525424 , self.eps_freq:  59.0 

success: 1 / 59
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (8, 6), destination = (4, 4), deadline = 30
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

success: 1 / 60
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (4, 4), destination = (2, 6), deadline = 20
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.016393442623 , self.eps_freq:  61.0 

success: 1 / 61
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (4, 2), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

success: 1 / 62
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (3, 3), destination = (8, 5), deadline = 35
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.015873015873 , self.eps_freq:  63.0 

success: 1 / 63
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (7, 1), destination = (4, 6), deadline = 40
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

success: 1 / 64
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (7, 5), destination = (3, 2), deadline = 35
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0153846153846 , self.eps_freq:  65.0 

success: 1 / 65
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (3, 5), destination = (8, 6), deadline = 30
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

success: 1 / 66
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (7, 1), destination = (8, 6), deadline = 30
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0149253731343 , self.eps_freq:  67.0 

success: 1 / 67
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (4, 1), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

success: 1 / 68
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (3, 5), destination = (7, 5), deadline = 20
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0144927536232 , self.eps_freq:  69.0 

success: 1 / 69
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (3, 4), destination = (7, 4), deadline = 20
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

success: 1 / 70
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (3, 3), destination = (7, 1), deadline = 30
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0140845070423 , self.eps_freq:  71.0 

success: 1 / 71
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (2, 3), destination = (7, 6), deadline = 40
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

success: 1 / 72
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (8, 5), destination = (7, 2), deadline = 20
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.013698630137 , self.eps_freq:  73.0 

success: 1 / 73
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (3, 5), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

success: 1 / 74
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (8, 6), destination = (3, 3), deadline = 40
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0133333333333 , self.eps_freq:  75.0 

success: 1 / 75
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (2, 3), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

success: 1 / 76
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (8, 6), destination = (4, 2), deadline = 40
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.012987012987 , self.eps_freq:  77.0 

success: 1 / 77
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (4, 6), destination = (2, 3), deadline = 25
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

success: 1 / 78
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (3, 2), destination = (6, 4), deadline = 25
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0126582278481 , self.eps_freq:  79.0 

success: 1 / 79
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (1, 5), destination = (6, 4), deadline = 30
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

success: 1 / 80
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (2, 5), destination = (6, 5), deadline = 20
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0123456790123 , self.eps_freq:  81.0 

success: 1 / 81
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (1, 2), destination = (1, 6), deadline = 20
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

success: 1 / 82
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (4, 4), destination = (6, 6), deadline = 20
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0120481927711 , self.eps_freq:  83.0 

success: 1 / 83
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (7, 4), destination = (2, 2), deadline = 35
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

success: 1 / 84
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (1, 3), destination = (6, 2), deadline = 30
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0117647058824 , self.eps_freq:  85.0 

success: 1 / 85
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (7, 6), destination = (1, 4), deadline = 40
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

success: 1 / 86
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (2, 5), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0114942528736 , self.eps_freq:  87.0 

success: 1 / 87
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (7, 2), destination = (2, 1), deadline = 30
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

success: 1 / 88
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (1, 5), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0112359550562 , self.eps_freq:  89.0 

success: 1 / 89
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (3, 3), destination = (8, 6), deadline = 40
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

success: 1 / 90
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (6, 2), destination = (6, 6), deadline = 20
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.010989010989 , self.eps_freq:  91.0 

success: 1 / 91
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (7, 6), destination = (3, 1), deadline = 45
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

success: 1 / 92
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (6, 3), destination = (2, 5), deadline = 30
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.010752688172 , self.eps_freq:  93.0 

success: 1 / 93
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (8, 1), destination = (3, 1), deadline = 25
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

success: 1 / 94
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (5, 4), destination = (8, 6), deadline = 25
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0105263157895 , self.eps_freq:  95.0 

success: 1 / 95
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (8, 1), destination = (1, 5), deadline = 55
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

success: 1 / 96
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (7, 5), destination = (2, 2), deadline = 40
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0103092783505 , self.eps_freq:  97.0 

success: 1 / 97
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (1, 6), destination = (5, 4), deadline = 30
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

success: 1 / 98
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (8, 1), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.010101010101 , self.eps_freq:  99.0 

success: 1 / 99
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (3, 2), destination = (8, 5), deadline = 40
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.01 , self.eps_freq:  100.0 

success: 1 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99810
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03323
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.51165
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01562
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08588
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.14334
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.14286
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.51824
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02564
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04989
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.95545
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.05733
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.53230
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.11606
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12165
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.20668
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06759
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04118
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.16835
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.95394
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09262
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.25658
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.00000
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.60133
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05163
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03333
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.50000
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.98724
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02439
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01299
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03175
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08333
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.11656
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01075
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.74716
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.39094
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09091
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.15303
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.15069
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06723
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02162
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.20000
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01075
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.20000
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.35922
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.22228
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.96163
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.52924
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.01240
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.50297
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.29204
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.49608
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.30157
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 2.01328
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 1.98659
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.52793
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.08881
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.00695
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.51766
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.17398
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.51250
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.01324
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: -0.19833
--------------------------------------------------------------------------------
updated cells:  63 , self.total_cell_count: 2048 , updated_func_counter: 3043
self.alpha: 0.7 self.gamma: 0.1 , self.epsilon: 0.2 , success: 1
________________________________________________________________________________
Environment.reset(): Primary agent could not reach destination within deadline!
gma = 0.1
eps = 0.1
alp = 0.7
epsilon:  0.1
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (1, 1), destination = (8, 2), deadline = 40
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  right , deadline: 40
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 38
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 36
annealing now. self.epsilon: 0.5 , action:  right , deadline: 34
annealing now. self.epsilon: 0.5 , action:  right , deadline: 32
annealing now. self.epsilon: 0.5 , action:  right , deadline: 30
annealing now. self.epsilon: 0.5 , action:  None , deadline: 28
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 26
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.5 , action:  left , deadline: 22
annealing now. self.epsilon: 0.5 , action:  None , deadline: 20
annealing now. self.epsilon: 0.5 , action:  right , deadline: 18
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.5 , action:  left , deadline: 14
annealing now. self.epsilon: 0.5 , action:  None , deadline: 12
annealing now. self.epsilon: 0.5 , action:  left , deadline: 10
annealing now. self.epsilon: 0.5 , action:  None , deadline: 8
annealing now. self.epsilon: 0.5 , action:  right , deadline: 6
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 4
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (7, 3), destination = (3, 6), deadline = 35
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  forward , deadline: 32
annealing now. self.epsilon: 0.25 , action:  right , deadline: 28
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.25 , action:  None , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 1 / 2
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (7, 2), destination = (1, 1), deadline = 35
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 30
annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 24
annealing now. self.epsilon: 0.166666666667 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 12
success: 1 / 3
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (2, 1), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  right , deadline: 24
annealing now. self.epsilon: 0.125 , action:  left , deadline: 16
success: 1 / 4
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (7, 4), destination = (8, 1), deadline = 20
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  right , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 2 / 5
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (1, 1), destination = (7, 1), deadline = 30
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  left , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 3 / 6
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (1, 6), destination = (7, 2), deadline = 50
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0714285714286 , action:  None , deadline: 42
Environment.act(): Primary agent has reached destination!
success: 4 / 7
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (6, 6), destination = (7, 2), deadline = 25
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 5 / 8
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (1, 6), destination = (8, 1), deadline = 60
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

annealing now. self.epsilon: 0.0555555555556 , action:  None , deadline: 54
annealing now. self.epsilon: 0.0555555555556 , action:  None , deadline: 36
Environment.act(): Primary agent has reached destination!
success: 6 / 9
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (3, 2), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.05 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 7 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (3, 5), destination = (1, 3), deadline = 20
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 8 / 11
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (2, 1), destination = (6, 6), deadline = 45
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 9 / 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (2, 4), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 10 / 13
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (7, 4), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 11 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (7, 6), destination = (3, 3), deadline = 35
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 12 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (7, 1), destination = (2, 3), deadline = 35
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 13 / 16
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (4, 6), destination = (6, 2), deadline = 30
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 14 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (4, 6), destination = (7, 1), deadline = 40
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 15 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (7, 5), destination = (3, 6), deadline = 25
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

success: 15 / 19
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (8, 2), destination = (2, 1), deadline = 35
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 16 / 20
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (6, 2), destination = (1, 2), deadline = 25
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

Environment.act(): Primary agent has reached destination!
success: 17 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (8, 5), destination = (2, 1), deadline = 50
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

Environment.act(): Primary agent has reached destination!
success: 18 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (8, 2), destination = (1, 2), deadline = 35
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

Environment.act(): Primary agent has reached destination!
success: 19 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (1, 3), destination = (3, 1), deadline = 20
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

Environment.act(): Primary agent has reached destination!
success: 20 / 24
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (3, 4), destination = (7, 2), deadline = 30
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.02 , self.eps_freq:  50.0 

Environment.act(): Primary agent has reached destination!
success: 21 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (4, 6), destination = (1, 2), deadline = 35
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

Environment.act(): Primary agent has reached destination!
success: 22 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (1, 1), destination = (4, 5), deadline = 35
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

Environment.act(): Primary agent has reached destination!
success: 23 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (1, 1), destination = (6, 3), deadline = 35
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (3, 6), destination = (2, 3), deadline = 20
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (3, 4), destination = (2, 1), deadline = 20
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 30
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (1, 5), destination = (4, 2), deadline = 30
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (5, 3), destination = (2, 5), deadline = 25
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (4, 5), destination = (5, 2), deadline = 20
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 33
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (8, 1), destination = (4, 5), deadline = 40
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 34
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (7, 6), destination = (6, 1), deadline = 30
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 35
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (6, 2), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 36
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (3, 5), destination = (7, 5), deadline = 20
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 37
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (1, 6), destination = (7, 5), deadline = 35
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

success: 33 / 38
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (4, 3), destination = (1, 5), deadline = 25
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (3, 3), destination = (8, 2), deadline = 30
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

success: 34 / 40
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (4, 6), destination = (3, 1), deadline = 30
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

Environment.act(): Primary agent has reached destination!
success: 35 / 41
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (7, 6), destination = (5, 1), deadline = 35
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

success: 35 / 42
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (4, 2), destination = (7, 1), deadline = 20
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (7, 5), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 44
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (8, 5), destination = (3, 1), deadline = 45
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (4, 1), destination = (3, 4), deadline = 20
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 46
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (2, 1), destination = (5, 3), deadline = 25
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 47
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (7, 5), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (2, 2), destination = (7, 1), deadline = 30
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (8, 6), destination = (5, 4), deadline = 25
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.01 , self.eps_freq:  100.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (8, 6), destination = (4, 6), deadline = 20
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.00980392156863 , self.eps_freq:  102.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (2, 2), destination = (5, 5), deadline = 30
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.00961538461538 , self.eps_freq:  104.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 52
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (4, 4), destination = (2, 1), deadline = 25
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.00943396226415 , self.eps_freq:  106.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (1, 5), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.00925925925926 , self.eps_freq:  108.0 

Environment.act(): Primary agent has reached destination!
success: 47 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (4, 1), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.00909090909091 , self.eps_freq:  110.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (8, 4), destination = (4, 1), deadline = 35
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.00892857142857 , self.eps_freq:  112.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (8, 3), destination = (3, 4), deadline = 30
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.00877192982456 , self.eps_freq:  114.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 57
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (2, 1), destination = (3, 4), deadline = 20
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.00862068965517 , self.eps_freq:  116.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 58
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (3, 2), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.00847457627119 , self.eps_freq:  118.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (5, 2), destination = (3, 5), deadline = 25
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.00833333333333 , self.eps_freq:  120.0 

Environment.act(): Primary agent has reached destination!
success: 53 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (4, 2), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.00819672131148 , self.eps_freq:  122.0 

Environment.act(): Primary agent has reached destination!
success: 54 / 61
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (8, 1), destination = (5, 3), deadline = 25
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.00806451612903 , self.eps_freq:  124.0 

Environment.act(): Primary agent has reached destination!
success: 55 / 62
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (7, 6), destination = (5, 2), deadline = 30
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.00793650793651 , self.eps_freq:  126.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (3, 5), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0078125 , self.eps_freq:  128.0 

Environment.act(): Primary agent has reached destination!
success: 57 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (5, 3), destination = (7, 1), deadline = 20
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.00769230769231 , self.eps_freq:  130.0 

Environment.act(): Primary agent has reached destination!
success: 58 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (7, 3), destination = (3, 2), deadline = 25
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.00757575757576 , self.eps_freq:  132.0 

Environment.act(): Primary agent has reached destination!
success: 59 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (7, 4), destination = (1, 5), deadline = 35
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.00746268656716 , self.eps_freq:  134.0 

Environment.act(): Primary agent has reached destination!
success: 60 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (4, 1), destination = (5, 5), deadline = 25
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.00735294117647 , self.eps_freq:  136.0 

Environment.act(): Primary agent has reached destination!
success: 61 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (2, 4), destination = (7, 6), deadline = 35
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.00724637681159 , self.eps_freq:  138.0 

Environment.act(): Primary agent has reached destination!
success: 62 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (6, 4), destination = (5, 1), deadline = 20
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.00714285714286 , self.eps_freq:  140.0 

Environment.act(): Primary agent has reached destination!
success: 63 / 70
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (5, 4), destination = (1, 3), deadline = 25
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.00704225352113 , self.eps_freq:  142.0 

Environment.act(): Primary agent has reached destination!
success: 64 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (6, 3), destination = (1, 2), deadline = 30
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.00694444444444 , self.eps_freq:  144.0 

Environment.act(): Primary agent has reached destination!
success: 65 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (7, 2), destination = (3, 5), deadline = 35
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.00684931506849 , self.eps_freq:  146.0 

Environment.act(): Primary agent has reached destination!
success: 66 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (5, 6), destination = (4, 1), deadline = 30
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.00675675675676 , self.eps_freq:  148.0 

Environment.act(): Primary agent has reached destination!
success: 67 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (2, 6), destination = (8, 2), deadline = 50
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.00666666666667 , self.eps_freq:  150.0 

Environment.act(): Primary agent has reached destination!
success: 68 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (6, 1), destination = (8, 4), deadline = 25
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.00657894736842 , self.eps_freq:  152.0 

Environment.act(): Primary agent has reached destination!
success: 69 / 76
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (1, 4), destination = (8, 5), deadline = 40
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.00649350649351 , self.eps_freq:  154.0 

Environment.act(): Primary agent has reached destination!
success: 70 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (6, 5), destination = (2, 5), deadline = 20
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.00641025641026 , self.eps_freq:  156.0 

Environment.act(): Primary agent has reached destination!
success: 71 / 78
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (6, 4), destination = (8, 1), deadline = 25
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00632911392405 , self.eps_freq:  158.0 

Environment.act(): Primary agent has reached destination!
success: 72 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (8, 2), destination = (6, 4), deadline = 20
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.00625 , self.eps_freq:  160.0 

Environment.act(): Primary agent has reached destination!
success: 73 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (6, 3), destination = (8, 5), deadline = 20
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.00617283950617 , self.eps_freq:  162.0 

Environment.act(): Primary agent has reached destination!
success: 74 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (2, 2), destination = (7, 6), deadline = 45
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.00609756097561 , self.eps_freq:  164.0 

Environment.act(): Primary agent has reached destination!
success: 75 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (8, 2), destination = (2, 4), deadline = 40
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.00602409638554 , self.eps_freq:  166.0 

Environment.act(): Primary agent has reached destination!
success: 76 / 83
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (1, 3), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.00595238095238 , self.eps_freq:  168.0 

Environment.act(): Primary agent has reached destination!
success: 77 / 84
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (2, 6), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.00588235294118 , self.eps_freq:  170.0 

Environment.act(): Primary agent has reached destination!
success: 78 / 85
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (1, 1), destination = (4, 6), deadline = 40
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.00581395348837 , self.eps_freq:  172.0 

Environment.act(): Primary agent has reached destination!
success: 79 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (7, 5), destination = (2, 6), deadline = 30
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.00574712643678 , self.eps_freq:  174.0 

Environment.act(): Primary agent has reached destination!
success: 80 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (7, 2), destination = (5, 5), deadline = 25
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.00568181818182 , self.eps_freq:  176.0 

Environment.act(): Primary agent has reached destination!
success: 81 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (5, 4), destination = (2, 6), deadline = 25
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.00561797752809 , self.eps_freq:  178.0 

Environment.act(): Primary agent has reached destination!
success: 82 / 89
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (7, 6), destination = (3, 3), deadline = 35
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.00555555555556 , self.eps_freq:  180.0 

Environment.act(): Primary agent has reached destination!
success: 83 / 90
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (6, 5), destination = (1, 1), deadline = 45
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.00549450549451 , self.eps_freq:  182.0 

Environment.act(): Primary agent has reached destination!
success: 84 / 91
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (3, 1), destination = (8, 4), deadline = 40
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0054347826087 , self.eps_freq:  184.0 

Environment.act(): Primary agent has reached destination!
success: 85 / 92
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (1, 4), destination = (7, 3), deadline = 35
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.00537634408602 , self.eps_freq:  186.0 

Environment.act(): Primary agent has reached destination!
success: 86 / 93
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (7, 6), destination = (2, 2), deadline = 45
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.00531914893617 , self.eps_freq:  188.0 

Environment.act(): Primary agent has reached destination!
success: 87 / 94
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (5, 4), destination = (8, 3), deadline = 20
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.00526315789474 , self.eps_freq:  190.0 

Environment.act(): Primary agent has reached destination!
success: 88 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (1, 3), destination = (5, 1), deadline = 30
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.00520833333333 , self.eps_freq:  192.0 

Environment.act(): Primary agent has reached destination!
success: 89 / 96
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (4, 4), destination = (8, 2), deadline = 30
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.00515463917526 , self.eps_freq:  194.0 

Environment.act(): Primary agent has reached destination!
success: 90 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (5, 2), destination = (8, 6), deadline = 35
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.00510204081633 , self.eps_freq:  197.0 

success: 90 / 98
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (6, 2), destination = (2, 4), deadline = 30
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.00505050505051 , self.eps_freq:  198.0 

Environment.act(): Primary agent has reached destination!
success: 91 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (2, 1), destination = (5, 5), deadline = 35
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.005 , self.eps_freq:  200.0 

Environment.act(): Primary agent has reached destination!
success: 92 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.98799
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.18882
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09361
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.13458
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03704
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03333
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09053
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.89258
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06023
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.00963
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.09408
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.71924
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.13008
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.22918
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04287
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.89548
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.23782
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.01013
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00003
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.36922
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05557
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.21470
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04707
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09197
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.01512
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.00114
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02128
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06250
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06506
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.01009
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.17008
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08249
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02941
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.24927
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.00583
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 3.72231
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.99936
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.58781
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.54009
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50000
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.32070
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.62891
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.55000
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.00250
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: -0.16667
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.96028
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 3.65043
--------------------------------------------------------------------------------
updated cells:  47 , self.total_cell_count: 2048 , updated_func_counter: 1549
self.alpha: 0.7 self.gamma: 0.1 , self.epsilon: 0.1 , success: 92
________________________________________________________________________________
gma = 0.005
eps = 0.5
alp = 0.5
epsilon:  0.5
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (4, 1), destination = (3, 6), deadline = 30
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 2.5 , self.eps_freq:  1.0 

annealing now. self.epsilon: 2.5 , action:  forward , deadline: 30
annealing now. self.epsilon: 2.5 , action:  right , deadline: 29
Environment.act(): Primary agent has reached destination!
success: 1 / 1
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (8, 5), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 1.25 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.25 , action:  forward , deadline: 25
annealing now. self.epsilon: 1.25 , action:  left , deadline: 24
annealing now. self.epsilon: 1.25 , action:  right , deadline: 23
annealing now. self.epsilon: 1.25 , action:  None , deadline: 22
annealing now. self.epsilon: 1.25 , action:  None , deadline: 21
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 20
annealing now. self.epsilon: 1.25 , action:  right , deadline: 19
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 18
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 17
annealing now. self.epsilon: 1.25 , action:  None , deadline: 16
annealing now. self.epsilon: 1.25 , action:  right , deadline: 15
annealing now. self.epsilon: 1.25 , action:  None , deadline: 14
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 13
annealing now. self.epsilon: 1.25 , action:  right , deadline: 12
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 11
annealing now. self.epsilon: 1.25 , action:  right , deadline: 10
annealing now. self.epsilon: 1.25 , action:  right , deadline: 9
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 8
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 7
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 6
annealing now. self.epsilon: 1.25 , action:  None , deadline: 5
annealing now. self.epsilon: 1.25 , action:  None , deadline: 4
annealing now. self.epsilon: 1.25 , action:  None , deadline: 3
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 2
Environment.act(): Primary agent has reached destination!
success: 2 / 2
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (4, 2), destination = (7, 6), deadline = 35
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.833333333333 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 34
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 32
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 30
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 28
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 26
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 24
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 22
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 20
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 18
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 14
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 12
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 10
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 8
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 6
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 4
success: 2 / 3
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (1, 6), destination = (7, 6), deadline = 30
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.625 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.625 , action:  None , deadline: 30
annealing now. self.epsilon: 0.625 , action:  left , deadline: 28
annealing now. self.epsilon: 0.625 , action:  right , deadline: 26
annealing now. self.epsilon: 0.625 , action:  right , deadline: 24
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 22
annealing now. self.epsilon: 0.625 , action:  left , deadline: 20
annealing now. self.epsilon: 0.625 , action:  right , deadline: 18
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.625 , action:  left , deadline: 14
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 12
annealing now. self.epsilon: 0.625 , action:  left , deadline: 10
annealing now. self.epsilon: 0.625 , action:  left , deadline: 8
annealing now. self.epsilon: 0.625 , action:  right , deadline: 6
annealing now. self.epsilon: 0.625 , action:  right , deadline: 4
success: 2 / 4
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (7, 5), destination = (3, 6), deadline = 25
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  left , deadline: 24
annealing now. self.epsilon: 0.5 , action:  left , deadline: 22
annealing now. self.epsilon: 0.5 , action:  left , deadline: 20
annealing now. self.epsilon: 0.5 , action:  left , deadline: 18
annealing now. self.epsilon: 0.5 , action:  right , deadline: 16
annealing now. self.epsilon: 0.5 , action:  None , deadline: 14
annealing now. self.epsilon: 0.5 , action:  left , deadline: 12
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 10
annealing now. self.epsilon: 0.5 , action:  None , deadline: 8
annealing now. self.epsilon: 0.5 , action:  left , deadline: 6
annealing now. self.epsilon: 0.5 , action:  None , deadline: 4
success: 2 / 5
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (8, 6), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.416666666667 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.416666666667 , action:  None , deadline: 18
annealing now. self.epsilon: 0.416666666667 , action:  right , deadline: 15
annealing now. self.epsilon: 0.416666666667 , action:  right , deadline: 12
annealing now. self.epsilon: 0.416666666667 , action:  right , deadline: 9
annealing now. self.epsilon: 0.416666666667 , action:  right , deadline: 6
success: 2 / 6
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (8, 4), destination = (2, 3), deadline = 35
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.357142857143 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 33
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 30
annealing now. self.epsilon: 0.357142857143 , action:  forward , deadline: 27
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 24
annealing now. self.epsilon: 0.357142857143 , action:  forward , deadline: 21
annealing now. self.epsilon: 0.357142857143 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 15
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 12
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 9
annealing now. self.epsilon: 0.357142857143 , action:  forward , deadline: 6
success: 2 / 7
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (1, 4), destination = (5, 2), deadline = 30
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.3125 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.3125 , action:  right , deadline: 28
annealing now. self.epsilon: 0.3125 , action:  left , deadline: 24
annealing now. self.epsilon: 0.3125 , action:  left , deadline: 20
annealing now. self.epsilon: 0.3125 , action:  left , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 3 / 8
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (2, 5), destination = (6, 2), deadline = 35
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.277777777778 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.277777777778 , action:  left , deadline: 32
annealing now. self.epsilon: 0.277777777778 , action:  left , deadline: 28
Environment.act(): Primary agent has reached destination!
success: 4 / 9
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (4, 1), destination = (3, 6), deadline = 30
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  right , deadline: 28
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.25 , action:  left , deadline: 20
annealing now. self.epsilon: 0.25 , action:  right , deadline: 16
annealing now. self.epsilon: 0.25 , action:  left , deadline: 12
annealing now. self.epsilon: 0.25 , action:  right , deadline: 8
Environment.act(): Primary agent has reached destination!
success: 5 / 10
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (7, 4), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.227272727273 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.227272727273 , action:  forward , deadline: 25
annealing now. self.epsilon: 0.227272727273 , action:  right , deadline: 20
annealing now. self.epsilon: 0.227272727273 , action:  left , deadline: 15
annealing now. self.epsilon: 0.227272727273 , action:  None , deadline: 10
Environment.act(): Primary agent has reached destination!
success: 6 / 11
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (1, 6), destination = (8, 2), deadline = 55
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.208333333333 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.208333333333 , action:  None , deadline: 55
annealing now. self.epsilon: 0.208333333333 , action:  left , deadline: 50
annealing now. self.epsilon: 0.208333333333 , action:  right , deadline: 45
annealing now. self.epsilon: 0.208333333333 , action:  forward , deadline: 40
Environment.act(): Primary agent has reached destination!
success: 7 / 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (1, 6), destination = (5, 1), deadline = 45
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.192307692308 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.192307692308 , action:  left , deadline: 42
Environment.act(): Primary agent has reached destination!
success: 8 / 13
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (4, 5), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.178571428571 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.178571428571 , action:  None , deadline: 24
annealing now. self.epsilon: 0.178571428571 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.178571428571 , action:  left , deadline: 12
success: 8 / 14
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (6, 3), destination = (2, 3), deadline = 20
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  left , deadline: 18
annealing now. self.epsilon: 0.166666666667 , action:  left , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 9 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (3, 1), destination = (7, 1), deadline = 20
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.15625 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.15625 , action:  left , deadline: 14
success: 9 / 16
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (3, 3), destination = (2, 6), deadline = 20
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.147058823529 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.147058823529 , action:  forward , deadline: 14
Environment.act(): Primary agent has reached destination!
success: 10 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (6, 5), destination = (8, 3), deadline = 20
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.138888888889 , self.eps_freq:  8.0 

Environment.act(): Primary agent has reached destination!
success: 11 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (4, 2), destination = (8, 6), deadline = 40
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.131578947368 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.131578947368 , action:  None , deadline: 40
annealing now. self.epsilon: 0.131578947368 , action:  forward , deadline: 32
annealing now. self.epsilon: 0.131578947368 , action:  right , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 12 / 19
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (2, 6), destination = (3, 1), deadline = 30
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.125 , action:  right , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 13 / 20
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (7, 4), destination = (1, 2), deadline = 40
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.119047619048 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.119047619048 , action:  left , deadline: 36
annealing now. self.epsilon: 0.119047619048 , action:  None , deadline: 27
annealing now. self.epsilon: 0.119047619048 , action:  left , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 14 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (1, 4), destination = (6, 4), deadline = 25
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.113636363636 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.113636363636 , action:  right , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 15 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (4, 2), destination = (1, 6), deadline = 35
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.108695652174 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.108695652174 , action:  None , deadline: 30
annealing now. self.epsilon: 0.108695652174 , action:  None , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 16 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (2, 4), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.104166666667 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.104166666667 , action:  left , deadline: 20
success: 16 / 24
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (3, 6), destination = (6, 3), deadline = 30
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.1 , action:  left , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 17 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (5, 6), destination = (8, 3), deadline = 30
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0961538461538 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0961538461538 , action:  right , deadline: 22
Environment.act(): Primary agent has reached destination!
success: 18 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (8, 2), destination = (1, 2), deadline = 35
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0925925925926 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0925925925926 , action:  right , deadline: 33
annealing now. self.epsilon: 0.0925925925926 , action:  left , deadline: 22
Environment.act(): Primary agent has reached destination!
success: 19 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (1, 1), destination = (8, 6), deadline = 60
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0892857142857 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0892857142857 , action:  None , deadline: 60
annealing now. self.epsilon: 0.0892857142857 , action:  right , deadline: 48
annealing now. self.epsilon: 0.0892857142857 , action:  None , deadline: 36
Environment.act(): Primary agent has reached destination!
success: 20 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (8, 3), destination = (5, 2), deadline = 20
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0862068965517 , self.eps_freq:  12.0 

Environment.act(): Primary agent has reached destination!
success: 21 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (7, 4), destination = (4, 2), deadline = 25
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  forward , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 22 / 30
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (2, 4), destination = (6, 2), deadline = 30
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0806451612903 , self.eps_freq:  13.0 

annealing now. self.epsilon: 0.0806451612903 , action:  left , deadline: 26
Environment.act(): Primary agent has reached destination!
success: 23 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (4, 4), destination = (2, 1), deadline = 25
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.078125 , self.eps_freq:  13.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (3, 5), destination = (6, 2), deadline = 30
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0757575757576 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0757575757576 , action:  None , deadline: 28
success: 24 / 33
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (4, 4), destination = (2, 1), deadline = 25
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0735294117647 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 34
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (2, 3), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 35
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (5, 2), destination = (3, 6), deadline = 30
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0694444444444 , self.eps_freq:  15.0 

annealing now. self.epsilon: 0.0694444444444 , action:  left , deadline: 30
success: 26 / 36
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (4, 6), destination = (7, 1), deadline = 40
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0675675675676 , self.eps_freq:  15.0 

annealing now. self.epsilon: 0.0675675675676 , action:  forward , deadline: 30
success: 26 / 37
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (1, 1), destination = (7, 1), deadline = 30
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0657894736842 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (6, 1), destination = (7, 4), deadline = 20
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0641025641026 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (2, 2), destination = (5, 1), deadline = 20
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 40
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (3, 6), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0609756097561 , self.eps_freq:  17.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 41
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (6, 1), destination = (1, 1), deadline = 25
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0595238095238 , self.eps_freq:  17.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 42
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (6, 4), destination = (3, 6), deadline = 25
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0581395348837 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (6, 5), destination = (2, 3), deadline = 30
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0568181818182 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 44
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (6, 1), destination = (8, 5), deadline = 30
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (7, 1), destination = (4, 4), deadline = 30
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.054347826087 , self.eps_freq:  19.0 

Environment.act(): Primary agent has reached destination!
success: 35 / 46
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (1, 1), destination = (8, 3), deadline = 45
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0531914893617 , self.eps_freq:  19.0 

annealing now. self.epsilon: 0.0531914893617 , action:  None , deadline: 38
Environment.act(): Primary agent has reached destination!
success: 36 / 47
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (8, 6), destination = (7, 2), deadline = 25
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0520833333333 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (6, 5), destination = (8, 1), deadline = 30
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0510204081633 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (7, 2), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.05 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (4, 6), destination = (8, 1), deadline = 45
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0490196078431 , self.eps_freq:  21.0 

annealing now. self.epsilon: 0.0490196078431 , action:  right , deadline: 42
Environment.act(): Primary agent has reached destination!
success: 40 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (2, 1), destination = (2, 6), deadline = 25
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0480769230769 , self.eps_freq:  21.0 

success: 40 / 52
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (4, 5), destination = (8, 4), deadline = 25
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0471698113208 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (4, 6), destination = (1, 1), deadline = 40
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0462962962963 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (2, 6), destination = (2, 1), deadline = 25
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (8, 5), destination = (5, 3), deadline = 25
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0446428571429 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (8, 4), destination = (4, 3), deadline = 25
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0438596491228 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 57
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (6, 1), destination = (4, 4), deadline = 25
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0431034482759 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 58
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (2, 1), destination = (8, 4), deadline = 45
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0423728813559 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 47 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (2, 5), destination = (6, 4), deadline = 25
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

success: 47 / 60
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (5, 5), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0409836065574 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 61
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (2, 4), destination = (8, 1), deadline = 45
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0403225806452 , self.eps_freq:  25.0 

success: 48 / 62
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (4, 5), destination = (3, 1), deadline = 25
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0396825396825 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (2, 2), destination = (5, 6), deadline = 35
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0390625 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (6, 6), destination = (2, 3), deadline = 35
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (5, 3), destination = (3, 6), deadline = 25
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0378787878788 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (6, 3), destination = (1, 4), deadline = 30
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0373134328358 , self.eps_freq:  27.0 

success: 52 / 67
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (8, 1), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0367647058824 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 53 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (4, 6), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.036231884058 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 54 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (2, 6), destination = (5, 1), deadline = 40
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 55 / 70
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (2, 4), destination = (6, 6), deadline = 30
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0352112676056 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 71
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (2, 4), destination = (8, 2), deadline = 40
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0347222222222 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 57 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (5, 1), destination = (7, 5), deadline = 30
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0342465753425 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 58 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (2, 4), destination = (5, 2), deadline = 25
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0337837837838 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 59 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (5, 6), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 60 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (5, 3), destination = (3, 1), deadline = 20
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0328947368421 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 61 / 76
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (8, 4), destination = (3, 1), deadline = 40
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0324675324675 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 62 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (8, 6), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0320512820513 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 63 / 78
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (6, 4), destination = (1, 4), deadline = 25
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0316455696203 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 64 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (4, 5), destination = (1, 6), deadline = 20
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 65 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (5, 3), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0308641975309 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 66 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (4, 1), destination = (8, 2), deadline = 25
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.030487804878 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 67 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (5, 1), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0301204819277 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 68 / 83
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (5, 5), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0297619047619 , self.eps_freq:  34.0 

success: 68 / 84
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (6, 3), destination = (7, 6), deadline = 20
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 69 / 85
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (5, 5), destination = (5, 1), deadline = 20
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0290697674419 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 70 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (4, 1), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0287356321839 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 71 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (1, 4), destination = (8, 5), deadline = 40
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0284090909091 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 72 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (7, 3), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0280898876404 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 73 / 89
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (1, 3), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 74 / 90
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (8, 2), destination = (6, 6), deadline = 30
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0274725274725 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 75 / 91
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (1, 5), destination = (5, 4), deadline = 25
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0271739130435 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 76 / 92
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (3, 2), destination = (7, 6), deadline = 40
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0268817204301 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 77 / 93
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (8, 6), destination = (7, 1), deadline = 30
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0265957446809 , self.eps_freq:  38.0 

success: 77 / 94
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (5, 1), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 78 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (1, 1), destination = (7, 6), deadline = 55
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0260416666667 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 79 / 96
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (4, 1), destination = (2, 6), deadline = 35
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0257731958763 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 80 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (2, 4), destination = (7, 3), deadline = 30
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0255102040816 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 81 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (3, 2), destination = (7, 6), deadline = 40
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0252525252525 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 82 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (4, 6), destination = (1, 4), deadline = 25
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 83 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.45245
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07716
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10000
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.20570
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.53079
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.54714
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01515
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.21509
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05000
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02857
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01493
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.53164
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03030
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.46734
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01053
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02381
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05000
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.55289
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02778
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.46003
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03419
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08929
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03149
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.23769
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08349
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.33788
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01163
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.52917
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99987
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02891
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06182
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09008
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01613
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08104
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04434
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.32049
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.96665
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.50521
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08567
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.57507
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01887
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04762
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.72242
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 4.41470
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.80824
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.32277
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.88186
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.38904
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50278
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.39364
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.04583
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.15807
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.19241
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.19530
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.50091
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.11005
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.46436
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.82396
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.72106
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: -0.08333
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.38635
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.03135
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.69870
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.28567
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.68485
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 2.68287
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.24946
--------------------------------------------------------------------------------
updated cells:  67 , self.total_cell_count: 2048 , updated_func_counter: 1760
self.alpha: 0.5 self.gamma: 0.005 , self.epsilon: 0.5 , success: 83
________________________________________________________________________________
gma = 0.005
eps = 0.2
alp = 0.5
epsilon:  0.2
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (4, 5), destination = (1, 6), deadline = 20
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 1.0 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.0 , action:  forward , deadline: 20
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 19
annealing now. self.epsilon: 1.0 , action:  None , deadline: 18
annealing now. self.epsilon: 1.0 , action:  left , deadline: 17
annealing now. self.epsilon: 1.0 , action:  left , deadline: 16
annealing now. self.epsilon: 1.0 , action:  None , deadline: 15
annealing now. self.epsilon: 1.0 , action:  right , deadline: 14
annealing now. self.epsilon: 1.0 , action:  left , deadline: 13
annealing now. self.epsilon: 1.0 , action:  right , deadline: 12
annealing now. self.epsilon: 1.0 , action:  None , deadline: 11
annealing now. self.epsilon: 1.0 , action:  left , deadline: 10
annealing now. self.epsilon: 1.0 , action:  right , deadline: 9
annealing now. self.epsilon: 1.0 , action:  None , deadline: 8
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 7
annealing now. self.epsilon: 1.0 , action:  right , deadline: 6
annealing now. self.epsilon: 1.0 , action:  right , deadline: 5
annealing now. self.epsilon: 1.0 , action:  left , deadline: 4
annealing now. self.epsilon: 1.0 , action:  right , deadline: 3
annealing now. self.epsilon: 1.0 , action:  right , deadline: 2
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (8, 4), destination = (6, 6), deadline = 20
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.5 , action:  None , deadline: 18
annealing now. self.epsilon: 0.5 , action:  None , deadline: 16
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 14
annealing now. self.epsilon: 0.5 , action:  None , deadline: 12
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 10
annealing now. self.epsilon: 0.5 , action:  right , deadline: 8
annealing now. self.epsilon: 0.5 , action:  right , deadline: 6
annealing now. self.epsilon: 0.5 , action:  right , deadline: 4
success: 0 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (6, 1), destination = (8, 6), deadline = 35
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.333333333333 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.333333333333 , action:  forward , deadline: 33
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 1 / 3
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (3, 4), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  left , deadline: 24
annealing now. self.epsilon: 0.25 , action:  right , deadline: 20
annealing now. self.epsilon: 0.25 , action:  right , deadline: 16
annealing now. self.epsilon: 0.25 , action:  left , deadline: 12
annealing now. self.epsilon: 0.25 , action:  left , deadline: 8
success: 1 / 4
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (3, 2), destination = (8, 2), deadline = 25
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.2 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.2 , action:  left , deadline: 25
annealing now. self.epsilon: 0.2 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.2 , action:  right , deadline: 15
annealing now. self.epsilon: 0.2 , action:  left , deadline: 10
success: 1 / 5
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (4, 4), destination = (5, 1), deadline = 20
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 18
annealing now. self.epsilon: 0.166666666667 , action:  forward , deadline: 12
success: 1 / 6
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (7, 2), destination = (1, 6), deadline = 50
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.142857142857 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.142857142857 , action:  None , deadline: 49
annealing now. self.epsilon: 0.142857142857 , action:  None , deadline: 42
annealing now. self.epsilon: 0.142857142857 , action:  left , deadline: 35
annealing now. self.epsilon: 0.142857142857 , action:  left , deadline: 28
annealing now. self.epsilon: 0.142857142857 , action:  forward , deadline: 21
annealing now. self.epsilon: 0.142857142857 , action:  forward , deadline: 14
success: 1 / 7
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (1, 4), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  left , deadline: 24
annealing now. self.epsilon: 0.125 , action:  right , deadline: 16
success: 1 / 8
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (5, 3), destination = (8, 6), deadline = 30
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.111111111111 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.111111111111 , action:  right , deadline: 27
annealing now. self.epsilon: 0.111111111111 , action:  forward , deadline: 18
success: 1 / 9
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (4, 2), destination = (6, 6), deadline = 30
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  right , deadline: 30
annealing now. self.epsilon: 0.1 , action:  left , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 2 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (5, 5), destination = (5, 1), deadline = 20
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0909090909091 , self.eps_freq:  11.0 

success: 2 / 11
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (5, 1), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

success: 2 / 12
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (2, 6), destination = (4, 1), deadline = 35
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0769230769231 , self.eps_freq:  13.0 

annealing now. self.epsilon: 0.0769230769231 , action:  None , deadline: 26
success: 2 / 13
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (7, 5), destination = (4, 6), deadline = 20
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

success: 2 / 14
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (3, 2), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0666666666667 , self.eps_freq:  15.0 

success: 2 / 15
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (5, 2), destination = (7, 5), deadline = 25
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

success: 2 / 16
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (3, 5), destination = (7, 6), deadline = 25
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0588235294118 , self.eps_freq:  17.0 

success: 2 / 17
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (4, 1), destination = (2, 5), deadline = 30
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

success: 2 / 18
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (8, 4), destination = (2, 3), deadline = 35
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0526315789474 , self.eps_freq:  19.0 

success: 2 / 19
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (6, 6), destination = (2, 4), deadline = 30
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.05 , self.eps_freq:  20.0 

success: 2 / 20
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (1, 6), destination = (7, 3), deadline = 45
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.047619047619 , self.eps_freq:  21.0 

annealing now. self.epsilon: 0.047619047619 , action:  forward , deadline: 42
success: 2 / 21
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (8, 6), destination = (1, 3), deadline = 50
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

annealing now. self.epsilon: 0.0454545454545 , action:  forward , deadline: 44
success: 2 / 22
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (4, 4), destination = (6, 6), deadline = 20
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0434782608696 , self.eps_freq:  23.0 

success: 2 / 23
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (8, 1), destination = (7, 4), deadline = 20
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

success: 2 / 24
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (3, 1), destination = (3, 5), deadline = 20
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.04 , self.eps_freq:  25.0 

success: 2 / 25
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (7, 3), destination = (5, 6), deadline = 25
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

success: 2 / 26
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (3, 5), destination = (7, 2), deadline = 35
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.037037037037 , self.eps_freq:  27.0 

success: 2 / 27
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (7, 4), destination = (4, 2), deadline = 25
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

success: 2 / 28
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (5, 2), destination = (1, 2), deadline = 20
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0344827586207 , self.eps_freq:  29.0 

success: 2 / 29
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (5, 1), destination = (1, 5), deadline = 40
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

success: 2 / 30
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (3, 3), destination = (7, 1), deadline = 30
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0322580645161 , self.eps_freq:  31.0 

success: 2 / 31
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (3, 4), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

success: 2 / 32
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (1, 4), destination = (8, 5), deadline = 40
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.030303030303 , self.eps_freq:  33.0 

success: 2 / 33
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (1, 6), destination = (3, 2), deadline = 30
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

success: 2 / 34
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (1, 1), destination = (3, 6), deadline = 35
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0285714285714 , self.eps_freq:  35.0 

success: 2 / 35
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (1, 3), destination = (3, 5), deadline = 20
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

success: 2 / 36
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (1, 5), destination = (5, 3), deadline = 30
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.027027027027 , self.eps_freq:  37.0 

success: 2 / 37
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (5, 1), destination = (1, 4), deadline = 35
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

success: 2 / 38
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (8, 2), destination = (3, 4), deadline = 35
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.025641025641 , self.eps_freq:  39.0 

success: 2 / 39
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (8, 5), destination = (2, 3), deadline = 40
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.025 , self.eps_freq:  40.0 

success: 2 / 40
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (8, 3), destination = (4, 1), deadline = 30
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0243902439024 , self.eps_freq:  41.0 

success: 2 / 41
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (1, 3), destination = (5, 6), deadline = 35
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

success: 2 / 42
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (6, 6), destination = (1, 4), deadline = 35
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0232558139535 , self.eps_freq:  43.0 

success: 2 / 43
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (6, 5), destination = (2, 2), deadline = 35
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

success: 2 / 44
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (2, 2), destination = (8, 4), deadline = 40
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0222222222222 , self.eps_freq:  45.0 

success: 2 / 45
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (6, 2), destination = (4, 6), deadline = 30
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

success: 2 / 46
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (3, 3), destination = (7, 5), deadline = 30
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0212765957447 , self.eps_freq:  47.0 

success: 2 / 47
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (6, 2), destination = (1, 5), deadline = 40
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

success: 2 / 48
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (5, 4), destination = (8, 6), deadline = 25
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0204081632653 , self.eps_freq:  50.0 

success: 2 / 49
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (8, 3), destination = (2, 6), deadline = 45
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.02 , self.eps_freq:  50.0 

success: 2 / 50
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (8, 3), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0196078431373 , self.eps_freq:  51.0 

success: 2 / 51
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (6, 6), destination = (3, 2), deadline = 35
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

success: 2 / 52
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (1, 1), destination = (4, 3), deadline = 25
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0188679245283 , self.eps_freq:  53.0 

success: 2 / 53
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (7, 2), destination = (3, 1), deadline = 25
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

success: 2 / 54
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (2, 2), destination = (7, 5), deadline = 40
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0181818181818 , self.eps_freq:  55.0 

success: 2 / 55
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (5, 1), destination = (1, 1), deadline = 20
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

success: 2 / 56
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (1, 3), destination = (6, 5), deadline = 35
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0175438596491 , self.eps_freq:  57.0 

success: 2 / 57
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (4, 2), destination = (2, 5), deadline = 25
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

success: 2 / 58
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (8, 1), destination = (1, 3), deadline = 45
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0169491525424 , self.eps_freq:  59.0 

success: 2 / 59
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (6, 2), destination = (2, 3), deadline = 25
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

success: 2 / 60
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (5, 1), destination = (1, 2), deadline = 25
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.016393442623 , self.eps_freq:  61.0 

success: 2 / 61
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (2, 1), destination = (7, 3), deadline = 35
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

success: 2 / 62
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (5, 5), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.015873015873 , self.eps_freq:  63.0 

success: 2 / 63
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (2, 4), destination = (7, 6), deadline = 35
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

success: 2 / 64
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (5, 3), destination = (7, 1), deadline = 20
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0153846153846 , self.eps_freq:  65.0 

success: 2 / 65
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (8, 5), destination = (1, 3), deadline = 45
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

success: 2 / 66
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (1, 1), destination = (7, 1), deadline = 30
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0149253731343 , self.eps_freq:  67.0 

success: 2 / 67
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (1, 6), destination = (8, 2), deadline = 55
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

success: 2 / 68
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (1, 6), destination = (5, 4), deadline = 30
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0144927536232 , self.eps_freq:  69.0 

success: 2 / 69
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (3, 2), destination = (8, 3), deadline = 30
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

success: 2 / 70
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (8, 6), destination = (3, 4), deadline = 35
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0140845070423 , self.eps_freq:  71.0 

success: 2 / 71
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (2, 1), destination = (6, 4), deadline = 35
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

success: 2 / 72
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (2, 1), destination = (6, 6), deadline = 45
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.013698630137 , self.eps_freq:  73.0 

success: 2 / 73
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (1, 4), destination = (6, 4), deadline = 25
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

success: 2 / 74
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (7, 2), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0133333333333 , self.eps_freq:  75.0 

success: 2 / 75
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (7, 4), destination = (2, 1), deadline = 40
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

success: 2 / 76
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (6, 6), destination = (8, 3), deadline = 25
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.012987012987 , self.eps_freq:  77.0 

success: 2 / 77
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (7, 5), destination = (6, 1), deadline = 25
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

success: 2 / 78
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (5, 6), destination = (7, 1), deadline = 35
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0126582278481 , self.eps_freq:  79.0 

success: 2 / 79
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (3, 3), destination = (5, 1), deadline = 20
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

success: 2 / 80
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (8, 6), destination = (1, 5), deadline = 40
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0123456790123 , self.eps_freq:  81.0 

success: 2 / 81
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (2, 6), destination = (3, 2), deadline = 25
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

success: 2 / 82
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (6, 1), destination = (7, 6), deadline = 30
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0120481927711 , self.eps_freq:  83.0 

success: 2 / 83
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (3, 3), destination = (6, 1), deadline = 25
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

success: 2 / 84
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (3, 3), destination = (2, 6), deadline = 20
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0117647058824 , self.eps_freq:  85.0 

success: 2 / 85
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (7, 2), destination = (8, 6), deadline = 25
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

success: 2 / 86
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (7, 6), destination = (7, 2), deadline = 20
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0114942528736 , self.eps_freq:  87.0 

success: 2 / 87
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (6, 5), destination = (1, 2), deadline = 40
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

success: 2 / 88
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (6, 2), destination = (3, 6), deadline = 35
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0112359550562 , self.eps_freq:  89.0 

success: 2 / 89
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (6, 4), destination = (8, 2), deadline = 20
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

success: 2 / 90
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (3, 5), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.010989010989 , self.eps_freq:  91.0 

success: 2 / 91
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (1, 5), destination = (8, 2), deadline = 50
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

success: 2 / 92
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (2, 1), destination = (8, 1), deadline = 30
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.010752688172 , self.eps_freq:  93.0 

success: 2 / 93
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (6, 6), destination = (3, 5), deadline = 20
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

success: 2 / 94
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (1, 1), destination = (8, 2), deadline = 40
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0105263157895 , self.eps_freq:  95.0 

success: 2 / 95
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (2, 5), destination = (2, 1), deadline = 20
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

success: 2 / 96
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (1, 4), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0103092783505 , self.eps_freq:  97.0 

success: 2 / 97
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (8, 1), destination = (2, 3), deadline = 40
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

success: 2 / 98
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (1, 5), destination = (3, 1), deadline = 30
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.010101010101 , self.eps_freq:  99.0 

success: 2 / 99
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (5, 5), destination = (8, 6), deadline = 20
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.01 , self.eps_freq:  100.0 

success: 2 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00047
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04565
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06267
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04808
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10774
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01515
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.19839
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.31767
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10169
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00259
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12709
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03125
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.25517
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.40511
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.00000
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.14988
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.36019
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05904
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08070
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00250
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01351
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00063
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05095
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08470
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00023
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02395
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.20000
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01124
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07077
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.11111
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12180
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00333
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02174
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08767
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.15211
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.19819
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.99904
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.47310
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.48585
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.50000
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.62913
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.37563
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50040
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.35122
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.44199
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.57939
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.25000
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.31285
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.50279
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.12492
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.24548
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.99749
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.50000
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.43718
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.97219
--------------------------------------------------------------------------------
updated cells:  55 , self.total_cell_count: 2048 , updated_func_counter: 3071
self.alpha: 0.5 self.gamma: 0.005 , self.epsilon: 0.2 , success: 2
________________________________________________________________________________
Environment.reset(): Primary agent could not reach destination within deadline!
gma = 0.005
eps = 0.1
alp = 0.5
epsilon:  0.1
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (2, 4), destination = (8, 6), deadline = 40
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  None , deadline: 40
annealing now. self.epsilon: 0.5 , action:  left , deadline: 38
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 36
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 34
annealing now. self.epsilon: 0.5 , action:  None , deadline: 32
annealing now. self.epsilon: 0.5 , action:  right , deadline: 30
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 28
annealing now. self.epsilon: 0.5 , action:  right , deadline: 26
annealing now. self.epsilon: 0.5 , action:  left , deadline: 24
annealing now. self.epsilon: 0.5 , action:  None , deadline: 22
annealing now. self.epsilon: 0.5 , action:  left , deadline: 20
annealing now. self.epsilon: 0.5 , action:  None , deadline: 18
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.5 , action:  left , deadline: 14
annealing now. self.epsilon: 0.5 , action:  right , deadline: 12
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 10
annealing now. self.epsilon: 0.5 , action:  right , deadline: 8
annealing now. self.epsilon: 0.5 , action:  left , deadline: 6
annealing now. self.epsilon: 0.5 , action:  right , deadline: 4
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (6, 1), destination = (1, 3), deadline = 35
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  forward , deadline: 32
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 28
annealing now. self.epsilon: 0.25 , action:  None , deadline: 24
annealing now. self.epsilon: 0.25 , action:  left , deadline: 20
annealing now. self.epsilon: 0.25 , action:  None , deadline: 16
annealing now. self.epsilon: 0.25 , action:  None , deadline: 12
annealing now. self.epsilon: 0.25 , action:  right , deadline: 8
success: 0 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (7, 3), destination = (3, 6), deadline = 35
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.166666666667 , action:  forward , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 1 / 3
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (7, 4), destination = (2, 2), deadline = 35
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  left , deadline: 32
Environment.act(): Primary agent has reached destination!
success: 2 / 4
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (7, 4), destination = (2, 3), deadline = 30
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.1 , action:  forward , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 3 / 5
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (7, 1), destination = (6, 4), deadline = 20
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

Environment.act(): Primary agent has reached destination!
success: 4 / 6
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (2, 4), destination = (7, 2), deadline = 35
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0714285714286 , action:  None , deadline: 28
success: 4 / 7
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (5, 6), destination = (4, 2), deadline = 25
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

success: 4 / 8
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (4, 1), destination = (1, 3), deadline = 25
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

success: 4 / 9
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (1, 3), destination = (6, 6), deadline = 40
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.05 , self.eps_freq:  20.0 

annealing now. self.epsilon: 0.05 , action:  left , deadline: 40
Environment.act(): Primary agent has reached destination!
success: 5 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (3, 3), destination = (8, 6), deadline = 40
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 6 / 11
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (3, 3), destination = (8, 1), deadline = 35
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 7 / 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (5, 5), destination = (8, 3), deadline = 25
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 8 / 13
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (7, 4), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 9 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (8, 6), destination = (3, 6), deadline = 25
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

success: 9 / 15
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (2, 5), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 10 / 16
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (5, 4), destination = (7, 6), deadline = 20
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 11 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (5, 5), destination = (1, 3), deadline = 30
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 12 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (8, 2), destination = (5, 5), deadline = 30
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 13 / 19
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (1, 1), destination = (8, 3), deadline = 45
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 14 / 20
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (4, 6), destination = (2, 3), deadline = 25
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

success: 14 / 21
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (3, 1), destination = (2, 6), deadline = 30
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

Environment.act(): Primary agent has reached destination!
success: 15 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (7, 1), destination = (6, 4), deadline = 20
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

Environment.act(): Primary agent has reached destination!
success: 16 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (8, 2), destination = (6, 6), deadline = 30
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

Environment.act(): Primary agent has reached destination!
success: 17 / 24
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (8, 5), destination = (3, 1), deadline = 45
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.02 , self.eps_freq:  50.0 

Environment.act(): Primary agent has reached destination!
success: 18 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (1, 3), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

Environment.act(): Primary agent has reached destination!
success: 19 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (1, 6), destination = (6, 1), deadline = 50
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

Environment.act(): Primary agent has reached destination!
success: 20 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (2, 4), destination = (8, 3), deadline = 35
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

Environment.act(): Primary agent has reached destination!
success: 21 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (5, 5), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

success: 21 / 29
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (6, 5), destination = (5, 2), deadline = 20
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

success: 21 / 30
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (7, 5), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

success: 21 / 31
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (5, 5), destination = (8, 2), deadline = 30
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

Environment.act(): Primary agent has reached destination!
success: 22 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (3, 1), destination = (2, 5), deadline = 25
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

success: 22 / 33
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (7, 2), destination = (1, 6), deadline = 50
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

Environment.act(): Primary agent has reached destination!
success: 23 / 34
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (8, 1), destination = (1, 1), deadline = 35
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

success: 23 / 35
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (5, 6), destination = (1, 5), deadline = 25
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

success: 23 / 36
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (7, 3), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 37
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (6, 4), destination = (3, 6), deadline = 25
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

success: 24 / 38
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (6, 6), destination = (8, 3), deadline = 25
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (5, 3), destination = (1, 2), deadline = 25
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

success: 25 / 40
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (7, 2), destination = (5, 6), deadline = 30
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 41
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (2, 4), destination = (8, 2), deadline = 40
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 42
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (7, 1), destination = (4, 3), deadline = 25
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (8, 3), destination = (3, 1), deadline = 35
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

success: 28 / 44
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (3, 6), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (4, 6), destination = (5, 1), deadline = 30
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 46
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (3, 6), destination = (8, 1), deadline = 50
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 47
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (1, 4), destination = (6, 6), deadline = 35
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (5, 2), destination = (1, 2), deadline = 20
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (2, 2), destination = (4, 6), deadline = 30
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.01 , self.eps_freq:  100.0 

success: 33 / 50
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (4, 5), destination = (7, 4), deadline = 20
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.00980392156863 , self.eps_freq:  102.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (7, 6), destination = (1, 3), deadline = 45
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.00961538461538 , self.eps_freq:  104.0 

success: 34 / 52
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (7, 5), destination = (1, 1), deadline = 50
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.00943396226415 , self.eps_freq:  106.0 

Environment.act(): Primary agent has reached destination!
success: 35 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (8, 2), destination = (7, 6), deadline = 25
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.00925925925926 , self.eps_freq:  108.0 

success: 35 / 54
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (6, 2), destination = (3, 4), deadline = 25
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.00909090909091 , self.eps_freq:  110.0 

success: 35 / 55
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (2, 1), destination = (2, 6), deadline = 25
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.00892857142857 , self.eps_freq:  112.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (4, 4), destination = (7, 5), deadline = 20
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.00877192982456 , self.eps_freq:  114.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 57
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (3, 2), destination = (2, 5), deadline = 20
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.00862068965517 , self.eps_freq:  116.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 58
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (8, 3), destination = (1, 5), deadline = 45
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.00847457627119 , self.eps_freq:  118.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (5, 1), destination = (4, 6), deadline = 30
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.00833333333333 , self.eps_freq:  120.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (7, 3), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.00819672131148 , self.eps_freq:  122.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 61
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (5, 4), destination = (1, 1), deadline = 35
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.00806451612903 , self.eps_freq:  124.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 62
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (3, 4), destination = (8, 5), deadline = 30
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.00793650793651 , self.eps_freq:  126.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (8, 6), destination = (4, 6), deadline = 20
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0078125 , self.eps_freq:  128.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (6, 2), destination = (2, 4), deadline = 30
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.00769230769231 , self.eps_freq:  130.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (3, 4), destination = (8, 4), deadline = 25
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.00757575757576 , self.eps_freq:  132.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (8, 1), destination = (3, 3), deadline = 35
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.00746268656716 , self.eps_freq:  134.0 

success: 46 / 67
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (7, 6), destination = (1, 2), deadline = 50
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.00735294117647 , self.eps_freq:  136.0 

Environment.act(): Primary agent has reached destination!
success: 47 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (3, 1), destination = (1, 6), deadline = 35
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.00724637681159 , self.eps_freq:  138.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (2, 6), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.00714285714286 , self.eps_freq:  140.0 

success: 48 / 70
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (5, 2), destination = (7, 6), deadline = 30
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.00704225352113 , self.eps_freq:  142.0 

success: 48 / 71
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (6, 5), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.00694444444444 , self.eps_freq:  144.0 

success: 48 / 72
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (5, 3), destination = (8, 4), deadline = 20
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.00684931506849 , self.eps_freq:  146.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (8, 1), destination = (4, 2), deadline = 25
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.00675675675676 , self.eps_freq:  148.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (5, 5), destination = (1, 3), deadline = 30
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.00666666666667 , self.eps_freq:  150.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (4, 4), destination = (8, 6), deadline = 30
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.00657894736842 , self.eps_freq:  152.0 

success: 51 / 76
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (7, 6), destination = (3, 2), deadline = 40
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.00649350649351 , self.eps_freq:  154.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (7, 4), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.00641025641026 , self.eps_freq:  156.0 

Environment.act(): Primary agent has reached destination!
success: 53 / 78
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (8, 6), destination = (4, 4), deadline = 30
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.00632911392405 , self.eps_freq:  158.0 

Environment.act(): Primary agent has reached destination!
success: 54 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (1, 5), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.00625 , self.eps_freq:  160.0 

Environment.act(): Primary agent has reached destination!
success: 55 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (1, 3), destination = (8, 4), deadline = 40
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.00617283950617 , self.eps_freq:  162.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (5, 5), destination = (2, 4), deadline = 20
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.00609756097561 , self.eps_freq:  164.0 

Environment.act(): Primary agent has reached destination!
success: 57 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (4, 6), destination = (8, 2), deadline = 40
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.00602409638554 , self.eps_freq:  166.0 

success: 57 / 83
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (3, 1), destination = (8, 1), deadline = 25
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00595238095238 , self.eps_freq:  168.0 

success: 57 / 84
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (8, 3), destination = (1, 6), deadline = 50
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.00588235294118 , self.eps_freq:  170.0 

Environment.act(): Primary agent has reached destination!
success: 58 / 85
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (1, 1), destination = (4, 4), deadline = 30
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.00581395348837 , self.eps_freq:  172.0 

Environment.act(): Primary agent has reached destination!
success: 59 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (4, 3), destination = (2, 1), deadline = 20
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.00574712643678 , self.eps_freq:  174.0 

Environment.act(): Primary agent has reached destination!
success: 60 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (7, 3), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.00568181818182 , self.eps_freq:  176.0 

success: 60 / 88
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (2, 1), destination = (3, 6), deadline = 30
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.00561797752809 , self.eps_freq:  178.0 

success: 60 / 89
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (8, 5), destination = (5, 6), deadline = 20
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.00555555555556 , self.eps_freq:  180.0 

success: 60 / 90
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (8, 2), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.00549450549451 , self.eps_freq:  182.0 

success: 60 / 91
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (4, 3), destination = (1, 6), deadline = 30
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0054347826087 , self.eps_freq:  184.0 

success: 60 / 92
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (3, 6), destination = (7, 2), deadline = 40
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.00537634408602 , self.eps_freq:  186.0 

Environment.act(): Primary agent has reached destination!
success: 61 / 93
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (8, 6), destination = (2, 1), deadline = 55
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.00531914893617 , self.eps_freq:  188.0 

success: 61 / 94
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (4, 1), destination = (7, 6), deadline = 40
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.00526315789474 , self.eps_freq:  190.0 

success: 61 / 95
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (5, 2), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.00520833333333 , self.eps_freq:  192.0 

Environment.act(): Primary agent has reached destination!
success: 62 / 96
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (1, 2), destination = (8, 3), deadline = 40
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.00515463917526 , self.eps_freq:  194.0 

success: 62 / 97
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (8, 3), destination = (2, 1), deadline = 40
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.00510204081633 , self.eps_freq:  197.0 

Environment.act(): Primary agent has reached destination!
success: 63 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (5, 5), destination = (7, 2), deadline = 25
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.00505050505051 , self.eps_freq:  198.0 

success: 63 / 99
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (2, 5), destination = (7, 1), deadline = 45
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.005 , self.eps_freq:  200.0 

Environment.act(): Primary agent has reached destination!
success: 64 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01429
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05433
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.26288
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.98797
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00125
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.55522
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08333
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03361
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01205
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.98827
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00000
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05699
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.13876
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10029
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03829
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10800
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00188
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.72513
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04348
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.14240
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.13025
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.28575
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01389
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03030
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04762
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.11814
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00000
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01235
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04499
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.11453
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.14339
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09789
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12773
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.41384
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08654
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.11111
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02128
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.33312
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 3.31065
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.99875
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.99900
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.50000
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.25000
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50230
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.25188
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.33898
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50000
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.24995
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.50188
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.09974
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.50000
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 2.71475
--------------------------------------------------------------------------------
updated cells:  52 , self.total_cell_count: 2048 , updated_func_counter: 2047
self.alpha: 0.5 self.gamma: 0.005 , self.epsilon: 0.1 , success: 64
________________________________________________________________________________
gma = 0.05
eps = 0.5
alp = 0.5
epsilon:  0.5
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (8, 6), destination = (8, 1), deadline = 25
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 2.5 , self.eps_freq:  1.0 

annealing now. self.epsilon: 2.5 , action:  right , deadline: 25
annealing now. self.epsilon: 2.5 , action:  left , deadline: 24
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 23
annealing now. self.epsilon: 2.5 , action:  right , deadline: 22
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 21
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 20
annealing now. self.epsilon: 2.5 , action:  None , deadline: 19
annealing now. self.epsilon: 2.5 , action:  None , deadline: 18
annealing now. self.epsilon: 2.5 , action:  right , deadline: 17
annealing now. self.epsilon: 2.5 , action:  right , deadline: 16
annealing now. self.epsilon: 2.5 , action:  right , deadline: 15
annealing now. self.epsilon: 2.5 , action:  left , deadline: 14
annealing now. self.epsilon: 2.5 , action:  None , deadline: 13
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 12
annealing now. self.epsilon: 2.5 , action:  None , deadline: 11
annealing now. self.epsilon: 2.5 , action:  right , deadline: 10
annealing now. self.epsilon: 2.5 , action:  None , deadline: 9
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 8
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 7
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 6
annealing now. self.epsilon: 2.5 , action:  right , deadline: 5
annealing now. self.epsilon: 2.5 , action:  left , deadline: 4
annealing now. self.epsilon: 2.5 , action:  right , deadline: 3
annealing now. self.epsilon: 2.5 , action:  right , deadline: 2
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (7, 2), destination = (1, 1), deadline = 35
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 1.25 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.25 , action:  forward , deadline: 35
annealing now. self.epsilon: 1.25 , action:  left , deadline: 34
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 33
annealing now. self.epsilon: 1.25 , action:  right , deadline: 32
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 31
annealing now. self.epsilon: 1.25 , action:  left , deadline: 30
annealing now. self.epsilon: 1.25 , action:  None , deadline: 29
annealing now. self.epsilon: 1.25 , action:  right , deadline: 28
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 27
annealing now. self.epsilon: 1.25 , action:  left , deadline: 26
annealing now. self.epsilon: 1.25 , action:  right , deadline: 25
annealing now. self.epsilon: 1.25 , action:  None , deadline: 24
annealing now. self.epsilon: 1.25 , action:  None , deadline: 23
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 22
annealing now. self.epsilon: 1.25 , action:  left , deadline: 21
annealing now. self.epsilon: 1.25 , action:  None , deadline: 20
annealing now. self.epsilon: 1.25 , action:  None , deadline: 19
annealing now. self.epsilon: 1.25 , action:  right , deadline: 18
annealing now. self.epsilon: 1.25 , action:  left , deadline: 17
annealing now. self.epsilon: 1.25 , action:  left , deadline: 16
annealing now. self.epsilon: 1.25 , action:  None , deadline: 15
annealing now. self.epsilon: 1.25 , action:  left , deadline: 14
annealing now. self.epsilon: 1.25 , action:  None , deadline: 13
annealing now. self.epsilon: 1.25 , action:  left , deadline: 12
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 11
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 10
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 9
annealing now. self.epsilon: 1.25 , action:  left , deadline: 8
annealing now. self.epsilon: 1.25 , action:  left , deadline: 7
annealing now. self.epsilon: 1.25 , action:  left , deadline: 6
annealing now. self.epsilon: 1.25 , action:  right , deadline: 5
annealing now. self.epsilon: 1.25 , action:  left , deadline: 4
annealing now. self.epsilon: 1.25 , action:  None , deadline: 3
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 2
success: 0 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (6, 5), destination = (3, 3), deadline = 25
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.833333333333 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 24
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 22
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 16
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 14
Environment.act(): Primary agent has reached destination!
success: 1 / 3
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (4, 1), destination = (3, 5), deadline = 25
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.625 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.625 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.625 , action:  left , deadline: 22
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 2 / 4
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (5, 2), destination = (2, 4), deadline = 25
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  left , deadline: 24
annealing now. self.epsilon: 0.5 , action:  None , deadline: 22
annealing now. self.epsilon: 0.5 , action:  None , deadline: 20
annealing now. self.epsilon: 0.5 , action:  None , deadline: 18
annealing now. self.epsilon: 0.5 , action:  left , deadline: 16
annealing now. self.epsilon: 0.5 , action:  right , deadline: 14
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 12
annealing now. self.epsilon: 0.5 , action:  None , deadline: 10
Environment.act(): Primary agent has reached destination!
success: 3 / 5
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (5, 1), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.416666666667 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.416666666667 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.416666666667 , action:  None , deadline: 21
Environment.act(): Primary agent has reached destination!
success: 4 / 6
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (8, 5), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.357142857143 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 24
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 21
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 18
annealing now. self.epsilon: 0.357142857143 , action:  forward , deadline: 15
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 12
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 9
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 6
Environment.act(): Primary agent has reached destination!
success: 5 / 7
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (7, 2), destination = (1, 3), deadline = 35
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.3125 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.3125 , action:  None , deadline: 32
annealing now. self.epsilon: 0.3125 , action:  forward , deadline: 28
annealing now. self.epsilon: 0.3125 , action:  left , deadline: 24
annealing now. self.epsilon: 0.3125 , action:  None , deadline: 20
annealing now. self.epsilon: 0.3125 , action:  left , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 6 / 8
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (1, 6), destination = (2, 3), deadline = 20
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.277777777778 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.277777777778 , action:  left , deadline: 20
annealing now. self.epsilon: 0.277777777778 , action:  right , deadline: 16
annealing now. self.epsilon: 0.277777777778 , action:  left , deadline: 12
annealing now. self.epsilon: 0.277777777778 , action:  None , deadline: 8
Environment.act(): Primary agent has reached destination!
success: 7 / 9
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (5, 1), destination = (1, 5), deadline = 40
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  forward , deadline: 40
annealing now. self.epsilon: 0.25 , action:  right , deadline: 36
annealing now. self.epsilon: 0.25 , action:  left , deadline: 32
Environment.act(): Primary agent has reached destination!
success: 8 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (3, 2), destination = (5, 6), deadline = 30
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.227272727273 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.227272727273 , action:  right , deadline: 30
annealing now. self.epsilon: 0.227272727273 , action:  left , deadline: 25
annealing now. self.epsilon: 0.227272727273 , action:  None , deadline: 20
annealing now. self.epsilon: 0.227272727273 , action:  left , deadline: 15
Environment.act(): Primary agent has reached destination!
success: 9 / 11
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (7, 2), destination = (3, 5), deadline = 35
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.208333333333 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.208333333333 , action:  None , deadline: 35
annealing now. self.epsilon: 0.208333333333 , action:  right , deadline: 30
annealing now. self.epsilon: 0.208333333333 , action:  right , deadline: 25
annealing now. self.epsilon: 0.208333333333 , action:  None , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 10 / 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (3, 5), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.192307692308 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.192307692308 , action:  None , deadline: 24
annealing now. self.epsilon: 0.192307692308 , action:  left , deadline: 18
annealing now. self.epsilon: 0.192307692308 , action:  forward , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 11 / 13
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (3, 6), destination = (8, 3), deadline = 40
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.178571428571 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.178571428571 , action:  left , deadline: 36
annealing now. self.epsilon: 0.178571428571 , action:  None , deadline: 30
annealing now. self.epsilon: 0.178571428571 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.178571428571 , action:  right , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 12 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (7, 3), destination = (1, 4), deadline = 35
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 24
annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 18
annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 13 / 15
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (1, 1), destination = (5, 3), deadline = 30
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.15625 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.15625 , action:  left , deadline: 28
annealing now. self.epsilon: 0.15625 , action:  left , deadline: 21
annealing now. self.epsilon: 0.15625 , action:  left , deadline: 14
Environment.act(): Primary agent has reached destination!
success: 14 / 16
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (3, 5), destination = (3, 1), deadline = 20
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.147058823529 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.147058823529 , action:  left , deadline: 14
Environment.act(): Primary agent has reached destination!
success: 15 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (8, 4), destination = (2, 6), deadline = 40
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.138888888889 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.138888888889 , action:  forward , deadline: 40
Environment.act(): Primary agent has reached destination!
success: 16 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (6, 5), destination = (5, 2), deadline = 20
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.131578947368 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.131578947368 , action:  left , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 17 / 19
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (2, 1), destination = (6, 3), deadline = 30
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  left , deadline: 24
annealing now. self.epsilon: 0.125 , action:  right , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 18 / 20
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (3, 5), destination = (8, 2), deadline = 40
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.119047619048 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.119047619048 , action:  forward , deadline: 36
annealing now. self.epsilon: 0.119047619048 , action:  forward , deadline: 27
annealing now. self.epsilon: 0.119047619048 , action:  None , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 19 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (6, 6), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.113636363636 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.113636363636 , action:  forward , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 20 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (4, 2), destination = (5, 6), deadline = 25
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.108695652174 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.108695652174 , action:  None , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 21 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (2, 6), destination = (2, 1), deadline = 25
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.104166666667 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.104166666667 , action:  right , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 22 / 24
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (8, 2), destination = (3, 2), deadline = 25
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  right , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 23 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (5, 5), destination = (2, 4), deadline = 20
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0961538461538 , self.eps_freq:  11.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (6, 3), destination = (3, 4), deadline = 20
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0925925925926 , self.eps_freq:  11.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (5, 1), destination = (2, 4), deadline = 30
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0892857142857 , self.eps_freq:  12.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (3, 4), destination = (7, 2), deadline = 30
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0862068965517 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0862068965517 , action:  left , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 27 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (7, 2), destination = (3, 2), deadline = 20
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 30
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (2, 5), destination = (5, 2), deadline = 30
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0806451612903 , self.eps_freq:  13.0 

annealing now. self.epsilon: 0.0806451612903 , action:  forward , deadline: 26
Environment.act(): Primary agent has reached destination!
success: 29 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (1, 6), destination = (6, 4), deadline = 35
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.078125 , self.eps_freq:  13.0 

annealing now. self.epsilon: 0.078125 , action:  forward , deadline: 26
success: 29 / 32
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (6, 3), destination = (1, 5), deadline = 35
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0757575757576 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0757575757576 , action:  forward , deadline: 28
success: 29 / 33
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (8, 3), destination = (2, 4), deadline = 35
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0735294117647 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0735294117647 , action:  right , deadline: 28
Environment.act(): Primary agent has reached destination!
success: 30 / 34
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (6, 1), destination = (7, 5), deadline = 25
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 35
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (5, 6), destination = (8, 4), deadline = 25
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0694444444444 , self.eps_freq:  15.0 

success: 31 / 36
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (8, 6), destination = (2, 6), deadline = 30
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0675675675676 , self.eps_freq:  15.0 

annealing now. self.epsilon: 0.0675675675676 , action:  None , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 32 / 37
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (8, 5), destination = (3, 3), deadline = 35
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0657894736842 , self.eps_freq:  16.0 

annealing now. self.epsilon: 0.0657894736842 , action:  None , deadline: 32
Environment.act(): Primary agent has reached destination!
success: 33 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (5, 1), destination = (8, 3), deadline = 25
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0641025641026 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (1, 1), destination = (6, 4), deadline = 40
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

annealing now. self.epsilon: 0.0625 , action:  forward , deadline: 32
Environment.act(): Primary agent has reached destination!
success: 35 / 40
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (8, 2), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0609756097561 , self.eps_freq:  17.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 41
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (1, 3), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0595238095238 , self.eps_freq:  17.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 42
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (1, 4), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0581395348837 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (1, 2), destination = (6, 5), deadline = 40
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0568181818182 , self.eps_freq:  18.0 

annealing now. self.epsilon: 0.0568181818182 , action:  None , deadline: 36
Environment.act(): Primary agent has reached destination!
success: 39 / 44
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (5, 2), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (5, 5), destination = (8, 6), deadline = 20
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.054347826087 , self.eps_freq:  19.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 46
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (8, 6), destination = (4, 1), deadline = 45
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0531914893617 , self.eps_freq:  19.0 

annealing now. self.epsilon: 0.0531914893617 , action:  None , deadline: 38
Environment.act(): Primary agent has reached destination!
success: 42 / 47
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (7, 5), destination = (1, 5), deadline = 30
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0520833333333 , self.eps_freq:  20.0 

success: 42 / 48
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (2, 5), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0510204081633 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (1, 4), destination = (5, 6), deadline = 30
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.05 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (3, 5), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0490196078431 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (4, 3), destination = (7, 6), deadline = 30
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0480769230769 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 52
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (7, 6), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0471698113208 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 47 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (1, 1), destination = (3, 3), deadline = 20
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0462962962963 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (8, 3), destination = (2, 4), deadline = 35
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (4, 5), destination = (1, 6), deadline = 20
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0446428571429 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (8, 2), destination = (4, 4), deadline = 30
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0438596491228 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 57
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (2, 5), destination = (7, 1), deadline = 45
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0431034482759 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 58
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (2, 1), destination = (8, 5), deadline = 50
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0423728813559 , self.eps_freq:  24.0 

annealing now. self.epsilon: 0.0423728813559 , action:  None , deadline: 48
Environment.act(): Primary agent has reached destination!
success: 53 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (8, 5), destination = (1, 1), deadline = 55
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

annealing now. self.epsilon: 0.0416666666667 , action:  right , deadline: 48
Environment.act(): Primary agent has reached destination!
success: 54 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (4, 5), destination = (1, 4), deadline = 20
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0409836065574 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 55 / 61
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (5, 5), destination = (3, 3), deadline = 20
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0403225806452 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 62
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (1, 3), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0396825396825 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 57 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (7, 2), destination = (5, 6), deadline = 30
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0390625 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 58 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (8, 1), destination = (4, 3), deadline = 30
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 59 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (7, 4), destination = (8, 1), deadline = 20
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0378787878788 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 60 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (6, 6), destination = (8, 4), deadline = 20
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0373134328358 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 61 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (4, 5), destination = (7, 2), deadline = 30
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0367647058824 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 62 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (1, 4), destination = (4, 2), deadline = 25
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.036231884058 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 63 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (2, 2), destination = (7, 5), deadline = 40
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 64 / 70
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (6, 5), destination = (8, 2), deadline = 25
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0352112676056 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 65 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (6, 6), destination = (2, 6), deadline = 20
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0347222222222 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 66 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (3, 2), destination = (8, 4), deadline = 35
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0342465753425 , self.eps_freq:  30.0 

success: 66 / 73
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (5, 1), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0337837837838 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 67 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (1, 5), destination = (3, 1), deadline = 30
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 68 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (1, 2), destination = (8, 3), deadline = 40
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0328947368421 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 69 / 76
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (8, 5), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0324675324675 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 70 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (3, 4), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0320512820513 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 71 / 78
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (5, 1), destination = (8, 6), deadline = 40
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0316455696203 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 72 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (1, 2), destination = (3, 5), deadline = 25
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 73 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (3, 3), destination = (2, 6), deadline = 20
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0308641975309 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 74 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (7, 5), destination = (4, 3), deadline = 25
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.030487804878 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 75 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (7, 6), destination = (3, 4), deadline = 30
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0301204819277 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 76 / 83
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (2, 4), destination = (8, 1), deadline = 45
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0297619047619 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 77 / 84
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (3, 5), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 78 / 85
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (3, 6), destination = (7, 1), deadline = 45
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0290697674419 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 79 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (1, 3), destination = (6, 2), deadline = 30
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0287356321839 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 80 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (8, 6), destination = (6, 1), deadline = 35
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0284090909091 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 81 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (5, 5), destination = (1, 3), deadline = 30
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0280898876404 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 82 / 89
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (2, 6), destination = (8, 1), deadline = 55
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

success: 82 / 90
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (7, 2), destination = (1, 1), deadline = 35
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0274725274725 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 83 / 91
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (1, 5), destination = (4, 6), deadline = 20
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0271739130435 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 84 / 92
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (3, 3), destination = (5, 6), deadline = 25
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0268817204301 , self.eps_freq:  38.0 

success: 84 / 93
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (1, 5), destination = (6, 4), deadline = 30
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0265957446809 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 85 / 94
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (7, 5), destination = (1, 6), deadline = 35
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 86 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (7, 3), destination = (3, 5), deadline = 30
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0260416666667 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 87 / 96
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (6, 2), destination = (2, 1), deadline = 25
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0257731958763 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 88 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (3, 1), destination = (7, 2), deadline = 25
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0255102040816 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 89 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (5, 5), destination = (8, 3), deadline = 25
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0252525252525 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 90 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (8, 1), destination = (3, 4), deadline = 40
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 91 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99461
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01429
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02094
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01818
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.13163
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.86355
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01111
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00830
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.26733
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.39520
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02703
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.85438
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01370
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03297
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.01335
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.33062
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01613
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.68733
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.03419
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.14606
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04908
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06069
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07716
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.53457
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08333
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01087
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01235
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.03420
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.23457
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05263
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.37096
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01190
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.97083
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 3.53760
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 1.07709
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.98379
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.53330
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.08135
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.78294
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.51042
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50824
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.52189
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.02461
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.31306
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.34235
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.53659
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.27196
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.96354
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: -0.05882
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.35164
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.50053
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.03512
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.98379
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: -0.14184
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.52828
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.92261
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 4.38607
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 1.75848
--------------------------------------------------------------------------------
updated cells:  58 , self.total_cell_count: 2048 , updated_func_counter: 1559
self.alpha: 0.5 self.gamma: 0.05 , self.epsilon: 0.5 , success: 91
________________________________________________________________________________
gma = 0.05
eps = 0.2
alp = 0.5
epsilon:  0.2
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (1, 1), destination = (5, 6), deadline = 45
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 1.0 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.0 , action:  right , deadline: 45
annealing now. self.epsilon: 1.0 , action:  None , deadline: 44
annealing now. self.epsilon: 1.0 , action:  left , deadline: 43
annealing now. self.epsilon: 1.0 , action:  right , deadline: 42
annealing now. self.epsilon: 1.0 , action:  None , deadline: 41
annealing now. self.epsilon: 1.0 , action:  None , deadline: 40
annealing now. self.epsilon: 1.0 , action:  right , deadline: 39
annealing now. self.epsilon: 1.0 , action:  None , deadline: 38
annealing now. self.epsilon: 1.0 , action:  right , deadline: 37
annealing now. self.epsilon: 1.0 , action:  right , deadline: 36
annealing now. self.epsilon: 1.0 , action:  left , deadline: 35
annealing now. self.epsilon: 1.0 , action:  right , deadline: 34
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 33
annealing now. self.epsilon: 1.0 , action:  right , deadline: 32
annealing now. self.epsilon: 1.0 , action:  left , deadline: 31
annealing now. self.epsilon: 1.0 , action:  left , deadline: 30
annealing now. self.epsilon: 1.0 , action:  None , deadline: 29
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 28
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 27
annealing now. self.epsilon: 1.0 , action:  right , deadline: 26
annealing now. self.epsilon: 1.0 , action:  None , deadline: 25
annealing now. self.epsilon: 1.0 , action:  left , deadline: 24
annealing now. self.epsilon: 1.0 , action:  left , deadline: 23
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 22
annealing now. self.epsilon: 1.0 , action:  None , deadline: 21
annealing now. self.epsilon: 1.0 , action:  left , deadline: 20
annealing now. self.epsilon: 1.0 , action:  right , deadline: 19
Environment.act(): Primary agent has reached destination!
success: 1 / 1
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (5, 2), destination = (8, 4), deadline = 25
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  right , deadline: 24
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 22
annealing now. self.epsilon: 0.5 , action:  left , deadline: 20
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.5 , action:  left , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 2 / 2
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (8, 5), destination = (4, 1), deadline = 40
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.333333333333 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.333333333333 , action:  forward , deadline: 39
annealing now. self.epsilon: 0.333333333333 , action:  None , deadline: 36
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 33
annealing now. self.epsilon: 0.333333333333 , action:  None , deadline: 30
annealing now. self.epsilon: 0.333333333333 , action:  None , deadline: 27
annealing now. self.epsilon: 0.333333333333 , action:  right , deadline: 24
annealing now. self.epsilon: 0.333333333333 , action:  right , deadline: 21
annealing now. self.epsilon: 0.333333333333 , action:  right , deadline: 18
annealing now. self.epsilon: 0.333333333333 , action:  forward , deadline: 15
annealing now. self.epsilon: 0.333333333333 , action:  None , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 3 / 3
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (1, 3), destination = (6, 4), deadline = 30
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  right , deadline: 28
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.25 , action:  right , deadline: 20
annealing now. self.epsilon: 0.25 , action:  None , deadline: 16
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 12
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 8
Environment.act(): Primary agent has reached destination!
success: 4 / 4
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (3, 2), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.2 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.2 , action:  None , deadline: 30
annealing now. self.epsilon: 0.2 , action:  forward , deadline: 25
annealing now. self.epsilon: 0.2 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.2 , action:  right , deadline: 15
Environment.act(): Primary agent has reached destination!
success: 5 / 5
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (6, 2), destination = (2, 4), deadline = 30
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 30
annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 24
annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 6 / 6
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (4, 4), destination = (8, 6), deadline = 30
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.142857142857 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.142857142857 , action:  None , deadline: 28
annealing now. self.epsilon: 0.142857142857 , action:  None , deadline: 21
Environment.act(): Primary agent has reached destination!
success: 7 / 7
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (2, 4), destination = (8, 6), deadline = 40
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  left , deadline: 40
annealing now. self.epsilon: 0.125 , action:  None , deadline: 32
annealing now. self.epsilon: 0.125 , action:  left , deadline: 24
annealing now. self.epsilon: 0.125 , action:  right , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 8 / 8
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (5, 2), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.111111111111 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.111111111111 , action:  forward , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 9 / 9
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (3, 6), destination = (5, 1), deadline = 35
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  left , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 10 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (3, 6), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0909090909091 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0909090909091 , action:  forward , deadline: 22
Environment.act(): Primary agent has reached destination!
success: 11 / 11
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (8, 5), destination = (1, 2), deadline = 50
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  forward , deadline: 48
annealing now. self.epsilon: 0.0833333333333 , action:  right , deadline: 36
Environment.act(): Primary agent has reached destination!
success: 12 / 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (6, 2), destination = (3, 6), deadline = 35
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0769230769231 , self.eps_freq:  13.0 

annealing now. self.epsilon: 0.0769230769231 , action:  right , deadline: 26
Environment.act(): Primary agent has reached destination!
success: 13 / 13
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (6, 2), destination = (8, 4), deadline = 20
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 14 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (3, 4), destination = (5, 6), deadline = 20
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0666666666667 , self.eps_freq:  15.0 

Environment.act(): Primary agent has reached destination!
success: 15 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (4, 4), destination = (2, 1), deadline = 25
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 16 / 16
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 2), deadline = 45
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0588235294118 , self.eps_freq:  17.0 

annealing now. self.epsilon: 0.0588235294118 , action:  left , deadline: 34
Environment.act(): Primary agent has reached destination!
success: 17 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (4, 1), destination = (8, 6), deadline = 45
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

annealing now. self.epsilon: 0.0555555555556 , action:  left , deadline: 36
Environment.act(): Primary agent has reached destination!
success: 18 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (6, 3), destination = (3, 1), deadline = 25
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0526315789474 , self.eps_freq:  19.0 

Environment.act(): Primary agent has reached destination!
success: 19 / 19
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (1, 6), destination = (6, 1), deadline = 50
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.05 , self.eps_freq:  20.0 

annealing now. self.epsilon: 0.05 , action:  left , deadline: 40
Environment.act(): Primary agent has reached destination!
success: 20 / 20
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (1, 1), destination = (2, 6), deadline = 30
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.047619047619 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 21 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (6, 5), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 22 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (3, 3), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0434782608696 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 23 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (7, 2), destination = (1, 1), deadline = 35
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 24
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (2, 1), destination = (3, 5), deadline = 25
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.04 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (2, 6), destination = (1, 2), deadline = 25
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

success: 25 / 26
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (2, 2), destination = (7, 2), deadline = 25
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.037037037037 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (4, 6), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (1, 1), destination = (6, 2), deadline = 30
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0344827586207 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (7, 5), destination = (8, 2), deadline = 20
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 30
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (3, 3), destination = (8, 2), deadline = 30
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0322580645161 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (6, 1), destination = (1, 6), deadline = 50
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (8, 5), destination = (5, 1), deadline = 35
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.030303030303 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 33
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (3, 3), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 34
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (4, 6), destination = (6, 4), deadline = 20
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0285714285714 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 35
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (1, 1), destination = (2, 4), deadline = 20
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 35 / 36
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (8, 3), destination = (3, 3), deadline = 25
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.027027027027 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 37
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (4, 6), destination = (6, 4), deadline = 20
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (1, 2), destination = (7, 6), deadline = 50
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.025641025641 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (8, 3), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 40
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (8, 6), destination = (3, 4), deadline = 35
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0243902439024 , self.eps_freq:  41.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 41
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (2, 1), destination = (2, 6), deadline = 25
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 42
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (3, 5), destination = (6, 2), deadline = 30
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0232558139535 , self.eps_freq:  43.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (5, 6), destination = (1, 5), deadline = 25
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 44
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (4, 1), destination = (7, 6), deadline = 40
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0222222222222 , self.eps_freq:  45.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (6, 1), destination = (3, 2), deadline = 20
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

success: 44 / 46
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (4, 2), destination = (8, 1), deadline = 25
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0212765957447 , self.eps_freq:  47.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 47
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (7, 5), destination = (2, 2), deadline = 40
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (8, 5), destination = (5, 2), deadline = 30
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0204081632653 , self.eps_freq:  50.0 

Environment.act(): Primary agent has reached destination!
success: 47 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (4, 5), destination = (2, 1), deadline = 30
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.02 , self.eps_freq:  50.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (1, 6), destination = (4, 3), deadline = 30
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0196078431373 , self.eps_freq:  51.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (7, 6), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 52
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (8, 6), destination = (3, 4), deadline = 35
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0188679245283 , self.eps_freq:  53.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (7, 1), destination = (4, 3), deadline = 25
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (2, 1), destination = (8, 2), deadline = 35
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0181818181818 , self.eps_freq:  55.0 

Environment.act(): Primary agent has reached destination!
success: 53 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (3, 2), destination = (1, 6), deadline = 30
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

Environment.act(): Primary agent has reached destination!
success: 54 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (4, 5), destination = (8, 3), deadline = 30
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0175438596491 , self.eps_freq:  57.0 

Environment.act(): Primary agent has reached destination!
success: 55 / 57
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (2, 2), destination = (5, 4), deadline = 25
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 58
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (2, 5), destination = (2, 1), deadline = 20
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0169491525424 , self.eps_freq:  59.0 

Environment.act(): Primary agent has reached destination!
success: 57 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (1, 6), destination = (5, 2), deadline = 40
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

Environment.act(): Primary agent has reached destination!
success: 58 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (7, 4), destination = (1, 2), deadline = 40
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.016393442623 , self.eps_freq:  61.0 

Environment.act(): Primary agent has reached destination!
success: 59 / 61
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (5, 2), destination = (1, 5), deadline = 35
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

Environment.act(): Primary agent has reached destination!
success: 60 / 62
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (8, 6), destination = (7, 1), deadline = 30
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.015873015873 , self.eps_freq:  63.0 

Environment.act(): Primary agent has reached destination!
success: 61 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (3, 5), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

Environment.act(): Primary agent has reached destination!
success: 62 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (7, 6), destination = (3, 6), deadline = 20
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0153846153846 , self.eps_freq:  65.0 

Environment.act(): Primary agent has reached destination!
success: 63 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (6, 1), destination = (3, 4), deadline = 30
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

Environment.act(): Primary agent has reached destination!
success: 64 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (3, 5), destination = (6, 1), deadline = 35
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0149253731343 , self.eps_freq:  67.0 

Environment.act(): Primary agent has reached destination!
success: 65 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (2, 1), destination = (2, 5), deadline = 20
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

Environment.act(): Primary agent has reached destination!
success: 66 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (3, 2), destination = (1, 4), deadline = 20
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0144927536232 , self.eps_freq:  69.0 

Environment.act(): Primary agent has reached destination!
success: 67 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (2, 3), destination = (5, 2), deadline = 20
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

Environment.act(): Primary agent has reached destination!
success: 68 / 70
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (8, 4), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0140845070423 , self.eps_freq:  71.0 

Environment.act(): Primary agent has reached destination!
success: 69 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (8, 6), destination = (1, 1), deadline = 60
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

Environment.act(): Primary agent has reached destination!
success: 70 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (2, 3), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.013698630137 , self.eps_freq:  73.0 

Environment.act(): Primary agent has reached destination!
success: 71 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (1, 6), destination = (7, 4), deadline = 40
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

Environment.act(): Primary agent has reached destination!
success: 72 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (4, 3), destination = (8, 4), deadline = 25
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0133333333333 , self.eps_freq:  75.0 

Environment.act(): Primary agent has reached destination!
success: 73 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (2, 3), destination = (7, 1), deadline = 35
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

Environment.act(): Primary agent has reached destination!
success: 74 / 76
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (2, 3), destination = (3, 6), deadline = 20
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.012987012987 , self.eps_freq:  77.0 

Environment.act(): Primary agent has reached destination!
success: 75 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (1, 1), destination = (7, 5), deadline = 50
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

success: 75 / 78
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (2, 4), destination = (6, 4), deadline = 20
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0126582278481 , self.eps_freq:  79.0 

Environment.act(): Primary agent has reached destination!
success: 76 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (8, 2), destination = (6, 6), deadline = 30
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

Environment.act(): Primary agent has reached destination!
success: 77 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (6, 2), destination = (2, 1), deadline = 25
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0123456790123 , self.eps_freq:  81.0 

Environment.act(): Primary agent has reached destination!
success: 78 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (5, 4), destination = (8, 5), deadline = 20
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

Environment.act(): Primary agent has reached destination!
success: 79 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (2, 4), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0120481927711 , self.eps_freq:  83.0 

Environment.act(): Primary agent has reached destination!
success: 80 / 83
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (2, 3), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

Environment.act(): Primary agent has reached destination!
success: 81 / 84
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (7, 3), destination = (1, 2), deadline = 35
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0117647058824 , self.eps_freq:  85.0 

Environment.act(): Primary agent has reached destination!
success: 82 / 85
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (6, 4), destination = (1, 5), deadline = 30
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

Environment.act(): Primary agent has reached destination!
success: 83 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (7, 3), destination = (3, 1), deadline = 30
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0114942528736 , self.eps_freq:  87.0 

Environment.act(): Primary agent has reached destination!
success: 84 / 87
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (2, 4), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

success: 84 / 88
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (4, 6), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0112359550562 , self.eps_freq:  89.0 

Environment.act(): Primary agent has reached destination!
success: 85 / 89
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (7, 6), destination = (4, 2), deadline = 35
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

Environment.act(): Primary agent has reached destination!
success: 86 / 90
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (3, 5), destination = (3, 1), deadline = 20
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.010989010989 , self.eps_freq:  91.0 

Environment.act(): Primary agent has reached destination!
success: 87 / 91
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (2, 3), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

Environment.act(): Primary agent has reached destination!
success: 88 / 92
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (2, 6), destination = (3, 3), deadline = 20
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.010752688172 , self.eps_freq:  93.0 

success: 88 / 93
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (3, 4), destination = (7, 5), deadline = 25
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

Environment.act(): Primary agent has reached destination!
success: 89 / 94
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (8, 4), destination = (4, 1), deadline = 35
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0105263157895 , self.eps_freq:  95.0 

Environment.act(): Primary agent has reached destination!
success: 90 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (3, 1), destination = (4, 6), deadline = 30
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

Environment.act(): Primary agent has reached destination!
success: 91 / 96
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (5, 2), destination = (2, 6), deadline = 35
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0103092783505 , self.eps_freq:  97.0 

Environment.act(): Primary agent has reached destination!
success: 92 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (2, 6), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

Environment.act(): Primary agent has reached destination!
success: 93 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (1, 2), destination = (6, 3), deadline = 30
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.010101010101 , self.eps_freq:  99.0 

Environment.act(): Primary agent has reached destination!
success: 94 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (8, 2), destination = (1, 2), deadline = 35
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.01 , self.eps_freq:  100.0 

Environment.act(): Primary agent has reached destination!
success: 95 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99692
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01724
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.15605
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.11511
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.40325
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.62122
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.64465
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.53305
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.00074
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.15861
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.21046
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05618
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.30913
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07355
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.59840
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.63970
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.01322
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04412
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05556
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99385
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07143
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.00000
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01639
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.14272
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01961
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00000
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.30976
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02797
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03125
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03333
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.77711
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 3.64046
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.32487
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.99778
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.51337
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.53224
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.54463
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.45200
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.98244
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50535
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50000
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.99859
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.11457
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.06731
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.50786
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.99344
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 2.90886
--------------------------------------------------------------------------------
updated cells:  47 , self.total_cell_count: 2048 , updated_func_counter: 1466
self.alpha: 0.5 self.gamma: 0.05 , self.epsilon: 0.2 , success: 95
________________________________________________________________________________
gma = 0.05
eps = 0.1
alp = 0.5
epsilon:  0.1
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (1, 1), destination = (6, 2), deadline = 30
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.5 , action:  None , deadline: 28
annealing now. self.epsilon: 0.5 , action:  right , deadline: 26
annealing now. self.epsilon: 0.5 , action:  None , deadline: 24
annealing now. self.epsilon: 0.5 , action:  right , deadline: 22
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.5 , action:  right , deadline: 18
annealing now. self.epsilon: 0.5 , action:  left , deadline: 16
annealing now. self.epsilon: 0.5 , action:  left , deadline: 14
annealing now. self.epsilon: 0.5 , action:  right , deadline: 12
annealing now. self.epsilon: 0.5 , action:  None , deadline: 10
annealing now. self.epsilon: 0.5 , action:  right , deadline: 8
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 6
annealing now. self.epsilon: 0.5 , action:  None , deadline: 4
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (5, 5), destination = (1, 6), deadline = 25
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  left , deadline: 24
annealing now. self.epsilon: 0.25 , action:  right , deadline: 20
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 12
annealing now. self.epsilon: 0.25 , action:  None , deadline: 8
success: 0 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (2, 6), destination = (2, 1), deadline = 25
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  left , deadline: 24
annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 18
annealing now. self.epsilon: 0.166666666667 , action:  forward , deadline: 12
success: 0 / 3
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (8, 6), destination = (1, 2), deadline = 55
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  left , deadline: 48
Environment.act(): Primary agent has reached destination!
success: 1 / 4
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (7, 3), destination = (1, 4), deadline = 35
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.1 , action:  None , deadline: 20
success: 1 / 5
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (2, 6), destination = (5, 2), deadline = 35
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  None , deadline: 24
success: 1 / 6
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (5, 5), destination = (3, 1), deadline = 30
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0714285714286 , action:  None , deadline: 28
success: 1 / 7
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (1, 6), destination = (5, 6), deadline = 20
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

success: 1 / 8
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (5, 6), destination = (1, 1), deadline = 45
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

annealing now. self.epsilon: 0.0555555555556 , action:  left , deadline: 36
success: 1 / 9
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (2, 6), destination = (1, 3), deadline = 20
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.05 , self.eps_freq:  20.0 

success: 1 / 10
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (2, 3), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

success: 1 / 11
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (5, 1), destination = (4, 6), deadline = 30
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

success: 1 / 12
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (3, 4), destination = (1, 2), deadline = 20
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

success: 1 / 13
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (2, 3), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

success: 1 / 14
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (3, 6), destination = (5, 1), deadline = 35
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

success: 1 / 15
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (8, 6), destination = (3, 5), deadline = 30
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

success: 1 / 16
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (2, 3), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

success: 1 / 17
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (5, 4), destination = (3, 1), deadline = 25
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

success: 1 / 18
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (1, 5), destination = (5, 1), deadline = 40
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

success: 1 / 19
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (7, 3), destination = (2, 1), deadline = 35
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.025 , self.eps_freq:  40.0 

success: 1 / 20
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (2, 3), destination = (6, 6), deadline = 35
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

success: 1 / 21
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (3, 1), destination = (8, 2), deadline = 30
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

success: 1 / 22
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (3, 3), destination = (7, 5), deadline = 30
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

success: 1 / 23
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (2, 5), destination = (5, 6), deadline = 20
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

success: 1 / 24
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (3, 3), destination = (6, 4), deadline = 20
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.02 , self.eps_freq:  50.0 

success: 1 / 25
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (3, 4), destination = (8, 1), deadline = 40
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

success: 1 / 26
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (1, 6), destination = (5, 6), deadline = 20
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

success: 1 / 27
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (6, 4), destination = (3, 1), deadline = 30
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

success: 1 / 28
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (1, 2), destination = (8, 2), deadline = 35
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

success: 1 / 29
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (2, 6), destination = (8, 5), deadline = 35
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

success: 1 / 30
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (3, 1), destination = (5, 6), deadline = 35
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

success: 1 / 31
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (6, 6), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

success: 1 / 32
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (2, 3), destination = (8, 3), deadline = 30
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

success: 1 / 33
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (3, 4), destination = (1, 2), deadline = 20
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

success: 1 / 34
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (8, 5), destination = (7, 1), deadline = 25
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

success: 1 / 35
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (2, 6), destination = (2, 1), deadline = 25
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

success: 1 / 36
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (1, 3), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

success: 1 / 37
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (7, 6), destination = (1, 2), deadline = 50
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

success: 1 / 38
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (6, 6), destination = (7, 2), deadline = 25
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

success: 1 / 39
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (8, 5), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

success: 1 / 40
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (7, 4), destination = (1, 1), deadline = 45
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

success: 1 / 41
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (5, 3), destination = (1, 1), deadline = 30
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

success: 1 / 42
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (6, 2), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

success: 1 / 43
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (8, 6), destination = (2, 2), deadline = 50
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

success: 1 / 44
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (7, 4), destination = (1, 6), deadline = 40
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

success: 1 / 45
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (7, 3), destination = (1, 6), deadline = 45
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

success: 1 / 46
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (4, 4), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

success: 1 / 47
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (8, 4), destination = (3, 4), deadline = 25
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

success: 1 / 48
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (7, 3), destination = (1, 4), deadline = 35
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

success: 1 / 49
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (3, 4), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.01 , self.eps_freq:  100.0 

success: 1 / 50
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (6, 1), destination = (3, 4), deadline = 30
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.00980392156863 , self.eps_freq:  102.0 

success: 1 / 51
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (8, 5), destination = (1, 1), deadline = 55
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.00961538461538 , self.eps_freq:  104.0 

success: 1 / 52
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (1, 6), destination = (8, 6), deadline = 35
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.00943396226415 , self.eps_freq:  106.0 

success: 1 / 53
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (1, 2), destination = (1, 6), deadline = 20
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.00925925925926 , self.eps_freq:  108.0 

success: 1 / 54
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (2, 4), destination = (7, 6), deadline = 35
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.00909090909091 , self.eps_freq:  110.0 

success: 1 / 55
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (1, 5), destination = (3, 3), deadline = 20
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.00892857142857 , self.eps_freq:  112.0 

success: 1 / 56
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 5), deadline = 30
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.00877192982456 , self.eps_freq:  114.0 

success: 1 / 57
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (6, 5), destination = (6, 1), deadline = 20
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.00862068965517 , self.eps_freq:  116.0 

success: 1 / 58
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (2, 5), destination = (6, 4), deadline = 25
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.00847457627119 , self.eps_freq:  118.0 

success: 1 / 59
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (4, 2), destination = (8, 6), deadline = 40
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.00833333333333 , self.eps_freq:  120.0 

success: 1 / 60
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (3, 6), destination = (2, 2), deadline = 25
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.00819672131148 , self.eps_freq:  122.0 

success: 1 / 61
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (3, 3), destination = (8, 1), deadline = 35
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00806451612903 , self.eps_freq:  124.0 

success: 1 / 62
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (7, 1), destination = (2, 1), deadline = 25
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.00793650793651 , self.eps_freq:  126.0 

success: 1 / 63
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (1, 6), destination = (1, 1), deadline = 25
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0078125 , self.eps_freq:  128.0 

Environment.act(): Primary agent has reached destination!
success: 2 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (4, 1), destination = (6, 5), deadline = 30
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.00769230769231 , self.eps_freq:  130.0 

success: 2 / 65
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (8, 1), destination = (1, 6), deadline = 60
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.00757575757576 , self.eps_freq:  132.0 

success: 2 / 66
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (3, 1), destination = (8, 3), deadline = 35
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.00746268656716 , self.eps_freq:  134.0 

success: 2 / 67
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (1, 2), destination = (3, 4), deadline = 20
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.00735294117647 , self.eps_freq:  136.0 

success: 2 / 68
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (5, 2), destination = (5, 6), deadline = 20
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.00724637681159 , self.eps_freq:  138.0 

success: 2 / 69
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (7, 1), destination = (8, 5), deadline = 25
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.00714285714286 , self.eps_freq:  140.0 

success: 2 / 70
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (1, 1), destination = (3, 5), deadline = 30
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.00704225352113 , self.eps_freq:  142.0 

success: 2 / 71
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (7, 4), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.00694444444444 , self.eps_freq:  144.0 

success: 2 / 72
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (8, 3), destination = (3, 6), deadline = 40
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.00684931506849 , self.eps_freq:  146.0 

success: 2 / 73
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (1, 3), destination = (8, 3), deadline = 35
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.00675675675676 , self.eps_freq:  148.0 

success: 2 / 74
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (8, 1), destination = (2, 6), deadline = 55
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.00666666666667 , self.eps_freq:  150.0 

success: 2 / 75
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (6, 2), destination = (3, 5), deadline = 30
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.00657894736842 , self.eps_freq:  152.0 

success: 2 / 76
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (7, 1), destination = (1, 4), deadline = 45
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.00649350649351 , self.eps_freq:  154.0 

success: 2 / 77
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (5, 1), destination = (1, 5), deadline = 40
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.00641025641026 , self.eps_freq:  156.0 

success: 2 / 78
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (3, 3), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.00632911392405 , self.eps_freq:  158.0 

success: 2 / 79
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (6, 6), destination = (4, 3), deadline = 25
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.00625 , self.eps_freq:  160.0 

success: 2 / 80
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (4, 4), destination = (7, 2), deadline = 25
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.00617283950617 , self.eps_freq:  162.0 

success: 2 / 81
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (8, 1), destination = (1, 4), deadline = 50
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.00609756097561 , self.eps_freq:  164.0 

success: 2 / 82
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (2, 3), destination = (4, 1), deadline = 20
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.00602409638554 , self.eps_freq:  166.0 

success: 2 / 83
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (4, 4), destination = (1, 5), deadline = 20
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.00595238095238 , self.eps_freq:  168.0 

success: 2 / 84
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (4, 3), destination = (8, 6), deadline = 35
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.00588235294118 , self.eps_freq:  170.0 

success: 2 / 85
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (6, 2), destination = (7, 6), deadline = 25
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.00581395348837 , self.eps_freq:  172.0 

success: 2 / 86
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (5, 5), destination = (1, 2), deadline = 35
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.00574712643678 , self.eps_freq:  174.0 

success: 2 / 87
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (6, 5), destination = (3, 1), deadline = 35
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.00568181818182 , self.eps_freq:  176.0 

success: 2 / 88
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (4, 5), destination = (7, 1), deadline = 35
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.00561797752809 , self.eps_freq:  178.0 

success: 2 / 89
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (6, 2), destination = (3, 4), deadline = 25
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.00555555555556 , self.eps_freq:  180.0 

success: 2 / 90
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (6, 1), destination = (5, 5), deadline = 25
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.00549450549451 , self.eps_freq:  182.0 

success: 2 / 91
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (4, 6), destination = (6, 1), deadline = 35
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0054347826087 , self.eps_freq:  184.0 

success: 2 / 92
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (4, 1), destination = (1, 6), deadline = 40
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.00537634408602 , self.eps_freq:  186.0 

success: 2 / 93
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (6, 1), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.00531914893617 , self.eps_freq:  188.0 

success: 2 / 94
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (7, 2), destination = (4, 6), deadline = 35
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.00526315789474 , self.eps_freq:  190.0 

success: 2 / 95
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (1, 1), destination = (5, 4), deadline = 35
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.00520833333333 , self.eps_freq:  192.0 

success: 2 / 96
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (6, 1), destination = (1, 3), deadline = 35
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.00515463917526 , self.eps_freq:  194.0 

success: 2 / 97
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (8, 6), destination = (3, 5), deadline = 30
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.00510204081633 , self.eps_freq:  197.0 

success: 2 / 98
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (5, 5), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.00505050505051 , self.eps_freq:  198.0 

success: 2 / 99
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (7, 1), destination = (1, 4), deadline = 45
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.005 , self.eps_freq:  200.0 

success: 2 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.01236
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.11668
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05939
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05547
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03963
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.26354
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04528
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.22475
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01020
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07569
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.97267
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.02919
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.25525
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.18928
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05734
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06106
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.33353
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08355
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04762
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05752
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.98158
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.16667
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00000
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03571
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06479
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01299
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04348
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.01914
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.16302
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06329
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09089
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01667
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01449
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02564
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00000
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04348
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.19703
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.67301
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.99353
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.99984
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.25000
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50016
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50328
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.04232
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.64572
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.32700
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.12973
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.98086
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.51324
--------------------------------------------------------------------------------
updated cells:  49 , self.total_cell_count: 2048 , updated_func_counter: 3119
self.alpha: 0.5 self.gamma: 0.05 , self.epsilon: 0.1 , success: 2
________________________________________________________________________________
Environment.reset(): Primary agent could not reach destination within deadline!
gma = 0.1
eps = 0.5
alp = 0.5
epsilon:  0.5
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (3, 4), destination = (7, 3), deadline = 25
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 2.5 , self.eps_freq:  1.0 

annealing now. self.epsilon: 2.5 , action:  left , deadline: 25
annealing now. self.epsilon: 2.5 , action:  right , deadline: 24
annealing now. self.epsilon: 2.5 , action:  right , deadline: 23
annealing now. self.epsilon: 2.5 , action:  right , deadline: 22
annealing now. self.epsilon: 2.5 , action:  left , deadline: 21
annealing now. self.epsilon: 2.5 , action:  right , deadline: 20
annealing now. self.epsilon: 2.5 , action:  None , deadline: 19
annealing now. self.epsilon: 2.5 , action:  None , deadline: 18
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 17
annealing now. self.epsilon: 2.5 , action:  None , deadline: 16
annealing now. self.epsilon: 2.5 , action:  None , deadline: 15
annealing now. self.epsilon: 2.5 , action:  None , deadline: 14
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 13
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 12
annealing now. self.epsilon: 2.5 , action:  left , deadline: 11
annealing now. self.epsilon: 2.5 , action:  right , deadline: 10
annealing now. self.epsilon: 2.5 , action:  None , deadline: 9
annealing now. self.epsilon: 2.5 , action:  right , deadline: 8
annealing now. self.epsilon: 2.5 , action:  left , deadline: 7
annealing now. self.epsilon: 2.5 , action:  None , deadline: 6
annealing now. self.epsilon: 2.5 , action:  left , deadline: 5
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 4
annealing now. self.epsilon: 2.5 , action:  left , deadline: 3
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 2
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (6, 1), destination = (2, 6), deadline = 45
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 1.25 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.25 , action:  right , deadline: 45
annealing now. self.epsilon: 1.25 , action:  None , deadline: 44
annealing now. self.epsilon: 1.25 , action:  None , deadline: 43
annealing now. self.epsilon: 1.25 , action:  None , deadline: 42
annealing now. self.epsilon: 1.25 , action:  None , deadline: 41
annealing now. self.epsilon: 1.25 , action:  right , deadline: 40
annealing now. self.epsilon: 1.25 , action:  right , deadline: 39
annealing now. self.epsilon: 1.25 , action:  None , deadline: 38
annealing now. self.epsilon: 1.25 , action:  left , deadline: 37
annealing now. self.epsilon: 1.25 , action:  None , deadline: 36
annealing now. self.epsilon: 1.25 , action:  left , deadline: 35
annealing now. self.epsilon: 1.25 , action:  None , deadline: 34
annealing now. self.epsilon: 1.25 , action:  None , deadline: 33
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 32
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 31
annealing now. self.epsilon: 1.25 , action:  None , deadline: 30
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 29
annealing now. self.epsilon: 1.25 , action:  right , deadline: 28
annealing now. self.epsilon: 1.25 , action:  left , deadline: 27
annealing now. self.epsilon: 1.25 , action:  right , deadline: 26
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 25
annealing now. self.epsilon: 1.25 , action:  left , deadline: 24
annealing now. self.epsilon: 1.25 , action:  right , deadline: 23
annealing now. self.epsilon: 1.25 , action:  left , deadline: 22
annealing now. self.epsilon: 1.25 , action:  None , deadline: 21
annealing now. self.epsilon: 1.25 , action:  right , deadline: 20
annealing now. self.epsilon: 1.25 , action:  None , deadline: 19
annealing now. self.epsilon: 1.25 , action:  right , deadline: 18
annealing now. self.epsilon: 1.25 , action:  right , deadline: 17
annealing now. self.epsilon: 1.25 , action:  None , deadline: 16
annealing now. self.epsilon: 1.25 , action:  right , deadline: 15
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 14
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 13
annealing now. self.epsilon: 1.25 , action:  left , deadline: 12
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 11
annealing now. self.epsilon: 1.25 , action:  left , deadline: 10
annealing now. self.epsilon: 1.25 , action:  right , deadline: 9
annealing now. self.epsilon: 1.25 , action:  right , deadline: 8
annealing now. self.epsilon: 1.25 , action:  None , deadline: 7
annealing now. self.epsilon: 1.25 , action:  None , deadline: 6
annealing now. self.epsilon: 1.25 , action:  None , deadline: 5
annealing now. self.epsilon: 1.25 , action:  right , deadline: 4
annealing now. self.epsilon: 1.25 , action:  right , deadline: 3
annealing now. self.epsilon: 1.25 , action:  left , deadline: 2
success: 0 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (8, 4), destination = (2, 1), deadline = 45
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.833333333333 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 44
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 42
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 40
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 38
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 36
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 34
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 32
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 30
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 28
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 26
Environment.act(): Primary agent has reached destination!
success: 1 / 3
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (3, 2), destination = (8, 6), deadline = 45
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.625 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.625 , action:  left , deadline: 44
annealing now. self.epsilon: 0.625 , action:  None , deadline: 42
annealing now. self.epsilon: 0.625 , action:  left , deadline: 40
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 38
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 36
annealing now. self.epsilon: 0.625 , action:  right , deadline: 34
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 32
annealing now. self.epsilon: 0.625 , action:  right , deadline: 30
annealing now. self.epsilon: 0.625 , action:  right , deadline: 28
annealing now. self.epsilon: 0.625 , action:  right , deadline: 26
annealing now. self.epsilon: 0.625 , action:  None , deadline: 24
annealing now. self.epsilon: 0.625 , action:  left , deadline: 22
annealing now. self.epsilon: 0.625 , action:  right , deadline: 20
annealing now. self.epsilon: 0.625 , action:  None , deadline: 18
annealing now. self.epsilon: 0.625 , action:  left , deadline: 16
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 14
annealing now. self.epsilon: 0.625 , action:  left , deadline: 12
annealing now. self.epsilon: 0.625 , action:  None , deadline: 10
annealing now. self.epsilon: 0.625 , action:  right , deadline: 8
annealing now. self.epsilon: 0.625 , action:  left , deadline: 6
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 4
success: 1 / 4
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (4, 6), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  None , deadline: 20
annealing now. self.epsilon: 0.5 , action:  left , deadline: 18
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 2 / 5
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (5, 4), destination = (7, 1), deadline = 25
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.416666666667 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.416666666667 , action:  None , deadline: 24
annealing now. self.epsilon: 0.416666666667 , action:  right , deadline: 21
annealing now. self.epsilon: 0.416666666667 , action:  None , deadline: 18
annealing now. self.epsilon: 0.416666666667 , action:  left , deadline: 15
annealing now. self.epsilon: 0.416666666667 , action:  right , deadline: 12
annealing now. self.epsilon: 0.416666666667 , action:  right , deadline: 9
Environment.act(): Primary agent has reached destination!
success: 3 / 6
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (7, 6), destination = (3, 1), deadline = 45
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.357142857143 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 45
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 42
annealing now. self.epsilon: 0.357142857143 , action:  forward , deadline: 39
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 36
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 33
annealing now. self.epsilon: 0.357142857143 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 27
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 24
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 21
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 18
annealing now. self.epsilon: 0.357142857143 , action:  forward , deadline: 15
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 12
annealing now. self.epsilon: 0.357142857143 , action:  forward , deadline: 9
annealing now. self.epsilon: 0.357142857143 , action:  forward , deadline: 6
Environment.act(): Primary agent has reached destination!
success: 4 / 7
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (7, 5), destination = (2, 1), deadline = 45
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.3125 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.3125 , action:  None , deadline: 44
annealing now. self.epsilon: 0.3125 , action:  None , deadline: 40
annealing now. self.epsilon: 0.3125 , action:  None , deadline: 36
annealing now. self.epsilon: 0.3125 , action:  right , deadline: 32
annealing now. self.epsilon: 0.3125 , action:  left , deadline: 28
annealing now. self.epsilon: 0.3125 , action:  None , deadline: 24
annealing now. self.epsilon: 0.3125 , action:  None , deadline: 20
annealing now. self.epsilon: 0.3125 , action:  left , deadline: 16
annealing now. self.epsilon: 0.3125 , action:  left , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 5 / 8
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 4), deadline = 35
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.277777777778 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.277777777778 , action:  None , deadline: 32
annealing now. self.epsilon: 0.277777777778 , action:  left , deadline: 28
annealing now. self.epsilon: 0.277777777778 , action:  left , deadline: 24
annealing now. self.epsilon: 0.277777777778 , action:  forward , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 6 / 9
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (2, 3), destination = (4, 1), deadline = 20
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  right , deadline: 20
annealing now. self.epsilon: 0.25 , action:  None , deadline: 16
annealing now. self.epsilon: 0.25 , action:  None , deadline: 12
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 8
success: 6 / 10
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (8, 6), destination = (2, 4), deadline = 40
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.227272727273 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.227272727273 , action:  left , deadline: 40
annealing now. self.epsilon: 0.227272727273 , action:  right , deadline: 35
annealing now. self.epsilon: 0.227272727273 , action:  left , deadline: 30
annealing now. self.epsilon: 0.227272727273 , action:  left , deadline: 25
Environment.act(): Primary agent has reached destination!
success: 7 / 11
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (6, 5), destination = (3, 1), deadline = 35
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.208333333333 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.208333333333 , action:  forward , deadline: 35
annealing now. self.epsilon: 0.208333333333 , action:  right , deadline: 30
annealing now. self.epsilon: 0.208333333333 , action:  None , deadline: 25
annealing now. self.epsilon: 0.208333333333 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.208333333333 , action:  None , deadline: 15
Environment.act(): Primary agent has reached destination!
success: 8 / 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (3, 1), destination = (8, 1), deadline = 25
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.192307692308 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.192307692308 , action:  None , deadline: 24
annealing now. self.epsilon: 0.192307692308 , action:  left , deadline: 18
annealing now. self.epsilon: 0.192307692308 , action:  right , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 9 / 13
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (6, 1), destination = (1, 6), deadline = 50
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.178571428571 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.178571428571 , action:  left , deadline: 48
annealing now. self.epsilon: 0.178571428571 , action:  None , deadline: 42
Environment.act(): Primary agent has reached destination!
success: 10 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (4, 1), destination = (8, 2), deadline = 25
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 11 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (6, 1), destination = (3, 6), deadline = 40
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.15625 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.15625 , action:  left , deadline: 35
Environment.act(): Primary agent has reached destination!
success: 12 / 16
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (5, 1), destination = (4, 6), deadline = 30
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.147058823529 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.147058823529 , action:  None , deadline: 28
Environment.act(): Primary agent has reached destination!
success: 13 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (5, 3), destination = (3, 1), deadline = 20
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.138888888889 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.138888888889 , action:  None , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 14 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (2, 2), destination = (6, 1), deadline = 25
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.131578947368 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.131578947368 , action:  None , deadline: 24
annealing now. self.epsilon: 0.131578947368 , action:  left , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 15 / 19
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (7, 5), destination = (3, 1), deadline = 40
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  forward , deadline: 40
annealing now. self.epsilon: 0.125 , action:  left , deadline: 32
annealing now. self.epsilon: 0.125 , action:  None , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 16 / 20
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (8, 2), destination = (2, 5), deadline = 45
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.119047619048 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.119047619048 , action:  right , deadline: 45
Environment.act(): Primary agent has reached destination!
success: 17 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (5, 1), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.113636363636 , self.eps_freq:  9.0 

Environment.act(): Primary agent has reached destination!
success: 18 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (2, 1), destination = (6, 1), deadline = 20
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.108695652174 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.108695652174 , action:  right , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 19 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (4, 5), destination = (3, 1), deadline = 25
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.104166666667 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.104166666667 , action:  left , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 20 / 24
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (1, 4), destination = (7, 6), deadline = 40
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  forward , deadline: 40
annealing now. self.epsilon: 0.1 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.1 , action:  None , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 21 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (8, 5), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0961538461538 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0961538461538 , action:  right , deadline: 22
Environment.act(): Primary agent has reached destination!
success: 22 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (6, 2), destination = (3, 4), deadline = 25
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0925925925926 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0925925925926 , action:  None , deadline: 22
Environment.act(): Primary agent has reached destination!
success: 23 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (8, 6), destination = (4, 4), deadline = 30
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0892857142857 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0892857142857 , action:  None , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 24 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (8, 5), destination = (1, 3), deadline = 45
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0862068965517 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0862068965517 , action:  forward , deadline: 36
annealing now. self.epsilon: 0.0862068965517 , action:  right , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 25 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (8, 3), destination = (2, 5), deadline = 40
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  left , deadline: 36
annealing now. self.epsilon: 0.0833333333333 , action:  left , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 26 / 30
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (1, 6), destination = (5, 2), deadline = 40
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0806451612903 , self.eps_freq:  13.0 

annealing now. self.epsilon: 0.0806451612903 , action:  forward , deadline: 39
annealing now. self.epsilon: 0.0806451612903 , action:  right , deadline: 26
success: 26 / 31
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (8, 2), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.078125 , self.eps_freq:  13.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (5, 2), destination = (2, 5), deadline = 30
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0757575757576 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0757575757576 , action:  right , deadline: 28
Environment.act(): Primary agent has reached destination!
success: 28 / 33
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (5, 5), destination = (3, 3), deadline = 20
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0735294117647 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 34
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (8, 4), destination = (2, 4), deadline = 30
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0714285714286 , action:  forward , deadline: 28
success: 29 / 35
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (2, 1), destination = (8, 3), deadline = 40
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0694444444444 , self.eps_freq:  15.0 

annealing now. self.epsilon: 0.0694444444444 , action:  None , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 30 / 36
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (2, 4), destination = (6, 2), deadline = 30
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0675675675676 , self.eps_freq:  15.0 

annealing now. self.epsilon: 0.0675675675676 , action:  right , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 31 / 37
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (7, 1), destination = (3, 6), deadline = 45
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0657894736842 , self.eps_freq:  16.0 

annealing now. self.epsilon: 0.0657894736842 , action:  forward , deadline: 32
Environment.act(): Primary agent has reached destination!
success: 32 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (3, 6), destination = (3, 2), deadline = 20
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0641025641026 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (6, 1), destination = (3, 4), deadline = 30
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

success: 33 / 40
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (1, 2), destination = (4, 1), deadline = 20
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0609756097561 , self.eps_freq:  17.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 41
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (1, 5), destination = (8, 1), deadline = 55
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0595238095238 , self.eps_freq:  17.0 

annealing now. self.epsilon: 0.0595238095238 , action:  forward , deadline: 51
annealing now. self.epsilon: 0.0595238095238 , action:  left , deadline: 34
Environment.act(): Primary agent has reached destination!
success: 35 / 42
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (4, 6), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0581395348837 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (2, 4), destination = (8, 2), deadline = 40
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0568181818182 , self.eps_freq:  18.0 

annealing now. self.epsilon: 0.0568181818182 , action:  left , deadline: 36
Environment.act(): Primary agent has reached destination!
success: 37 / 44
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (5, 6), destination = (1, 4), deadline = 30
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (7, 5), destination = (6, 1), deadline = 25
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.054347826087 , self.eps_freq:  19.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 46
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (2, 6), destination = (6, 2), deadline = 40
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0531914893617 , self.eps_freq:  19.0 

annealing now. self.epsilon: 0.0531914893617 , action:  None , deadline: 38
Environment.act(): Primary agent has reached destination!
success: 40 / 47
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (3, 2), destination = (6, 6), deadline = 35
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0520833333333 , self.eps_freq:  20.0 

success: 40 / 48
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (8, 6), destination = (2, 5), deadline = 35
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0510204081633 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (2, 5), destination = (6, 3), deadline = 30
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.05 , self.eps_freq:  20.0 

success: 41 / 50
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (2, 3), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0490196078431 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (4, 1), destination = (3, 6), deadline = 30
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0480769230769 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 52
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (1, 1), destination = (4, 5), deadline = 35
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0471698113208 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (8, 4), destination = (2, 3), deadline = 35
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0462962962963 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (1, 2), destination = (6, 4), deadline = 35
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (3, 6), destination = (8, 1), deadline = 50
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0446428571429 , self.eps_freq:  23.0 

annealing now. self.epsilon: 0.0446428571429 , action:  left , deadline: 46
Environment.act(): Primary agent has reached destination!
success: 47 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (2, 4), destination = (7, 1), deadline = 40
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0438596491228 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 57
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (6, 4), destination = (2, 4), deadline = 20
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0431034482759 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 58
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (8, 3), destination = (7, 6), deadline = 20
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0423728813559 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (1, 2), destination = (7, 1), deadline = 35
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (7, 1), destination = (3, 2), deadline = 25
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0409836065574 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 61
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (8, 4), destination = (2, 1), deadline = 45
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0403225806452 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 53 / 62
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (6, 5), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0396825396825 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 54 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (3, 4), destination = (4, 1), deadline = 20
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0390625 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 55 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (3, 6), destination = (3, 1), deadline = 25
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (7, 2), destination = (5, 6), deadline = 30
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0378787878788 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 57 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (5, 6), destination = (1, 4), deadline = 30
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0373134328358 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 58 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (6, 5), destination = (3, 1), deadline = 35
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0367647058824 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 59 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (6, 3), destination = (3, 1), deadline = 25
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.036231884058 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 60 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (1, 3), destination = (3, 5), deadline = 20
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 61 / 70
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (8, 2), destination = (3, 5), deadline = 40
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0352112676056 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 62 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (7, 2), destination = (4, 1), deadline = 20
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0347222222222 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 63 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (4, 4), destination = (7, 6), deadline = 25
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0342465753425 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 64 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (1, 5), destination = (6, 3), deadline = 35
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0337837837838 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 65 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (8, 4), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 66 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (5, 3), destination = (8, 4), deadline = 20
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0328947368421 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 67 / 76
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (1, 1), destination = (7, 3), deadline = 40
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0324675324675 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 68 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (4, 2), destination = (2, 6), deadline = 30
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0320512820513 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 69 / 78
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (6, 2), destination = (1, 4), deadline = 35
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0316455696203 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 70 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (7, 6), destination = (5, 2), deadline = 30
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 71 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (5, 2), destination = (8, 1), deadline = 20
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0308641975309 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 72 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (3, 3), destination = (7, 2), deadline = 25
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.030487804878 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 73 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (4, 2), destination = (8, 4), deadline = 30
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0301204819277 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 74 / 83
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (7, 4), destination = (1, 4), deadline = 30
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0297619047619 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 75 / 84
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (4, 6), destination = (1, 5), deadline = 20
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 76 / 85
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (5, 2), destination = (1, 2), deadline = 20
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0290697674419 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 77 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (4, 3), destination = (7, 6), deadline = 30
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0287356321839 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 78 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (5, 3), destination = (6, 6), deadline = 20
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0284090909091 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 79 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (5, 4), destination = (7, 1), deadline = 25
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0280898876404 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 80 / 89
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (2, 6), destination = (3, 2), deadline = 25
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 81 / 90
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (2, 6), destination = (8, 4), deadline = 40
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0274725274725 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 82 / 91
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (1, 2), destination = (1, 6), deadline = 20
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0271739130435 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 83 / 92
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (8, 6), destination = (3, 5), deadline = 30
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0268817204301 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 84 / 93
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (3, 1), destination = (6, 5), deadline = 35
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0265957446809 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 85 / 94
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (3, 1), destination = (2, 5), deadline = 25
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 86 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (4, 6), destination = (7, 5), deadline = 20
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0260416666667 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 87 / 96
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (1, 1), destination = (7, 2), deadline = 35
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0257731958763 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 88 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (6, 2), destination = (7, 6), deadline = 25
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0255102040816 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 89 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (2, 1), destination = (1, 6), deadline = 30
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0252525252525 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 90 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (1, 2), destination = (3, 6), deadline = 30
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 91 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.98678
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04681
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03448
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01099
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02174
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01493
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02196
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.40416
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06183
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.80599
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02500
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02500
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.11914
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.33949
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02083
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.38318
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.19567
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.48102
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.30866
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05000
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12500
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.80046
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04939
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09640
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.06137
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10000
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07034
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.01779
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.38500
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01370
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.43906
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12500
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07143
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01639
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03846
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.30420
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.08351
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08164
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02041
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04146
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.02080
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 4.03668
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.70171
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: -0.50000
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.36634
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.04653
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.38500
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.52133
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.05760
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.39277
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.42268
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.66721
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 1.47104
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.51384
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.56548
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.01602
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: -0.50000
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.56506
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.13836
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.31165
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.52147
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.52974
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.15954
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.07478
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.04495
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: -1.00000
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 4.16436
--------------------------------------------------------------------------------
updated cells:  67 , self.total_cell_count: 2048 , updated_func_counter: 1664
self.alpha: 0.5 self.gamma: 0.1 , self.epsilon: 0.5 , success: 91
________________________________________________________________________________
gma = 0.1
eps = 0.2
alp = 0.5
epsilon:  0.2
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (1, 2), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 1.0 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.0 , action:  forward , deadline: 25
annealing now. self.epsilon: 1.0 , action:  None , deadline: 24
annealing now. self.epsilon: 1.0 , action:  left , deadline: 23
annealing now. self.epsilon: 1.0 , action:  right , deadline: 22
annealing now. self.epsilon: 1.0 , action:  None , deadline: 21
annealing now. self.epsilon: 1.0 , action:  left , deadline: 20
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 19
annealing now. self.epsilon: 1.0 , action:  right , deadline: 18
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 17
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 16
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 15
annealing now. self.epsilon: 1.0 , action:  None , deadline: 14
annealing now. self.epsilon: 1.0 , action:  right , deadline: 13
annealing now. self.epsilon: 1.0 , action:  right , deadline: 12
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 11
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 10
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 9
annealing now. self.epsilon: 1.0 , action:  right , deadline: 8
annealing now. self.epsilon: 1.0 , action:  left , deadline: 7
annealing now. self.epsilon: 1.0 , action:  right , deadline: 6
annealing now. self.epsilon: 1.0 , action:  right , deadline: 5
annealing now. self.epsilon: 1.0 , action:  right , deadline: 4
annealing now. self.epsilon: 1.0 , action:  None , deadline: 3
annealing now. self.epsilon: 1.0 , action:  left , deadline: 2
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (8, 2), destination = (1, 1), deadline = 40
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  right , deadline: 40
annealing now. self.epsilon: 0.5 , action:  right , deadline: 38
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 36
annealing now. self.epsilon: 0.5 , action:  None , deadline: 34
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 32
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.5 , action:  left , deadline: 28
annealing now. self.epsilon: 0.5 , action:  right , deadline: 26
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.5 , action:  left , deadline: 22
annealing now. self.epsilon: 0.5 , action:  None , deadline: 20
annealing now. self.epsilon: 0.5 , action:  None , deadline: 18
annealing now. self.epsilon: 0.5 , action:  left , deadline: 16
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 14
annealing now. self.epsilon: 0.5 , action:  None , deadline: 12
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 10
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 8
annealing now. self.epsilon: 0.5 , action:  left , deadline: 6
annealing now. self.epsilon: 0.5 , action:  left , deadline: 4
success: 0 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (4, 5), destination = (1, 1), deadline = 35
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.333333333333 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.333333333333 , action:  None , deadline: 33
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 30
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 27
annealing now. self.epsilon: 0.333333333333 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.333333333333 , action:  forward , deadline: 21
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 18
annealing now. self.epsilon: 0.333333333333 , action:  forward , deadline: 15
annealing now. self.epsilon: 0.333333333333 , action:  right , deadline: 12
annealing now. self.epsilon: 0.333333333333 , action:  right , deadline: 9
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 6
success: 0 / 3
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (6, 1), destination = (4, 6), deadline = 35
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  forward , deadline: 32
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 28
annealing now. self.epsilon: 0.25 , action:  right , deadline: 24
annealing now. self.epsilon: 0.25 , action:  left , deadline: 20
annealing now. self.epsilon: 0.25 , action:  right , deadline: 16
annealing now. self.epsilon: 0.25 , action:  None , deadline: 12
annealing now. self.epsilon: 0.25 , action:  left , deadline: 8
success: 0 / 4
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (4, 6), destination = (2, 4), deadline = 20
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.2 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.2 , action:  left , deadline: 20
annealing now. self.epsilon: 0.2 , action:  right , deadline: 15
annealing now. self.epsilon: 0.2 , action:  left , deadline: 10
success: 0 / 5
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (5, 5), destination = (8, 6), deadline = 20
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 1 / 6
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (4, 5), destination = (1, 3), deadline = 25
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.142857142857 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.142857142857 , action:  right , deadline: 21
annealing now. self.epsilon: 0.142857142857 , action:  left , deadline: 14
Environment.act(): Primary agent has reached destination!
success: 2 / 7
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (2, 1), destination = (5, 3), deadline = 25
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  right , deadline: 24
annealing now. self.epsilon: 0.125 , action:  right , deadline: 16
success: 2 / 8
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (8, 5), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.111111111111 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.111111111111 , action:  None , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 3 / 9
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (1, 6), destination = (2, 3), deadline = 20
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  right , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 4 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (5, 6), destination = (4, 1), deadline = 30
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0909090909091 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0909090909091 , action:  left , deadline: 22
success: 4 / 11
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (1, 3), destination = (7, 2), deadline = 35
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  left , deadline: 24
success: 4 / 12
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (7, 4), destination = (2, 4), deadline = 25
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0769230769231 , self.eps_freq:  13.0 

Environment.act(): Primary agent has reached destination!
success: 5 / 13
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (6, 2), destination = (2, 4), deadline = 30
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0714285714286 , action:  forward , deadline: 28
success: 5 / 14
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (2, 5), destination = (2, 1), deadline = 20
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0666666666667 , self.eps_freq:  15.0 

success: 5 / 15
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (4, 4), destination = (8, 3), deadline = 25
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

success: 5 / 16
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (8, 5), destination = (8, 1), deadline = 20
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0588235294118 , self.eps_freq:  17.0 

Environment.act(): Primary agent has reached destination!
success: 6 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (3, 1), destination = (2, 5), deadline = 25
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

success: 6 / 18
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (1, 2), destination = (7, 3), deadline = 35
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0526315789474 , self.eps_freq:  19.0 

Environment.act(): Primary agent has reached destination!
success: 7 / 19
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (3, 2), destination = (2, 5), deadline = 20
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.05 , self.eps_freq:  20.0 

success: 7 / 20
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (8, 2), destination = (1, 2), deadline = 35
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.047619047619 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 8 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (8, 4), destination = (1, 5), deadline = 40
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 9 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (6, 2), destination = (2, 4), deadline = 30
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0434782608696 , self.eps_freq:  23.0 

success: 9 / 23
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (6, 4), destination = (2, 4), deadline = 20
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 10 / 24
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (6, 2), destination = (2, 4), deadline = 30
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.04 , self.eps_freq:  25.0 

success: 10 / 25
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (3, 5), destination = (7, 3), deadline = 30
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

success: 10 / 26
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (3, 5), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.037037037037 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 11 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (8, 3), destination = (1, 2), deadline = 40
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 12 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (6, 3), destination = (3, 1), deadline = 25
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0344827586207 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 13 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (3, 5), destination = (7, 1), deadline = 40
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

success: 13 / 30
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (6, 5), destination = (2, 3), deadline = 30
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0322580645161 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 14 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (5, 1), destination = (3, 4), deadline = 25
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

success: 14 / 32
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (3, 5), destination = (7, 2), deadline = 35
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.030303030303 , self.eps_freq:  33.0 

success: 14 / 33
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (1, 3), destination = (6, 6), deadline = 40
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 15 / 34
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (4, 4), destination = (7, 2), deadline = 25
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0285714285714 , self.eps_freq:  35.0 

success: 15 / 35
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (2, 1), destination = (8, 1), deadline = 30
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 16 / 36
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (1, 3), destination = (8, 4), deadline = 40
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.027027027027 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 17 / 37
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (6, 3), destination = (1, 3), deadline = 25
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 18 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (1, 3), destination = (8, 6), deadline = 50
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.025641025641 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 19 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (6, 1), destination = (8, 4), deadline = 25
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 20 / 40
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 2), deadline = 45
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0243902439024 , self.eps_freq:  41.0 

success: 20 / 41
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (8, 5), destination = (1, 5), deadline = 35
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

Environment.act(): Primary agent has reached destination!
success: 21 / 42
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (8, 1), destination = (8, 6), deadline = 25
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0232558139535 , self.eps_freq:  43.0 

Environment.act(): Primary agent has reached destination!
success: 22 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (5, 5), destination = (8, 6), deadline = 20
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

Environment.act(): Primary agent has reached destination!
success: 23 / 44
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (4, 6), destination = (8, 1), deadline = 45
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0222222222222 , self.eps_freq:  45.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (3, 2), destination = (3, 6), deadline = 20
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

success: 24 / 46
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (4, 2), destination = (7, 6), deadline = 35
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0212765957447 , self.eps_freq:  47.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 47
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (3, 2), destination = (3, 6), deadline = 20
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

success: 25 / 48
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (1, 6), destination = (8, 6), deadline = 35
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0204081632653 , self.eps_freq:  50.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (4, 4), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.02 , self.eps_freq:  50.0 

success: 26 / 50
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (6, 5), destination = (2, 4), deadline = 25
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0196078431373 , self.eps_freq:  51.0 

success: 26 / 51
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (4, 4), destination = (8, 1), deadline = 35
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

success: 26 / 52
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (4, 4), destination = (1, 2), deadline = 25
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0188679245283 , self.eps_freq:  53.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (3, 5), destination = (6, 4), deadline = 20
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

success: 27 / 54
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (4, 3), destination = (1, 5), deadline = 25
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0181818181818 , self.eps_freq:  55.0 

success: 27 / 55
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (2, 2), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (3, 6), destination = (1, 2), deadline = 30
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0175438596491 , self.eps_freq:  57.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 57
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (7, 4), destination = (3, 5), deadline = 25
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

success: 29 / 58
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (3, 5), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0169491525424 , self.eps_freq:  59.0 

success: 29 / 59
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (8, 2), destination = (1, 3), deadline = 40
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

success: 29 / 60
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (1, 5), destination = (6, 3), deadline = 35
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.016393442623 , self.eps_freq:  61.0 

success: 29 / 61
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (8, 5), destination = (4, 4), deadline = 25
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 62
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (8, 1), destination = (3, 2), deadline = 30
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.015873015873 , self.eps_freq:  63.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (3, 3), destination = (6, 4), deadline = 20
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (7, 2), destination = (1, 1), deadline = 35
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0153846153846 , self.eps_freq:  65.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (1, 6), destination = (7, 1), deadline = 55
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (6, 5), destination = (7, 2), deadline = 20
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0149253731343 , self.eps_freq:  67.0 

success: 34 / 67
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (1, 1), destination = (3, 5), deadline = 30
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

Environment.act(): Primary agent has reached destination!
success: 35 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (2, 1), destination = (5, 6), deadline = 40
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0144927536232 , self.eps_freq:  69.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (6, 2), destination = (5, 6), deadline = 25
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

success: 36 / 70
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (1, 1), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0140845070423 , self.eps_freq:  71.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (7, 6), destination = (8, 2), deadline = 25
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (4, 5), destination = (1, 6), deadline = 20
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.013698630137 , self.eps_freq:  73.0 

success: 38 / 73
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (1, 2), destination = (3, 4), deadline = 20
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (5, 3), destination = (8, 1), deadline = 25
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0133333333333 , self.eps_freq:  75.0 

success: 39 / 75
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (7, 4), destination = (4, 2), deadline = 25
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

success: 39 / 76
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (5, 2), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.012987012987 , self.eps_freq:  77.0 

success: 39 / 77
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (1, 1), destination = (6, 5), deadline = 45
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 78
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (8, 2), destination = (2, 3), deadline = 35
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0126582278481 , self.eps_freq:  79.0 

success: 40 / 79
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (5, 3), destination = (8, 6), deadline = 30
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (7, 6), destination = (2, 5), deadline = 30
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0123456790123 , self.eps_freq:  81.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (5, 6), destination = (2, 5), deadline = 20
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (6, 6), destination = (8, 1), deadline = 35
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0120481927711 , self.eps_freq:  83.0 

success: 43 / 83
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (6, 6), destination = (5, 2), deadline = 25
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 84
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (3, 4), destination = (6, 1), deadline = 30
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0117647058824 , self.eps_freq:  85.0 

success: 44 / 85
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (3, 1), destination = (2, 6), deadline = 30
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

success: 44 / 86
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (1, 1), destination = (1, 6), deadline = 25
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0114942528736 , self.eps_freq:  87.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (6, 2), destination = (5, 6), deadline = 25
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

success: 45 / 88
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (7, 6), destination = (5, 3), deadline = 25
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0112359550562 , self.eps_freq:  89.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 89
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (2, 4), destination = (8, 2), deadline = 40
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

success: 46 / 90
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (4, 1), destination = (7, 3), deadline = 25
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.010989010989 , self.eps_freq:  91.0 

Environment.act(): Primary agent has reached destination!
success: 47 / 91
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (8, 1), destination = (2, 5), deadline = 50
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 92
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (6, 4), destination = (2, 3), deadline = 25
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.010752688172 , self.eps_freq:  93.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 93
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (2, 3), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

success: 49 / 94
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (6, 2), destination = (5, 6), deadline = 25
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0105263157895 , self.eps_freq:  95.0 

success: 49 / 95
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (4, 5), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

success: 49 / 96
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (8, 4), destination = (4, 2), deadline = 30
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0103092783505 , self.eps_freq:  97.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (1, 1), destination = (6, 6), deadline = 50
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (8, 6), destination = (3, 6), deadline = 25
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.010101010101 , self.eps_freq:  99.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (7, 2), destination = (4, 5), deadline = 30
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.01 , self.eps_freq:  100.0 

success: 52 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.98761
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.14167
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02703
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06250
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.11428
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02703
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02367
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07039
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.55386
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.08250
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.55833
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.25000
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.32621
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.45499
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04547
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.32792
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01111
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03226
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.64135
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.02697
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.11476
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01176
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.25000
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03333
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.43906
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.89283
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06189
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.53159
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05675
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.83932
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.80544
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06558
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.90576
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.98359
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10407
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03333
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02286
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06160
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05281
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04000
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10103
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.51016
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04000
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01493
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.87550
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 3.32347
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 1.57871
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.96594
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.51250
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.02258
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.24951
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.39314
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.49553
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.21849
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.69659
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.17283
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.50000
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.08886
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.84694
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.00097
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: -0.33333
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.55210
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.95905
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.14449
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.70625
--------------------------------------------------------------------------------
updated cells:  65 , self.total_cell_count: 2048 , updated_func_counter: 2171
self.alpha: 0.5 self.gamma: 0.1 , self.epsilon: 0.2 , success: 52
________________________________________________________________________________
Environment.reset(): Primary agent could not reach destination within deadline!
gma = 0.1
eps = 0.1
alp = 0.5
epsilon:  0.1
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (8, 2), destination = (2, 6), deadline = 50
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  None , deadline: 50
annealing now. self.epsilon: 0.5 , action:  right , deadline: 48
annealing now. self.epsilon: 0.5 , action:  right , deadline: 46
annealing now. self.epsilon: 0.5 , action:  left , deadline: 44
annealing now. self.epsilon: 0.5 , action:  right , deadline: 42
annealing now. self.epsilon: 0.5 , action:  left , deadline: 40
annealing now. self.epsilon: 0.5 , action:  left , deadline: 38
annealing now. self.epsilon: 0.5 , action:  left , deadline: 36
annealing now. self.epsilon: 0.5 , action:  left , deadline: 34
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 32
annealing now. self.epsilon: 0.5 , action:  right , deadline: 30
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 28
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 26
annealing now. self.epsilon: 0.5 , action:  left , deadline: 24
annealing now. self.epsilon: 0.5 , action:  left , deadline: 22
annealing now. self.epsilon: 0.5 , action:  None , deadline: 20
annealing now. self.epsilon: 0.5 , action:  right , deadline: 18
annealing now. self.epsilon: 0.5 , action:  left , deadline: 16
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 14
annealing now. self.epsilon: 0.5 , action:  right , deadline: 12
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 10
annealing now. self.epsilon: 0.5 , action:  left , deadline: 8
annealing now. self.epsilon: 0.5 , action:  right , deadline: 6
annealing now. self.epsilon: 0.5 , action:  None , deadline: 4
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (8, 2), destination = (6, 6), deadline = 30
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  forward , deadline: 28
annealing now. self.epsilon: 0.25 , action:  left , deadline: 24
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.25 , action:  right , deadline: 12
annealing now. self.epsilon: 0.25 , action:  None , deadline: 8
success: 0 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (4, 4), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 18
annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 12
success: 0 / 3
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (3, 1), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  left , deadline: 24
annealing now. self.epsilon: 0.125 , action:  left , deadline: 16
success: 0 / 4
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (3, 5), destination = (2, 1), deadline = 25
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  right , deadline: 20
success: 0 / 5
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (1, 6), destination = (7, 3), deadline = 45
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  left , deadline: 36
annealing now. self.epsilon: 0.0833333333333 , action:  left , deadline: 24
success: 0 / 6
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (1, 3), destination = (7, 3), deadline = 30
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0714285714286 , action:  None , deadline: 28
success: 0 / 7
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (5, 3), destination = (8, 5), deadline = 25
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

success: 0 / 8
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (5, 6), destination = (2, 2), deadline = 35
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

success: 0 / 9
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (3, 1), destination = (8, 4), deadline = 40
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.05 , self.eps_freq:  20.0 

annealing now. self.epsilon: 0.05 , action:  left , deadline: 40
success: 0 / 10
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (4, 6), destination = (5, 1), deadline = 30
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

success: 0 / 11
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (2, 4), destination = (8, 2), deadline = 40
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

success: 0 / 12
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (1, 1), destination = (6, 6), deadline = 50
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

success: 0 / 13
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (7, 1), destination = (5, 5), deadline = 30
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

success: 0 / 14
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (6, 5), destination = (3, 2), deadline = 30
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

success: 0 / 15
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (3, 5), destination = (6, 6), deadline = 20
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

success: 0 / 16
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (3, 2), destination = (7, 6), deadline = 40
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

success: 0 / 17
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (5, 5), destination = (2, 6), deadline = 20
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

success: 0 / 18
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (3, 5), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

success: 0 / 19
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (2, 2), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.025 , self.eps_freq:  40.0 

success: 0 / 20
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (4, 2), destination = (7, 1), deadline = 20
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

success: 0 / 21
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (3, 6), destination = (8, 1), deadline = 50
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

success: 0 / 22
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (1, 5), destination = (6, 3), deadline = 35
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

success: 0 / 23
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (8, 4), destination = (1, 6), deadline = 45
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

success: 0 / 24
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (8, 5), destination = (3, 2), deadline = 40
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.02 , self.eps_freq:  50.0 

success: 0 / 25
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (2, 6), destination = (8, 4), deadline = 40
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

success: 0 / 26
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (7, 1), destination = (1, 1), deadline = 30
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

success: 0 / 27
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (2, 1), destination = (3, 5), deadline = 25
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

success: 0 / 28
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (8, 2), destination = (2, 6), deadline = 50
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

success: 0 / 29
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (6, 3), destination = (1, 5), deadline = 35
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

success: 0 / 30
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 3), deadline = 40
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

success: 0 / 31
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (5, 4), destination = (8, 6), deadline = 25
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

success: 0 / 32
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (5, 2), destination = (7, 5), deadline = 25
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

success: 0 / 33
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (2, 6), destination = (3, 2), deadline = 25
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

success: 0 / 34
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (6, 1), destination = (3, 4), deadline = 30
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

success: 0 / 35
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (4, 1), destination = (7, 6), deadline = 40
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

success: 0 / 36
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (1, 4), destination = (8, 5), deadline = 40
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

success: 0 / 37
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (8, 5), destination = (7, 2), deadline = 20
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

success: 0 / 38
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (7, 1), destination = (3, 4), deadline = 35
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

success: 0 / 39
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (5, 4), destination = (1, 2), deadline = 30
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

success: 0 / 40
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (4, 5), destination = (2, 3), deadline = 20
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

success: 0 / 41
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (7, 2), destination = (7, 6), deadline = 20
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

success: 0 / 42
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (3, 1), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

success: 0 / 43
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (3, 1), destination = (7, 4), deadline = 35
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

success: 0 / 44
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (4, 5), destination = (2, 2), deadline = 25
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

success: 0 / 45
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (1, 1), destination = (3, 5), deadline = 30
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

success: 0 / 46
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (7, 4), destination = (3, 4), deadline = 20
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

success: 0 / 47
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (3, 3), destination = (7, 5), deadline = 30
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

success: 0 / 48
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (5, 5), destination = (2, 4), deadline = 20
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

success: 0 / 49
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (5, 6), destination = (1, 1), deadline = 45
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.01 , self.eps_freq:  100.0 

success: 0 / 50
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (2, 1), destination = (4, 6), deadline = 35
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.00980392156863 , self.eps_freq:  102.0 

success: 0 / 51
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (8, 5), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.00961538461538 , self.eps_freq:  104.0 

success: 0 / 52
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (5, 1), destination = (8, 4), deadline = 30
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.00943396226415 , self.eps_freq:  106.0 

success: 0 / 53
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (8, 1), destination = (3, 6), deadline = 50
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.00925925925926 , self.eps_freq:  108.0 

success: 0 / 54
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (6, 5), destination = (1, 1), deadline = 45
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.00909090909091 , self.eps_freq:  110.0 

success: 0 / 55
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (5, 2), destination = (8, 4), deadline = 25
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.00892857142857 , self.eps_freq:  112.0 

success: 0 / 56
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (5, 4), destination = (2, 5), deadline = 20
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.00877192982456 , self.eps_freq:  114.0 

success: 0 / 57
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (6, 3), destination = (2, 2), deadline = 25
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.00862068965517 , self.eps_freq:  116.0 

success: 0 / 58
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (5, 3), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.00847457627119 , self.eps_freq:  118.0 

success: 0 / 59
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (2, 1), destination = (6, 1), deadline = 20
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.00833333333333 , self.eps_freq:  120.0 

success: 0 / 60
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (4, 6), destination = (8, 4), deadline = 30
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.00819672131148 , self.eps_freq:  122.0 

success: 0 / 61
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (4, 6), destination = (3, 1), deadline = 30
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.00806451612903 , self.eps_freq:  124.0 

Environment.act(): Primary agent has reached destination!
success: 1 / 62
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (6, 1), destination = (3, 4), deadline = 30
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.00793650793651 , self.eps_freq:  126.0 

success: 1 / 63
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (8, 5), destination = (8, 1), deadline = 20
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0078125 , self.eps_freq:  128.0 

success: 1 / 64
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (4, 4), destination = (3, 1), deadline = 20
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.00769230769231 , self.eps_freq:  130.0 

success: 1 / 65
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (7, 5), destination = (1, 2), deadline = 45
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.00757575757576 , self.eps_freq:  132.0 

success: 1 / 66
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (1, 6), destination = (5, 5), deadline = 25
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.00746268656716 , self.eps_freq:  134.0 

success: 1 / 67
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (5, 1), destination = (2, 5), deadline = 35
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.00735294117647 , self.eps_freq:  136.0 

success: 1 / 68
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (2, 2), destination = (5, 5), deadline = 30
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.00724637681159 , self.eps_freq:  138.0 

success: 1 / 69
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (4, 1), destination = (6, 4), deadline = 25
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.00714285714286 , self.eps_freq:  140.0 

success: 1 / 70
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (4, 6), destination = (1, 5), deadline = 20
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.00704225352113 , self.eps_freq:  142.0 

success: 1 / 71
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (1, 1), destination = (2, 6), deadline = 30
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.00694444444444 , self.eps_freq:  144.0 

Environment.act(): Primary agent has reached destination!
success: 2 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (6, 6), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.00684931506849 , self.eps_freq:  146.0 

success: 2 / 73
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (6, 5), destination = (1, 2), deadline = 40
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.00675675675676 , self.eps_freq:  148.0 

success: 2 / 74
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (3, 4), destination = (1, 1), deadline = 25
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.00666666666667 , self.eps_freq:  150.0 

success: 2 / 75
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (8, 4), destination = (4, 3), deadline = 25
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.00657894736842 , self.eps_freq:  152.0 

success: 2 / 76
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (2, 5), destination = (6, 1), deadline = 40
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.00649350649351 , self.eps_freq:  154.0 

success: 2 / 77
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (1, 2), destination = (5, 2), deadline = 20
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.00641025641026 , self.eps_freq:  156.0 

success: 2 / 78
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (8, 3), destination = (2, 6), deadline = 45
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.00632911392405 , self.eps_freq:  158.0 

success: 2 / 79
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (6, 2), destination = (8, 4), deadline = 20
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.00625 , self.eps_freq:  160.0 

success: 2 / 80
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (1, 6), destination = (8, 4), deadline = 45
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.00617283950617 , self.eps_freq:  162.0 

success: 2 / 81
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (8, 6), destination = (2, 2), deadline = 50
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.00609756097561 , self.eps_freq:  164.0 

success: 2 / 82
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (1, 2), destination = (5, 3), deadline = 25
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.00602409638554 , self.eps_freq:  166.0 

success: 2 / 83
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (7, 4), destination = (1, 2), deadline = 40
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.00595238095238 , self.eps_freq:  168.0 

success: 2 / 84
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (3, 2), destination = (8, 3), deadline = 30
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.00588235294118 , self.eps_freq:  170.0 

success: 2 / 85
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (3, 5), destination = (3, 1), deadline = 20
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.00581395348837 , self.eps_freq:  172.0 

success: 2 / 86
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (7, 3), destination = (1, 4), deadline = 35
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.00574712643678 , self.eps_freq:  174.0 

success: 2 / 87
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (8, 5), destination = (1, 5), deadline = 35
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.00568181818182 , self.eps_freq:  176.0 

success: 2 / 88
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (3, 2), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.00561797752809 , self.eps_freq:  178.0 

success: 2 / 89
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (7, 4), destination = (2, 6), deadline = 35
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.00555555555556 , self.eps_freq:  180.0 

success: 2 / 90
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (7, 2), destination = (5, 6), deadline = 30
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.00549450549451 , self.eps_freq:  182.0 

success: 2 / 91
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (1, 3), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0054347826087 , self.eps_freq:  184.0 

success: 2 / 92
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (6, 2), destination = (8, 4), deadline = 20
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.00537634408602 , self.eps_freq:  186.0 

success: 2 / 93
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (4, 3), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.00531914893617 , self.eps_freq:  188.0 

success: 2 / 94
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (6, 6), destination = (8, 4), deadline = 20
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.00526315789474 , self.eps_freq:  190.0 

success: 2 / 95
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (1, 4), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.00520833333333 , self.eps_freq:  192.0 

success: 2 / 96
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (2, 2), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.00515463917526 , self.eps_freq:  194.0 

success: 2 / 97
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (4, 4), destination = (7, 1), deadline = 30
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.00510204081633 , self.eps_freq:  197.0 

success: 2 / 98
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (1, 4), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.00505050505051 , self.eps_freq:  198.0 

success: 2 / 99
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (6, 5), destination = (7, 1), deadline = 25
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.005 , self.eps_freq:  200.0 

success: 2 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.98619
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06679
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02415
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.17865
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.00251
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.15004
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01064
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.53277
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.14294
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.95778
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02000
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.07921
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.34169
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.11687
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.88011
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07960
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10462
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.22615
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.13788
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.21593
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12737
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.97073
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07769
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.05384
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.00030
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.03877
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12498
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01031
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.98942
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.20936
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01370
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01000
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04352
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05841
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.04513
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07093
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01000
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.00000
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03948
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05558
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01515
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.21201
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.02055
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.99300
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.57599
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.00000
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.27949
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50756
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.52730
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.16444
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.16429
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 2.00000
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.58913
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.02561
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.56870
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.92340
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.52563
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.00162
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.76030
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 2.05327
--------------------------------------------------------------------------------
updated cells:  60 , self.total_cell_count: 2048 , updated_func_counter: 3061
self.alpha: 0.5 self.gamma: 0.1 , self.epsilon: 0.1 , success: 2
________________________________________________________________________________
Environment.reset(): Primary agent could not reach destination within deadline!
gma = 0.005
eps = 0.5
alp = 0.3
epsilon:  0.5
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (8, 6), destination = (2, 1), deadline = 55
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 2.5 , self.eps_freq:  1.0 

annealing now. self.epsilon: 2.5 , action:  left , deadline: 55
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 54
annealing now. self.epsilon: 2.5 , action:  left , deadline: 53
annealing now. self.epsilon: 2.5 , action:  left , deadline: 52
annealing now. self.epsilon: 2.5 , action:  left , deadline: 51
annealing now. self.epsilon: 2.5 , action:  right , deadline: 50
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 49
annealing now. self.epsilon: 2.5 , action:  None , deadline: 48
annealing now. self.epsilon: 2.5 , action:  None , deadline: 47
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 46
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 45
annealing now. self.epsilon: 2.5 , action:  right , deadline: 44
annealing now. self.epsilon: 2.5 , action:  right , deadline: 43
annealing now. self.epsilon: 2.5 , action:  left , deadline: 42
annealing now. self.epsilon: 2.5 , action:  right , deadline: 41
annealing now. self.epsilon: 2.5 , action:  left , deadline: 40
annealing now. self.epsilon: 2.5 , action:  right , deadline: 39
annealing now. self.epsilon: 2.5 , action:  left , deadline: 38
annealing now. self.epsilon: 2.5 , action:  left , deadline: 37
annealing now. self.epsilon: 2.5 , action:  left , deadline: 36
annealing now. self.epsilon: 2.5 , action:  right , deadline: 35
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 34
annealing now. self.epsilon: 2.5 , action:  None , deadline: 33
annealing now. self.epsilon: 2.5 , action:  left , deadline: 32
annealing now. self.epsilon: 2.5 , action:  left , deadline: 31
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 30
annealing now. self.epsilon: 2.5 , action:  None , deadline: 29
annealing now. self.epsilon: 2.5 , action:  left , deadline: 28
annealing now. self.epsilon: 2.5 , action:  left , deadline: 27
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 26
annealing now. self.epsilon: 2.5 , action:  left , deadline: 25
annealing now. self.epsilon: 2.5 , action:  None , deadline: 24
annealing now. self.epsilon: 2.5 , action:  left , deadline: 23
annealing now. self.epsilon: 2.5 , action:  None , deadline: 22
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 21
annealing now. self.epsilon: 2.5 , action:  left , deadline: 20
annealing now. self.epsilon: 2.5 , action:  None , deadline: 19
annealing now. self.epsilon: 2.5 , action:  None , deadline: 18
annealing now. self.epsilon: 2.5 , action:  None , deadline: 17
annealing now. self.epsilon: 2.5 , action:  None , deadline: 16
annealing now. self.epsilon: 2.5 , action:  right , deadline: 15
annealing now. self.epsilon: 2.5 , action:  left , deadline: 14
annealing now. self.epsilon: 2.5 , action:  left , deadline: 13
annealing now. self.epsilon: 2.5 , action:  left , deadline: 12
annealing now. self.epsilon: 2.5 , action:  right , deadline: 11
annealing now. self.epsilon: 2.5 , action:  None , deadline: 10
annealing now. self.epsilon: 2.5 , action:  None , deadline: 9
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 8
annealing now. self.epsilon: 2.5 , action:  left , deadline: 7
annealing now. self.epsilon: 2.5 , action:  right , deadline: 6
annealing now. self.epsilon: 2.5 , action:  right , deadline: 5
annealing now. self.epsilon: 2.5 , action:  left , deadline: 4
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 3
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 2
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (5, 6), destination = (3, 3), deadline = 25
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 1.25 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.25 , action:  forward , deadline: 25
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 24
annealing now. self.epsilon: 1.25 , action:  right , deadline: 23
annealing now. self.epsilon: 1.25 , action:  left , deadline: 22
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 21
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 20
annealing now. self.epsilon: 1.25 , action:  None , deadline: 19
annealing now. self.epsilon: 1.25 , action:  left , deadline: 18
annealing now. self.epsilon: 1.25 , action:  right , deadline: 17
Environment.act(): Primary agent has reached destination!
success: 1 / 2
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (3, 6), destination = (7, 2), deadline = 40
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.833333333333 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 40
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 38
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 36
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 34
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 32
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 30
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 28
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 26
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 2 / 3
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (6, 2), destination = (2, 3), deadline = 25
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.625 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.625 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.625 , action:  right , deadline: 22
annealing now. self.epsilon: 0.625 , action:  left , deadline: 20
annealing now. self.epsilon: 0.625 , action:  left , deadline: 18
annealing now. self.epsilon: 0.625 , action:  left , deadline: 16
annealing now. self.epsilon: 0.625 , action:  left , deadline: 14
annealing now. self.epsilon: 0.625 , action:  right , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 3 / 4
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (5, 6), destination = (1, 6), deadline = 20
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  None , deadline: 20
annealing now. self.epsilon: 0.5 , action:  left , deadline: 18
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 14
annealing now. self.epsilon: 0.5 , action:  None , deadline: 12
annealing now. self.epsilon: 0.5 , action:  right , deadline: 10
annealing now. self.epsilon: 0.5 , action:  None , deadline: 8
annealing now. self.epsilon: 0.5 , action:  left , deadline: 6
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 4
success: 3 / 5
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (6, 1), destination = (4, 6), deadline = 35
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.416666666667 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.416666666667 , action:  forward , deadline: 33
annealing now. self.epsilon: 0.416666666667 , action:  left , deadline: 30
annealing now. self.epsilon: 0.416666666667 , action:  right , deadline: 27
annealing now. self.epsilon: 0.416666666667 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.416666666667 , action:  right , deadline: 21
annealing now. self.epsilon: 0.416666666667 , action:  right , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 4 / 6
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (3, 3), destination = (1, 6), deadline = 25
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.357142857143 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 24
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 21
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 18
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 15
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 12
annealing now. self.epsilon: 0.357142857143 , action:  forward , deadline: 9
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 6
success: 4 / 7
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (8, 4), destination = (3, 3), deadline = 30
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.3125 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.3125 , action:  right , deadline: 28
annealing now. self.epsilon: 0.3125 , action:  None , deadline: 24
annealing now. self.epsilon: 0.3125 , action:  right , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 5 / 8
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (5, 4), destination = (2, 6), deadline = 25
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.277777777778 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.277777777778 , action:  None , deadline: 24
annealing now. self.epsilon: 0.277777777778 , action:  right , deadline: 20
annealing now. self.epsilon: 0.277777777778 , action:  None , deadline: 16
annealing now. self.epsilon: 0.277777777778 , action:  right , deadline: 12
annealing now. self.epsilon: 0.277777777778 , action:  None , deadline: 8
success: 5 / 9
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (2, 2), destination = (2, 6), deadline = 20
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  None , deadline: 20
annealing now. self.epsilon: 0.25 , action:  left , deadline: 16
annealing now. self.epsilon: 0.25 , action:  right , deadline: 12
annealing now. self.epsilon: 0.25 , action:  None , deadline: 8
success: 5 / 10
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (8, 4), destination = (3, 4), deadline = 25
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.227272727273 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.227272727273 , action:  right , deadline: 25
annealing now. self.epsilon: 0.227272727273 , action:  None , deadline: 20
annealing now. self.epsilon: 0.227272727273 , action:  forward , deadline: 15
Environment.act(): Primary agent has reached destination!
success: 6 / 11
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (1, 1), destination = (8, 5), deadline = 55
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.208333333333 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.208333333333 , action:  forward , deadline: 55
annealing now. self.epsilon: 0.208333333333 , action:  forward , deadline: 50
annealing now. self.epsilon: 0.208333333333 , action:  None , deadline: 45
annealing now. self.epsilon: 0.208333333333 , action:  left , deadline: 40
annealing now. self.epsilon: 0.208333333333 , action:  left , deadline: 35
annealing now. self.epsilon: 0.208333333333 , action:  left , deadline: 30
annealing now. self.epsilon: 0.208333333333 , action:  right , deadline: 25
annealing now. self.epsilon: 0.208333333333 , action:  right , deadline: 20
annealing now. self.epsilon: 0.208333333333 , action:  forward , deadline: 15
annealing now. self.epsilon: 0.208333333333 , action:  right , deadline: 10
Environment.act(): Primary agent has reached destination!
success: 7 / 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (7, 6), destination = (5, 1), deadline = 35
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.192307692308 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.192307692308 , action:  right , deadline: 30
annealing now. self.epsilon: 0.192307692308 , action:  None , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 8 / 13
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (3, 4), destination = (6, 5), deadline = 20
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.178571428571 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.178571428571 , action:  right , deadline: 18
annealing now. self.epsilon: 0.178571428571 , action:  None , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 9 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (1, 1), destination = (3, 4), deadline = 25
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 24
annealing now. self.epsilon: 0.166666666667 , action:  forward , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 10 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (7, 4), destination = (8, 1), deadline = 20
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.15625 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.15625 , action:  left , deadline: 14
Environment.act(): Primary agent has reached destination!
success: 11 / 16
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (7, 6), destination = (3, 6), deadline = 20
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.147058823529 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.147058823529 , action:  forward , deadline: 14
success: 11 / 17
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (6, 1), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.138888888889 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.138888888889 , action:  left , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 12 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (2, 3), destination = (6, 5), deadline = 30
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.131578947368 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.131578947368 , action:  left , deadline: 24
annealing now. self.epsilon: 0.131578947368 , action:  right , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 13 / 19
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (4, 1), destination = (8, 1), deadline = 20
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  left , deadline: 16
success: 13 / 20
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (2, 6), destination = (8, 4), deadline = 40
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.119047619048 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.119047619048 , action:  right , deadline: 36
annealing now. self.epsilon: 0.119047619048 , action:  right , deadline: 27
Environment.act(): Primary agent has reached destination!
success: 14 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (8, 6), destination = (2, 3), deadline = 45
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.113636363636 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.113636363636 , action:  forward , deadline: 45
annealing now. self.epsilon: 0.113636363636 , action:  left , deadline: 36
annealing now. self.epsilon: 0.113636363636 , action:  right , deadline: 27
Environment.act(): Primary agent has reached destination!
success: 15 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (2, 1), destination = (6, 6), deadline = 45
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.108695652174 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.108695652174 , action:  None , deadline: 40
Environment.act(): Primary agent has reached destination!
success: 16 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (1, 6), destination = (7, 2), deadline = 50
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.104166666667 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.104166666667 , action:  right , deadline: 50
Environment.act(): Primary agent has reached destination!
success: 17 / 24
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (4, 6), destination = (1, 5), deadline = 20
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  left , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 18 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (5, 2), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0961538461538 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0961538461538 , action:  forward , deadline: 22
Environment.act(): Primary agent has reached destination!
success: 19 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (5, 4), destination = (2, 5), deadline = 20
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0925925925926 , self.eps_freq:  11.0 

Environment.act(): Primary agent has reached destination!
success: 20 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (1, 3), destination = (6, 1), deadline = 35
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0892857142857 , self.eps_freq:  12.0 

Environment.act(): Primary agent has reached destination!
success: 21 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (5, 3), destination = (1, 3), deadline = 20
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0862068965517 , self.eps_freq:  12.0 

Environment.act(): Primary agent has reached destination!
success: 22 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (1, 3), destination = (7, 5), deadline = 40
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  right , deadline: 36
Environment.act(): Primary agent has reached destination!
success: 23 / 30
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (2, 1), destination = (3, 4), deadline = 20
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0806451612903 , self.eps_freq:  13.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (8, 6), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.078125 , self.eps_freq:  13.0 

success: 24 / 32
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (7, 1), destination = (1, 3), deadline = 40
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0757575757576 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0757575757576 , action:  forward , deadline: 28
Environment.act(): Primary agent has reached destination!
success: 25 / 33
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (1, 2), destination = (1, 6), deadline = 20
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0735294117647 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 34
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (7, 4), destination = (8, 1), deadline = 20
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 35
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (1, 4), destination = (6, 4), deadline = 25
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0694444444444 , self.eps_freq:  15.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 36
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (4, 1), destination = (8, 5), deadline = 40
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0675675675676 , self.eps_freq:  15.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 37
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (1, 5), destination = (6, 6), deadline = 30
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0657894736842 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (8, 1), destination = (4, 5), deadline = 40
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0641025641026 , self.eps_freq:  16.0 

annealing now. self.epsilon: 0.0641025641026 , action:  None , deadline: 32
Environment.act(): Primary agent has reached destination!
success: 31 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (5, 4), destination = (8, 5), deadline = 20
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 40
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (8, 5), destination = (5, 3), deadline = 25
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0609756097561 , self.eps_freq:  17.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 41
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (6, 2), destination = (2, 5), deadline = 35
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0595238095238 , self.eps_freq:  17.0 

annealing now. self.epsilon: 0.0595238095238 , action:  forward , deadline: 34
Environment.act(): Primary agent has reached destination!
success: 34 / 42
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (3, 5), destination = (3, 1), deadline = 20
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0581395348837 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 35 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (3, 5), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0568181818182 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 44
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (3, 5), destination = (5, 1), deadline = 30
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (1, 3), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.054347826087 , self.eps_freq:  19.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 46
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (2, 3), destination = (3, 6), deadline = 20
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0531914893617 , self.eps_freq:  19.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 47
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (8, 3), destination = (4, 4), deadline = 25
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0520833333333 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (8, 6), destination = (4, 3), deadline = 35
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0510204081633 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (5, 4), destination = (3, 1), deadline = 25
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.05 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (3, 1), destination = (5, 4), deadline = 25
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0490196078431 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (3, 5), destination = (7, 1), deadline = 40
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0480769230769 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 52
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (1, 4), destination = (8, 2), deadline = 45
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0471698113208 , self.eps_freq:  22.0 

annealing now. self.epsilon: 0.0471698113208 , action:  right , deadline: 44
Environment.act(): Primary agent has reached destination!
success: 45 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (3, 5), destination = (8, 3), deadline = 35
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0462962962963 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (7, 6), destination = (3, 1), deadline = 45
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

annealing now. self.epsilon: 0.0454545454545 , action:  forward , deadline: 44
Environment.act(): Primary agent has reached destination!
success: 47 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (8, 5), destination = (2, 3), deadline = 40
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0446428571429 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (5, 1), destination = (8, 3), deadline = 25
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0438596491228 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 57
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (5, 3), destination = (7, 5), deadline = 20
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0431034482759 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 58
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (8, 3), destination = (4, 1), deadline = 30
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0423728813559 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (1, 6), destination = (3, 2), deadline = 30
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (8, 4), destination = (6, 1), deadline = 25
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0409836065574 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 53 / 61
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (1, 1), destination = (5, 2), deadline = 25
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0403225806452 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 54 / 62
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (2, 6), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0396825396825 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 55 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (5, 4), destination = (1, 3), deadline = 25
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0390625 , self.eps_freq:  26.0 

success: 55 / 64
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (5, 5), destination = (3, 3), deadline = 20
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (3, 5), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0378787878788 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 57 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (6, 1), destination = (3, 3), deadline = 25
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0373134328358 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 58 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (5, 1), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0367647058824 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 59 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (1, 6), destination = (7, 5), deadline = 35
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.036231884058 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 60 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (8, 3), destination = (3, 4), deadline = 30
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 61 / 70
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (8, 2), destination = (8, 6), deadline = 20
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0352112676056 , self.eps_freq:  29.0 

success: 61 / 71
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (1, 1), destination = (7, 4), deadline = 45
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0347222222222 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 62 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (5, 5), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0342465753425 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 63 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (4, 3), destination = (1, 2), deadline = 20
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0337837837838 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 64 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (7, 6), destination = (8, 3), deadline = 20
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 65 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (7, 1), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0328947368421 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 66 / 76
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (8, 2), destination = (5, 4), deadline = 25
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0324675324675 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 67 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (2, 1), destination = (7, 3), deadline = 35
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0320512820513 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 68 / 78
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (6, 2), destination = (5, 6), deadline = 25
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0316455696203 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 69 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (4, 6), destination = (5, 2), deadline = 25
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 70 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (7, 6), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0308641975309 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 71 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (5, 1), destination = (7, 4), deadline = 25
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.030487804878 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 72 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (8, 4), destination = (6, 6), deadline = 20
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0301204819277 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 73 / 83
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (8, 2), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0297619047619 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 74 / 84
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (2, 5), destination = (7, 6), deadline = 30
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 75 / 85
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (7, 3), destination = (1, 5), deadline = 40
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0290697674419 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 76 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (7, 6), destination = (8, 2), deadline = 25
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0287356321839 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 77 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (4, 1), destination = (5, 6), deadline = 30
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0284090909091 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 78 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (7, 6), destination = (3, 3), deadline = 35
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0280898876404 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 79 / 89
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (5, 4), destination = (3, 1), deadline = 25
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 80 / 90
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (1, 6), destination = (2, 3), deadline = 20
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0274725274725 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 81 / 91
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (5, 1), destination = (2, 5), deadline = 35
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0271739130435 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 82 / 92
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (7, 4), destination = (3, 3), deadline = 25
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0268817204301 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 83 / 93
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (7, 3), destination = (3, 6), deadline = 35
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0265957446809 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 84 / 94
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (3, 3), destination = (8, 4), deadline = 30
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 85 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (8, 1), destination = (4, 5), deadline = 40
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0260416666667 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 86 / 96
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (3, 2), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0257731958763 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 87 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (6, 4), destination = (3, 2), deadline = 25
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0255102040816 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 88 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (4, 1), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0252525252525 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 89 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (5, 5), destination = (1, 4), deadline = 25
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 90 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99938
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.11724
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04545
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01997
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04825
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05211
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.11774
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01205
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00346
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.50563
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01064
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.15256
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.14680
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.54588
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08333
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99750
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01818
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.29398
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09017
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.33625
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09750
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02000
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.47747
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10439
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99937
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.21778
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.30852
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.36005
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.00000
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01020
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07692
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.00038
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: -0.50000
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 4.06071
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.00063
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.50107
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.00063
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.50300
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50213
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.26005
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50170
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.50097
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.58298
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 3.00000
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.55904
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50000
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.03580
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50111
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.00031
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: -1.00000
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.50184
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.25063
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.14221
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.00126
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.50233
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.49940
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.00063
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: -1.00000
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 3.19544
--------------------------------------------------------------------------------
updated cells:  59 , self.total_cell_count: 2048 , updated_func_counter: 1509
self.alpha: 0.3 self.gamma: 0.005 , self.epsilon: 0.5 , success: 90
________________________________________________________________________________
gma = 0.005
eps = 0.2
alp = 0.3
epsilon:  0.2
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (4, 1), destination = (2, 3), deadline = 20
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 1.0 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.0 , action:  None , deadline: 20
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 19
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 18
annealing now. self.epsilon: 1.0 , action:  left , deadline: 17
annealing now. self.epsilon: 1.0 , action:  left , deadline: 16
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 15
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 14
annealing now. self.epsilon: 1.0 , action:  left , deadline: 13
annealing now. self.epsilon: 1.0 , action:  None , deadline: 12
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 11
annealing now. self.epsilon: 1.0 , action:  None , deadline: 10
annealing now. self.epsilon: 1.0 , action:  None , deadline: 9
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 8
annealing now. self.epsilon: 1.0 , action:  left , deadline: 7
annealing now. self.epsilon: 1.0 , action:  right , deadline: 6
annealing now. self.epsilon: 1.0 , action:  right , deadline: 5
annealing now. self.epsilon: 1.0 , action:  right , deadline: 4
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 3
annealing now. self.epsilon: 1.0 , action:  None , deadline: 2
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (8, 1), destination = (4, 5), deadline = 40
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  right , deadline: 40
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 38
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 36
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 34
annealing now. self.epsilon: 0.5 , action:  None , deadline: 32
annealing now. self.epsilon: 0.5 , action:  None , deadline: 30
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 28
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 26
annealing now. self.epsilon: 0.5 , action:  None , deadline: 24
annealing now. self.epsilon: 0.5 , action:  left , deadline: 22
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.5 , action:  None , deadline: 18
annealing now. self.epsilon: 0.5 , action:  left , deadline: 16
annealing now. self.epsilon: 0.5 , action:  left , deadline: 14
Environment.act(): Primary agent has reached destination!
success: 1 / 2
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (2, 2), destination = (7, 4), deadline = 35
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.333333333333 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.333333333333 , action:  None , deadline: 33
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 30
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 27
annealing now. self.epsilon: 0.333333333333 , action:  None , deadline: 24
annealing now. self.epsilon: 0.333333333333 , action:  forward , deadline: 21
annealing now. self.epsilon: 0.333333333333 , action:  forward , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 2 / 3
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (2, 3), destination = (8, 2), deadline = 35
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  forward , deadline: 32
annealing now. self.epsilon: 0.25 , action:  None , deadline: 28
annealing now. self.epsilon: 0.25 , action:  None , deadline: 24
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.25 , action:  None , deadline: 12
annealing now. self.epsilon: 0.25 , action:  right , deadline: 8
success: 2 / 4
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (2, 5), destination = (6, 1), deadline = 40
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.2 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.2 , action:  forward , deadline: 40
annealing now. self.epsilon: 0.2 , action:  right , deadline: 35
annealing now. self.epsilon: 0.2 , action:  right , deadline: 30
annealing now. self.epsilon: 0.2 , action:  right , deadline: 25
annealing now. self.epsilon: 0.2 , action:  right , deadline: 20
annealing now. self.epsilon: 0.2 , action:  right , deadline: 15
annealing now. self.epsilon: 0.2 , action:  forward , deadline: 10
Environment.act(): Primary agent has reached destination!
success: 3 / 5
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (2, 5), destination = (1, 1), deadline = 25
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  left , deadline: 24
annealing now. self.epsilon: 0.166666666667 , action:  left , deadline: 18
annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 12
success: 3 / 6
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (4, 1), destination = (5, 5), deadline = 25
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.142857142857 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.142857142857 , action:  forward , deadline: 21
annealing now. self.epsilon: 0.142857142857 , action:  right , deadline: 14
Environment.act(): Primary agent has reached destination!
success: 4 / 7
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (8, 3), destination = (1, 5), deadline = 45
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  left , deadline: 40
annealing now. self.epsilon: 0.125 , action:  forward , deadline: 32
annealing now. self.epsilon: 0.125 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.125 , action:  left , deadline: 16
success: 4 / 8
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (8, 3), destination = (2, 2), deadline = 35
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.111111111111 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.111111111111 , action:  right , deadline: 27
annealing now. self.epsilon: 0.111111111111 , action:  right , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 5 / 9
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (3, 3), destination = (1, 1), deadline = 20
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  left , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 6 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (6, 5), destination = (4, 2), deadline = 25
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0909090909091 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0909090909091 , action:  None , deadline: 22
success: 6 / 11
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (5, 1), destination = (1, 1), deadline = 20
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

Environment.act(): Primary agent has reached destination!
success: 7 / 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (4, 2), destination = (7, 5), deadline = 30
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0769230769231 , self.eps_freq:  13.0 

annealing now. self.epsilon: 0.0769230769231 , action:  right , deadline: 26
success: 7 / 13
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (8, 2), destination = (4, 5), deadline = 35
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0714285714286 , action:  forward , deadline: 28
Environment.act(): Primary agent has reached destination!
success: 8 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (6, 6), destination = (1, 3), deadline = 40
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0666666666667 , self.eps_freq:  15.0 

annealing now. self.epsilon: 0.0666666666667 , action:  forward , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 9 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (1, 3), destination = (5, 5), deadline = 30
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 10 / 16
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (5, 2), destination = (7, 6), deadline = 30
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0588235294118 , self.eps_freq:  17.0 

Environment.act(): Primary agent has reached destination!
success: 11 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (8, 2), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

success: 11 / 18
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (7, 3), destination = (1, 1), deadline = 40
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0526315789474 , self.eps_freq:  19.0 

annealing now. self.epsilon: 0.0526315789474 , action:  left , deadline: 38
Environment.act(): Primary agent has reached destination!
success: 12 / 19
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (6, 5), destination = (1, 2), deadline = 40
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.05 , self.eps_freq:  20.0 

annealing now. self.epsilon: 0.05 , action:  None , deadline: 40
Environment.act(): Primary agent has reached destination!
success: 13 / 20
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (8, 5), destination = (2, 4), deadline = 35
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.047619047619 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 14 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (4, 5), destination = (5, 2), deadline = 20
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 15 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (7, 5), destination = (3, 6), deadline = 25
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0434782608696 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 16 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (1, 6), destination = (2, 3), deadline = 20
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 17 / 24
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (8, 2), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.04 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 18 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (5, 4), destination = (2, 2), deadline = 25
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 19 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (5, 2), destination = (2, 6), deadline = 35
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.037037037037 , self.eps_freq:  27.0 

success: 19 / 27
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (1, 2), destination = (7, 3), deadline = 35
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 20 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (8, 2), destination = (1, 6), deadline = 55
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0344827586207 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 21 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (5, 2), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 22 / 30
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (2, 6), destination = (7, 2), deadline = 45
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0322580645161 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 23 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (8, 5), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (1, 5), destination = (7, 2), deadline = 45
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.030303030303 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 33
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (3, 3), destination = (8, 6), deadline = 40
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

success: 25 / 34
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (5, 3), destination = (3, 1), deadline = 20
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0285714285714 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 35
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (4, 2), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 36
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (3, 1), destination = (1, 3), deadline = 20
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.027027027027 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 37
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (3, 2), destination = (1, 6), deadline = 30
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (1, 4), destination = (4, 1), deadline = 30
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.025641025641 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (3, 5), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 40
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (8, 3), destination = (1, 2), deadline = 40
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0243902439024 , self.eps_freq:  41.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 41
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (6, 1), destination = (4, 4), deadline = 25
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 42
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (8, 2), destination = (3, 2), deadline = 25
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0232558139535 , self.eps_freq:  43.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (3, 6), destination = (8, 4), deadline = 35
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

Environment.act(): Primary agent has reached destination!
success: 35 / 44
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (8, 1), destination = (7, 4), deadline = 20
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0222222222222 , self.eps_freq:  45.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (8, 5), destination = (1, 6), deadline = 40
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 46
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (6, 4), destination = (3, 6), deadline = 25
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0212765957447 , self.eps_freq:  47.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 47
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (1, 3), destination = (5, 4), deadline = 25
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (7, 1), destination = (7, 5), deadline = 20
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0204081632653 , self.eps_freq:  50.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (1, 6), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.02 , self.eps_freq:  50.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (7, 6), destination = (1, 1), deadline = 55
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0196078431373 , self.eps_freq:  51.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (2, 6), destination = (7, 1), deadline = 50
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 52
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (1, 4), destination = (8, 2), deadline = 45
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0188679245283 , self.eps_freq:  53.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (7, 6), destination = (3, 4), deadline = 30
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (5, 2), destination = (8, 6), deadline = 35
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0181818181818 , self.eps_freq:  55.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (7, 2), destination = (3, 4), deadline = 30
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

Environment.act(): Primary agent has reached destination!
success: 47 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (1, 3), destination = (6, 4), deadline = 30
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0175438596491 , self.eps_freq:  57.0 

success: 47 / 57
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (6, 5), destination = (3, 3), deadline = 25
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 58
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (2, 1), destination = (6, 4), deadline = 35
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0169491525424 , self.eps_freq:  59.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (7, 5), destination = (8, 1), deadline = 25
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (3, 4), destination = (1, 2), deadline = 20
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.016393442623 , self.eps_freq:  61.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 61
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (7, 2), destination = (4, 4), deadline = 25
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 62
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (4, 1), destination = (7, 2), deadline = 20
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.015873015873 , self.eps_freq:  63.0 

Environment.act(): Primary agent has reached destination!
success: 53 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (8, 2), destination = (1, 6), deadline = 55
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

Environment.act(): Primary agent has reached destination!
success: 54 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (2, 1), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0153846153846 , self.eps_freq:  65.0 

Environment.act(): Primary agent has reached destination!
success: 55 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (4, 3), destination = (8, 1), deadline = 30
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (2, 1), destination = (6, 6), deadline = 45
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0149253731343 , self.eps_freq:  67.0 

Environment.act(): Primary agent has reached destination!
success: 57 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (1, 5), destination = (6, 1), deadline = 45
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

Environment.act(): Primary agent has reached destination!
success: 58 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (6, 6), destination = (4, 1), deadline = 35
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0144927536232 , self.eps_freq:  69.0 

Environment.act(): Primary agent has reached destination!
success: 59 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (8, 1), destination = (1, 6), deadline = 60
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

Environment.act(): Primary agent has reached destination!
success: 60 / 70
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (6, 1), destination = (7, 6), deadline = 30
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0140845070423 , self.eps_freq:  71.0 

Environment.act(): Primary agent has reached destination!
success: 61 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (6, 6), destination = (8, 2), deadline = 30
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

Environment.act(): Primary agent has reached destination!
success: 62 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (2, 1), destination = (4, 6), deadline = 35
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.013698630137 , self.eps_freq:  73.0 

Environment.act(): Primary agent has reached destination!
success: 63 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (6, 3), destination = (3, 2), deadline = 20
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

Environment.act(): Primary agent has reached destination!
success: 64 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (7, 6), destination = (4, 3), deadline = 30
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0133333333333 , self.eps_freq:  75.0 

Environment.act(): Primary agent has reached destination!
success: 65 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (3, 5), destination = (7, 1), deadline = 40
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

Environment.act(): Primary agent has reached destination!
success: 66 / 76
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (7, 6), destination = (4, 3), deadline = 30
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.012987012987 , self.eps_freq:  77.0 

Environment.act(): Primary agent has reached destination!
success: 67 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (2, 6), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

Environment.act(): Primary agent has reached destination!
success: 68 / 78
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (1, 3), destination = (4, 6), deadline = 30
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0126582278481 , self.eps_freq:  79.0 

Environment.act(): Primary agent has reached destination!
success: 69 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (1, 5), destination = (8, 3), deadline = 45
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

Environment.act(): Primary agent has reached destination!
success: 70 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (5, 6), destination = (7, 3), deadline = 25
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0123456790123 , self.eps_freq:  81.0 

Environment.act(): Primary agent has reached destination!
success: 71 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (3, 4), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

Environment.act(): Primary agent has reached destination!
success: 72 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (1, 2), destination = (7, 4), deadline = 40
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0120481927711 , self.eps_freq:  83.0 

Environment.act(): Primary agent has reached destination!
success: 73 / 83
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (3, 6), destination = (4, 2), deadline = 25
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

Environment.act(): Primary agent has reached destination!
success: 74 / 84
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (3, 1), destination = (8, 6), deadline = 50
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0117647058824 , self.eps_freq:  85.0 

Environment.act(): Primary agent has reached destination!
success: 75 / 85
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (2, 5), destination = (3, 2), deadline = 20
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

Environment.act(): Primary agent has reached destination!
success: 76 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (8, 2), destination = (2, 6), deadline = 50
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0114942528736 , self.eps_freq:  87.0 

Environment.act(): Primary agent has reached destination!
success: 77 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (1, 1), destination = (2, 6), deadline = 30
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

Environment.act(): Primary agent has reached destination!
success: 78 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (2, 1), destination = (1, 5), deadline = 25
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0112359550562 , self.eps_freq:  89.0 

Environment.act(): Primary agent has reached destination!
success: 79 / 89
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (6, 3), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

Environment.act(): Primary agent has reached destination!
success: 80 / 90
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (1, 2), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.010989010989 , self.eps_freq:  91.0 

success: 80 / 91
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (7, 3), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

Environment.act(): Primary agent has reached destination!
success: 81 / 92
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (7, 5), destination = (1, 2), deadline = 45
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.010752688172 , self.eps_freq:  93.0 

Environment.act(): Primary agent has reached destination!
success: 82 / 93
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (7, 4), destination = (1, 5), deadline = 35
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

Environment.act(): Primary agent has reached destination!
success: 83 / 94
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (1, 4), destination = (7, 6), deadline = 40
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0105263157895 , self.eps_freq:  95.0 

Environment.act(): Primary agent has reached destination!
success: 84 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (3, 2), destination = (3, 6), deadline = 20
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

Environment.act(): Primary agent has reached destination!
success: 85 / 96
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (8, 5), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0103092783505 , self.eps_freq:  97.0 

Environment.act(): Primary agent has reached destination!
success: 86 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (8, 5), destination = (4, 2), deadline = 35
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

Environment.act(): Primary agent has reached destination!
success: 87 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (8, 4), destination = (2, 6), deadline = 40
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.010101010101 , self.eps_freq:  99.0 

Environment.act(): Primary agent has reached destination!
success: 88 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (2, 2), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.01 , self.eps_freq:  100.0 

Environment.act(): Primary agent has reached destination!
success: 89 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99929
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01111
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05139
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01064
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.13435
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05000
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.27852
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05000
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.70761
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00375
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09791
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.51391
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03448
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.21547
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.33333
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.50000
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02128
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01587
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.70886
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02941
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.05006
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01408
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12419
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00000
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.24616
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04838
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04762
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12419
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02186
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99937
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01538
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03999
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.66254
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00328
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04225
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02837
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.34379
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09091
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.83318
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 3.69446
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 4.00000
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 1.08433
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.99989
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.50000
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.00072
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: -0.25000
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.50041
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.17289
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.10063
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.63503
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.58064
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50054
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.12500
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.11908
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.90324
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.09988
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.50000
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.00101
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 2.40136
--------------------------------------------------------------------------------
updated cells:  59 , self.total_cell_count: 2048 , updated_func_counter: 1648
self.alpha: 0.3 self.gamma: 0.005 , self.epsilon: 0.2 , success: 89
________________________________________________________________________________
gma = 0.005
eps = 0.1
alp = 0.3
epsilon:  0.1
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (3, 4), destination = (7, 1), deadline = 35
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  right , deadline: 34
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 32
annealing now. self.epsilon: 0.5 , action:  None , deadline: 30
annealing now. self.epsilon: 0.5 , action:  left , deadline: 28
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 26
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.5 , action:  left , deadline: 22
annealing now. self.epsilon: 0.5 , action:  left , deadline: 20
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.5 , action:  left , deadline: 16
annealing now. self.epsilon: 0.5 , action:  left , deadline: 14
annealing now. self.epsilon: 0.5 , action:  left , deadline: 12
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 10
annealing now. self.epsilon: 0.5 , action:  None , deadline: 8
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 6
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 4
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (2, 2), destination = (7, 5), deadline = 40
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  right , deadline: 40
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 36
annealing now. self.epsilon: 0.25 , action:  None , deadline: 32
annealing now. self.epsilon: 0.25 , action:  left , deadline: 28
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.25 , action:  None , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 1 / 2
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (5, 1), destination = (8, 4), deadline = 30
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 30
annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 24
annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 2 / 3
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (6, 1), destination = (8, 6), deadline = 35
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.125 , self.eps_freq:  8.0 

Environment.act(): Primary agent has reached destination!
success: 3 / 4
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (6, 6), destination = (1, 6), deadline = 25
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  left , deadline: 20
success: 3 / 5
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (1, 4), destination = (8, 4), deadline = 35
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  forward , deadline: 24
success: 3 / 6
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (7, 6), destination = (5, 2), deadline = 30
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0714285714286 , action:  None , deadline: 28
Environment.act(): Primary agent has reached destination!
success: 4 / 7
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (5, 3), destination = (8, 4), deadline = 20
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 5 / 8
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (6, 5), destination = (8, 1), deadline = 30
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

success: 5 / 9
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (4, 2), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.05 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 6 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (7, 4), destination = (2, 3), deadline = 30
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

success: 6 / 11
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (8, 1), destination = (2, 3), deadline = 40
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

success: 6 / 12
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (2, 1), destination = (8, 2), deadline = 35
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

success: 6 / 13
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (5, 3), destination = (2, 4), deadline = 20
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

success: 6 / 14
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (7, 1), destination = (5, 5), deadline = 30
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

success: 6 / 15
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (6, 1), destination = (8, 4), deadline = 25
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 7 / 16
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (7, 6), destination = (7, 2), deadline = 20
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

success: 7 / 17
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (1, 1), destination = (1, 6), deadline = 25
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

success: 7 / 18
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (1, 5), destination = (3, 2), deadline = 25
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

success: 7 / 19
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (3, 4), destination = (1, 6), deadline = 20
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.025 , self.eps_freq:  40.0 

success: 7 / 20
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (4, 4), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

success: 7 / 21
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (2, 3), destination = (3, 6), deadline = 20
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

success: 7 / 22
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (7, 6), destination = (5, 3), deadline = 25
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

Environment.act(): Primary agent has reached destination!
success: 8 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (3, 4), destination = (8, 5), deadline = 30
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

Environment.act(): Primary agent has reached destination!
success: 9 / 24
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (7, 3), destination = (1, 3), deadline = 30
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.02 , self.eps_freq:  50.0 

Environment.act(): Primary agent has reached destination!
success: 10 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (6, 4), destination = (2, 4), deadline = 20
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

success: 10 / 26
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (2, 1), destination = (3, 4), deadline = 20
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

Environment.act(): Primary agent has reached destination!
success: 11 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (7, 2), destination = (3, 1), deadline = 25
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

Environment.act(): Primary agent has reached destination!
success: 12 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (6, 6), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

success: 12 / 29
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (2, 1), destination = (5, 2), deadline = 20
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

success: 12 / 30
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (2, 4), destination = (6, 1), deadline = 35
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

success: 12 / 31
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (8, 2), destination = (2, 1), deadline = 35
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

Environment.act(): Primary agent has reached destination!
success: 13 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (5, 4), destination = (2, 3), deadline = 20
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

Environment.act(): Primary agent has reached destination!
success: 14 / 33
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (6, 6), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

success: 14 / 34
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (5, 6), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

success: 14 / 35
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (6, 1), destination = (3, 2), deadline = 20
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

success: 14 / 36
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (4, 2), destination = (1, 3), deadline = 20
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

success: 14 / 37
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (6, 5), destination = (2, 6), deadline = 25
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

success: 14 / 38
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (7, 6), destination = (1, 6), deadline = 30
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

success: 14 / 39
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (6, 5), destination = (7, 1), deadline = 25
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

success: 14 / 40
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (3, 3), destination = (7, 2), deadline = 25
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

success: 14 / 41
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (5, 6), destination = (8, 3), deadline = 30
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

success: 14 / 42
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (6, 6), destination = (3, 5), deadline = 20
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

Environment.act(): Primary agent has reached destination!
success: 15 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (3, 6), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

success: 15 / 44
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (1, 1), destination = (6, 6), deadline = 50
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

success: 15 / 45
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (1, 6), destination = (8, 4), deadline = 45
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

success: 15 / 46
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (4, 4), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

success: 15 / 47
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (2, 5), destination = (2, 1), deadline = 20
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

Environment.act(): Primary agent has reached destination!
success: 16 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (3, 6), destination = (1, 3), deadline = 25
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

Environment.act(): Primary agent has reached destination!
success: 17 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (8, 5), destination = (4, 3), deadline = 30
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.01 , self.eps_freq:  100.0 

Environment.act(): Primary agent has reached destination!
success: 18 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (5, 2), destination = (8, 1), deadline = 20
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00980392156863 , self.eps_freq:  102.0 

success: 18 / 51
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (8, 5), destination = (3, 4), deadline = 30
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.00961538461538 , self.eps_freq:  104.0 

Environment.act(): Primary agent has reached destination!
success: 19 / 52
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (7, 5), destination = (1, 6), deadline = 35
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.00943396226415 , self.eps_freq:  106.0 

Environment.act(): Primary agent has reached destination!
success: 20 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (4, 6), destination = (8, 5), deadline = 25
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.00925925925926 , self.eps_freq:  108.0 

Environment.act(): Primary agent has reached destination!
success: 21 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (4, 5), destination = (8, 2), deadline = 35
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.00909090909091 , self.eps_freq:  110.0 

success: 21 / 55
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (5, 6), destination = (1, 5), deadline = 25
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.00892857142857 , self.eps_freq:  112.0 

success: 21 / 56
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (8, 1), destination = (4, 4), deadline = 35
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.00877192982456 , self.eps_freq:  114.0 

success: 21 / 57
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (7, 1), destination = (2, 6), deadline = 50
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.00862068965517 , self.eps_freq:  116.0 

success: 21 / 58
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (6, 1), destination = (4, 6), deadline = 35
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.00847457627119 , self.eps_freq:  118.0 

success: 21 / 59
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (7, 3), destination = (1, 6), deadline = 45
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.00833333333333 , self.eps_freq:  120.0 

success: 21 / 60
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (2, 1), destination = (6, 5), deadline = 40
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.00819672131148 , self.eps_freq:  122.0 

success: 21 / 61
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (6, 3), destination = (4, 1), deadline = 20
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.00806451612903 , self.eps_freq:  124.0 

Environment.act(): Primary agent has reached destination!
success: 22 / 62
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (8, 2), destination = (5, 1), deadline = 20
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.00793650793651 , self.eps_freq:  126.0 

Environment.act(): Primary agent has reached destination!
success: 23 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 3), deadline = 40
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0078125 , self.eps_freq:  128.0 

success: 23 / 64
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (5, 6), destination = (7, 3), deadline = 25
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.00769230769231 , self.eps_freq:  130.0 

success: 23 / 65
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (8, 4), destination = (5, 6), deadline = 25
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.00757575757576 , self.eps_freq:  132.0 

success: 23 / 66
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (3, 3), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.00746268656716 , self.eps_freq:  134.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (8, 4), destination = (2, 3), deadline = 35
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.00735294117647 , self.eps_freq:  136.0 

success: 24 / 68
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (3, 1), destination = (7, 2), deadline = 25
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.00724637681159 , self.eps_freq:  138.0 

success: 24 / 69
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (4, 1), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.00714285714286 , self.eps_freq:  140.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 70
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (4, 3), destination = (1, 1), deadline = 25
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.00704225352113 , self.eps_freq:  142.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (4, 1), destination = (6, 5), deadline = 30
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.00694444444444 , self.eps_freq:  144.0 

success: 26 / 72
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (1, 4), destination = (8, 6), deadline = 45
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.00684931506849 , self.eps_freq:  146.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (5, 6), destination = (6, 1), deadline = 30
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.00675675675676 , self.eps_freq:  148.0 

success: 27 / 74
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (5, 1), destination = (8, 4), deadline = 30
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.00666666666667 , self.eps_freq:  150.0 

success: 27 / 75
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (2, 5), destination = (6, 3), deadline = 30
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.00657894736842 , self.eps_freq:  152.0 

success: 27 / 76
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (5, 2), destination = (1, 4), deadline = 30
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.00649350649351 , self.eps_freq:  154.0 

success: 27 / 77
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (1, 2), destination = (5, 3), deadline = 25
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.00641025641026 , self.eps_freq:  156.0 

success: 27 / 78
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (3, 6), destination = (8, 1), deadline = 50
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00632911392405 , self.eps_freq:  158.0 

success: 27 / 79
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (4, 1), destination = (2, 6), deadline = 35
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.00625 , self.eps_freq:  160.0 

success: 27 / 80
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (6, 5), destination = (8, 1), deadline = 30
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00617283950617 , self.eps_freq:  162.0 

success: 27 / 81
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (1, 1), destination = (8, 2), deadline = 40
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.00609756097561 , self.eps_freq:  164.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (3, 3), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.00602409638554 , self.eps_freq:  166.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 83
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (2, 2), destination = (5, 1), deadline = 20
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.00595238095238 , self.eps_freq:  168.0 

success: 29 / 84
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (4, 2), destination = (2, 5), deadline = 25
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.00588235294118 , self.eps_freq:  170.0 

success: 29 / 85
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (6, 2), destination = (7, 5), deadline = 20
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.00581395348837 , self.eps_freq:  172.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (5, 2), destination = (3, 6), deadline = 30
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.00574712643678 , self.eps_freq:  174.0 

success: 30 / 87
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (7, 3), destination = (2, 2), deadline = 30
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.00568181818182 , self.eps_freq:  176.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (1, 2), destination = (6, 5), deadline = 40
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.00561797752809 , self.eps_freq:  178.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 89
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (6, 1), destination = (2, 5), deadline = 40
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.00555555555556 , self.eps_freq:  180.0 

success: 32 / 90
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (1, 1), destination = (2, 4), deadline = 20
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.00549450549451 , self.eps_freq:  182.0 

success: 32 / 91
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (1, 3), destination = (4, 6), deadline = 30
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0054347826087 , self.eps_freq:  184.0 

success: 32 / 92
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (3, 3), destination = (7, 2), deadline = 25
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.00537634408602 , self.eps_freq:  186.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 93
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (2, 6), destination = (4, 3), deadline = 25
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.00531914893617 , self.eps_freq:  188.0 

success: 33 / 94
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (3, 3), destination = (1, 6), deadline = 25
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.00526315789474 , self.eps_freq:  190.0 

success: 33 / 95
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (2, 6), destination = (3, 2), deadline = 25
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.00520833333333 , self.eps_freq:  192.0 

success: 33 / 96
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (5, 5), destination = (2, 4), deadline = 20
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.00515463917526 , self.eps_freq:  194.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (7, 4), destination = (3, 4), deadline = 20
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.00510204081633 , self.eps_freq:  197.0 

Environment.act(): Primary agent has reached destination!
success: 35 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (1, 3), destination = (6, 4), deadline = 30
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.00505050505051 , self.eps_freq:  198.0 

success: 35 / 99
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (8, 5), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.005 , self.eps_freq:  200.0 

success: 35 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99895
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01754
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05590
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01136
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07692
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04348
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.00017
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05536
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.96595
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00368
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04571
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04678
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04469
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.16291
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01020
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.00000
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.96696
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02222
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.16667
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99908
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.41392
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00439
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.00000
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09085
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04419
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01136
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00125
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09091
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10352
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.22223
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04275
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01316
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08689
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.32346
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.33177
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00125
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08941
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.18869
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.13229
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08718
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.63820
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.21815
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04903
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01042
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.00125
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: -0.16660
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 3.15000
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.00000
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.50438
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.16667
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.49385
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 3.17231
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.00071
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.50000
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.00125
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.49875
--------------------------------------------------------------------------------
updated cells:  56 , self.total_cell_count: 2048 , updated_func_counter: 2353
self.alpha: 0.3 self.gamma: 0.005 , self.epsilon: 0.1 , success: 35
________________________________________________________________________________
Environment.reset(): Primary agent could not reach destination within deadline!
gma = 0.05
eps = 0.5
alp = 0.3
epsilon:  0.5
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (7, 4), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 2.5 , self.eps_freq:  1.0 

annealing now. self.epsilon: 2.5 , action:  None , deadline: 25
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 24
annealing now. self.epsilon: 2.5 , action:  left , deadline: 23
annealing now. self.epsilon: 2.5 , action:  right , deadline: 22
annealing now. self.epsilon: 2.5 , action:  left , deadline: 21
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 20
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 19
annealing now. self.epsilon: 2.5 , action:  left , deadline: 18
annealing now. self.epsilon: 2.5 , action:  right , deadline: 17
annealing now. self.epsilon: 2.5 , action:  right , deadline: 16
annealing now. self.epsilon: 2.5 , action:  None , deadline: 15
annealing now. self.epsilon: 2.5 , action:  left , deadline: 14
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 13
annealing now. self.epsilon: 2.5 , action:  right , deadline: 12
annealing now. self.epsilon: 2.5 , action:  None , deadline: 11
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 10
annealing now. self.epsilon: 2.5 , action:  left , deadline: 9
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 8
annealing now. self.epsilon: 2.5 , action:  None , deadline: 7
annealing now. self.epsilon: 2.5 , action:  right , deadline: 6
annealing now. self.epsilon: 2.5 , action:  None , deadline: 5
annealing now. self.epsilon: 2.5 , action:  None , deadline: 4
annealing now. self.epsilon: 2.5 , action:  right , deadline: 3
annealing now. self.epsilon: 2.5 , action:  right , deadline: 2
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (2, 6), destination = (7, 5), deadline = 30
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 1.25 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.25 , action:  None , deadline: 30
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 29
annealing now. self.epsilon: 1.25 , action:  left , deadline: 28
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 27
annealing now. self.epsilon: 1.25 , action:  right , deadline: 26
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 25
annealing now. self.epsilon: 1.25 , action:  left , deadline: 24
annealing now. self.epsilon: 1.25 , action:  None , deadline: 23
annealing now. self.epsilon: 1.25 , action:  left , deadline: 22
annealing now. self.epsilon: 1.25 , action:  None , deadline: 21
annealing now. self.epsilon: 1.25 , action:  left , deadline: 20
annealing now. self.epsilon: 1.25 , action:  None , deadline: 19
annealing now. self.epsilon: 1.25 , action:  left , deadline: 18
annealing now. self.epsilon: 1.25 , action:  None , deadline: 17
annealing now. self.epsilon: 1.25 , action:  left , deadline: 16
annealing now. self.epsilon: 1.25 , action:  left , deadline: 15
annealing now. self.epsilon: 1.25 , action:  right , deadline: 14
annealing now. self.epsilon: 1.25 , action:  right , deadline: 13
annealing now. self.epsilon: 1.25 , action:  left , deadline: 12
annealing now. self.epsilon: 1.25 , action:  right , deadline: 11
annealing now. self.epsilon: 1.25 , action:  left , deadline: 10
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 9
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 8
annealing now. self.epsilon: 1.25 , action:  left , deadline: 7
annealing now. self.epsilon: 1.25 , action:  left , deadline: 6
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 5
annealing now. self.epsilon: 1.25 , action:  None , deadline: 4
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 3
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 2
success: 0 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (4, 1), destination = (7, 2), deadline = 20
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.833333333333 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 20
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 18
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 16
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 14
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 12
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 10
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 8
Environment.act(): Primary agent has reached destination!
success: 1 / 3
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (7, 6), destination = (3, 5), deadline = 25
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.625 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.625 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.625 , action:  right , deadline: 22
annealing now. self.epsilon: 0.625 , action:  right , deadline: 20
annealing now. self.epsilon: 0.625 , action:  left , deadline: 18
annealing now. self.epsilon: 0.625 , action:  None , deadline: 16
annealing now. self.epsilon: 0.625 , action:  None , deadline: 14
annealing now. self.epsilon: 0.625 , action:  None , deadline: 12
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 10
annealing now. self.epsilon: 0.625 , action:  right , deadline: 8
annealing now. self.epsilon: 0.625 , action:  left , deadline: 6
annealing now. self.epsilon: 0.625 , action:  left , deadline: 4
Environment.act(): Primary agent has reached destination!
success: 2 / 4
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (1, 2), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.5 , action:  None , deadline: 22
annealing now. self.epsilon: 0.5 , action:  right , deadline: 20
annealing now. self.epsilon: 0.5 , action:  right , deadline: 18
annealing now. self.epsilon: 0.5 , action:  left , deadline: 16
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 14
annealing now. self.epsilon: 0.5 , action:  right , deadline: 12
annealing now. self.epsilon: 0.5 , action:  left , deadline: 10
annealing now. self.epsilon: 0.5 , action:  None , deadline: 8
annealing now. self.epsilon: 0.5 , action:  None , deadline: 6
annealing now. self.epsilon: 0.5 , action:  right , deadline: 4
success: 2 / 5
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (1, 1), destination = (2, 5), deadline = 25
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.416666666667 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.416666666667 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.416666666667 , action:  forward , deadline: 21
annealing now. self.epsilon: 0.416666666667 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.416666666667 , action:  left , deadline: 15
annealing now. self.epsilon: 0.416666666667 , action:  right , deadline: 12
annealing now. self.epsilon: 0.416666666667 , action:  None , deadline: 9
Environment.act(): Primary agent has reached destination!
success: 3 / 6
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (3, 3), destination = (7, 2), deadline = 25
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.357142857143 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 24
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 21
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 18
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 15
annealing now. self.epsilon: 0.357142857143 , action:  forward , deadline: 12
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 9
Environment.act(): Primary agent has reached destination!
success: 4 / 7
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (7, 5), destination = (5, 1), deadline = 30
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.3125 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.3125 , action:  right , deadline: 28
annealing now. self.epsilon: 0.3125 , action:  None , deadline: 24
annealing now. self.epsilon: 0.3125 , action:  left , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 5 / 8
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (8, 2), destination = (3, 3), deadline = 30
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.277777777778 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.277777777778 , action:  None , deadline: 28
annealing now. self.epsilon: 0.277777777778 , action:  right , deadline: 24
annealing now. self.epsilon: 0.277777777778 , action:  None , deadline: 20
annealing now. self.epsilon: 0.277777777778 , action:  right , deadline: 16
annealing now. self.epsilon: 0.277777777778 , action:  right , deadline: 12
annealing now. self.epsilon: 0.277777777778 , action:  None , deadline: 8
Environment.act(): Primary agent has reached destination!
success: 6 / 9
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (1, 1), destination = (8, 3), deadline = 45
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  forward , deadline: 44
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 40
annealing now. self.epsilon: 0.25 , action:  None , deadline: 36
annealing now. self.epsilon: 0.25 , action:  left , deadline: 32
annealing now. self.epsilon: 0.25 , action:  None , deadline: 28
annealing now. self.epsilon: 0.25 , action:  None , deadline: 24
annealing now. self.epsilon: 0.25 , action:  right , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 7 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (2, 1), destination = (6, 3), deadline = 30
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.227272727273 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.227272727273 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.227272727273 , action:  left , deadline: 25
annealing now. self.epsilon: 0.227272727273 , action:  right , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 8 / 11
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (1, 1), destination = (6, 1), deadline = 25
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.208333333333 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.208333333333 , action:  forward , deadline: 25
annealing now. self.epsilon: 0.208333333333 , action:  None , deadline: 20
annealing now. self.epsilon: 0.208333333333 , action:  right , deadline: 15
annealing now. self.epsilon: 0.208333333333 , action:  forward , deadline: 10
Environment.act(): Primary agent has reached destination!
success: 9 / 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (2, 2), destination = (8, 5), deadline = 45
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.192307692308 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.192307692308 , action:  None , deadline: 42
annealing now. self.epsilon: 0.192307692308 , action:  forward , deadline: 36
annealing now. self.epsilon: 0.192307692308 , action:  right , deadline: 30
annealing now. self.epsilon: 0.192307692308 , action:  None , deadline: 24
annealing now. self.epsilon: 0.192307692308 , action:  left , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 10 / 13
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (3, 3), destination = (1, 5), deadline = 20
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.178571428571 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.178571428571 , action:  right , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 11 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (4, 2), destination = (3, 6), deadline = 25
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 24
annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 18
annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 12 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (6, 5), destination = (1, 3), deadline = 35
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.15625 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.15625 , action:  left , deadline: 35
annealing now. self.epsilon: 0.15625 , action:  right , deadline: 28
Environment.act(): Primary agent has reached destination!
success: 13 / 16
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (2, 5), destination = (1, 2), deadline = 20
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.147058823529 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.147058823529 , action:  forward , deadline: 14
Environment.act(): Primary agent has reached destination!
success: 14 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (4, 4), destination = (1, 6), deadline = 25
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.138888888889 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.138888888889 , action:  right , deadline: 24
annealing now. self.epsilon: 0.138888888889 , action:  forward , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 15 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (2, 3), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.131578947368 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.131578947368 , action:  right , deadline: 24
annealing now. self.epsilon: 0.131578947368 , action:  None , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 16 / 19
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (3, 6), destination = (3, 2), deadline = 20
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  forward , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 17 / 20
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (8, 3), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.119047619048 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.119047619048 , action:  right , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 18 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (7, 5), destination = (3, 1), deadline = 40
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.113636363636 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.113636363636 , action:  right , deadline: 36
annealing now. self.epsilon: 0.113636363636 , action:  None , deadline: 27
Environment.act(): Primary agent has reached destination!
success: 19 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (1, 5), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.108695652174 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.108695652174 , action:  right , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 20 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (3, 3), destination = (8, 3), deadline = 25
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.104166666667 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.104166666667 , action:  None , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 21 / 24
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (3, 2), destination = (5, 6), deadline = 30
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  None , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 22 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (3, 5), destination = (6, 1), deadline = 35
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0961538461538 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0961538461538 , action:  None , deadline: 33
annealing now. self.epsilon: 0.0961538461538 , action:  None , deadline: 22
Environment.act(): Primary agent has reached destination!
success: 23 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (6, 1), destination = (8, 3), deadline = 20
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0925925925926 , self.eps_freq:  11.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (5, 2), destination = (6, 5), deadline = 20
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0892857142857 , self.eps_freq:  12.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (1, 5), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0862068965517 , self.eps_freq:  12.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (8, 6), destination = (6, 2), deadline = 30
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 30
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (1, 1), destination = (8, 1), deadline = 35
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0806451612903 , self.eps_freq:  13.0 

annealing now. self.epsilon: 0.0806451612903 , action:  None , deadline: 26
Environment.act(): Primary agent has reached destination!
success: 28 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (8, 5), destination = (5, 3), deadline = 25
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.078125 , self.eps_freq:  13.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (6, 5), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0757575757576 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 33
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (6, 2), destination = (3, 1), deadline = 20
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0735294117647 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 34
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (7, 6), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

success: 31 / 35
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (6, 3), destination = (2, 2), deadline = 25
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0694444444444 , self.eps_freq:  15.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 36
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (8, 2), destination = (4, 4), deadline = 30
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0675675675676 , self.eps_freq:  15.0 

annealing now. self.epsilon: 0.0675675675676 , action:  forward , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 33 / 37
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (7, 6), destination = (3, 5), deadline = 25
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0657894736842 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (8, 4), destination = (1, 6), deadline = 45
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0641025641026 , self.eps_freq:  16.0 

annealing now. self.epsilon: 0.0641025641026 , action:  right , deadline: 32
Environment.act(): Primary agent has reached destination!
success: 35 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (7, 4), destination = (5, 2), deadline = 20
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 40
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (1, 6), destination = (5, 4), deadline = 30
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0609756097561 , self.eps_freq:  17.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 41
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (7, 4), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0595238095238 , self.eps_freq:  17.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 42
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (3, 3), destination = (8, 4), deadline = 30
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0581395348837 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (4, 4), destination = (8, 4), deadline = 20
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0568181818182 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 44
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (3, 2), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (2, 5), destination = (6, 3), deadline = 30
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.054347826087 , self.eps_freq:  19.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 46
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (7, 6), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0531914893617 , self.eps_freq:  19.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 47
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (6, 6), destination = (7, 1), deadline = 30
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0520833333333 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (8, 1), destination = (1, 3), deadline = 45
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0510204081633 , self.eps_freq:  20.0 

annealing now. self.epsilon: 0.0510204081633 , action:  forward , deadline: 40
Environment.act(): Primary agent has reached destination!
success: 45 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (8, 1), destination = (4, 5), deadline = 40
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.05 , self.eps_freq:  20.0 

annealing now. self.epsilon: 0.05 , action:  forward , deadline: 40
Environment.act(): Primary agent has reached destination!
success: 46 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (3, 3), destination = (7, 5), deadline = 30
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0490196078431 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 47 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (2, 2), destination = (2, 6), deadline = 20
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0480769230769 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 52
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (5, 2), destination = (2, 6), deadline = 35
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0471698113208 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (5, 3), destination = (8, 2), deadline = 20
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0462962962963 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (4, 1), destination = (1, 3), deadline = 25
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (6, 6), destination = (1, 3), deadline = 40
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0446428571429 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (1, 2), destination = (8, 6), deadline = 55
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0438596491228 , self.eps_freq:  23.0 

annealing now. self.epsilon: 0.0438596491228 , action:  right , deadline: 46
Environment.act(): Primary agent has reached destination!
success: 53 / 57
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (2, 1), destination = (7, 5), deadline = 45
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0431034482759 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 54 / 58
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (7, 6), destination = (8, 2), deadline = 25
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0423728813559 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 55 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (8, 1), destination = (2, 3), deadline = 40
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (3, 6), destination = (2, 3), deadline = 20
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0409836065574 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 57 / 61
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (4, 6), destination = (6, 2), deadline = 30
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0403225806452 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 58 / 62
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (3, 2), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0396825396825 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 59 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (2, 1), destination = (7, 3), deadline = 35
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0390625 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 60 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (6, 5), destination = (3, 2), deadline = 30
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 61 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (1, 2), destination = (4, 1), deadline = 20
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0378787878788 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 62 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (2, 2), destination = (1, 6), deadline = 25
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0373134328358 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 63 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (8, 4), destination = (7, 1), deadline = 20
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0367647058824 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 64 / 68
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (6, 4), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.036231884058 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 65 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (7, 1), destination = (1, 1), deadline = 30
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 66 / 70
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (2, 6), destination = (4, 3), deadline = 25
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0352112676056 , self.eps_freq:  29.0 

success: 66 / 71
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (8, 5), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0347222222222 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 67 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (5, 2), destination = (1, 5), deadline = 35
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0342465753425 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 68 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (7, 6), destination = (3, 3), deadline = 35
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0337837837838 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 69 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (8, 4), destination = (1, 2), deadline = 45
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 70 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (1, 5), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0328947368421 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 71 / 76
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (1, 2), destination = (3, 6), deadline = 30
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0324675324675 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 72 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (8, 4), destination = (2, 4), deadline = 30
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0320512820513 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 73 / 78
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (1, 5), destination = (7, 2), deadline = 45
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0316455696203 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 74 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (2, 1), destination = (3, 5), deadline = 25
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 75 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (6, 3), destination = (1, 3), deadline = 25
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0308641975309 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 76 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (2, 1), destination = (8, 1), deadline = 30
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.030487804878 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 77 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (4, 6), destination = (2, 1), deadline = 35
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0301204819277 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 78 / 83
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (5, 5), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0297619047619 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 79 / 84
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (7, 2), destination = (2, 6), deadline = 45
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 80 / 85
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (3, 2), destination = (7, 1), deadline = 25
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0290697674419 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 81 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (3, 6), destination = (6, 4), deadline = 25
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0287356321839 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 82 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (7, 6), destination = (1, 1), deadline = 55
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0284090909091 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 83 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (2, 1), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0280898876404 , self.eps_freq:  36.0 

success: 83 / 89
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (2, 5), destination = (5, 1), deadline = 35
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 84 / 90
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (3, 1), destination = (8, 1), deadline = 25
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0274725274725 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 85 / 91
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (6, 4), destination = (2, 2), deadline = 30
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0271739130435 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 86 / 92
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (4, 1), destination = (6, 5), deadline = 30
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0268817204301 , self.eps_freq:  38.0 

success: 86 / 93
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (1, 1), destination = (6, 5), deadline = 45
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0265957446809 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 87 / 94
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (4, 4), destination = (8, 6), deadline = 30
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 88 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (7, 3), destination = (1, 4), deadline = 35
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0260416666667 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 89 / 96
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (4, 6), destination = (5, 1), deadline = 30
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0257731958763 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 90 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (3, 2), destination = (2, 5), deadline = 20
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0255102040816 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 91 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (3, 2), destination = (7, 3), deadline = 25
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0252525252525 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 92 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (4, 3), destination = (6, 5), deadline = 20
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 93 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99577
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03846
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.16262
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12428
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02041
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10000
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.44619
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.95867
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.29073
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.77127
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01695
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09772
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.43258
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02857
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.01368
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07692
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02128
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.24922
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.05426
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.20456
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01075
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.16994
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99304
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03753
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.21130
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09997
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.20000
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.90186
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05469
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02920
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04348
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.73135
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 3.85167
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.72010
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.41335
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.98565
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: -0.25000
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.50053
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.87155
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.51513
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.38878
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.51798
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.49993
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.07031
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.89341
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.59508
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.80354
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.32906
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.52802
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.99168
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.51302
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.98696
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 1.75788
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.00465
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 2.96608
--------------------------------------------------------------------------------
updated cells:  55 , self.total_cell_count: 2048 , updated_func_counter: 1535
self.alpha: 0.3 self.gamma: 0.05 , self.epsilon: 0.5 , success: 93
________________________________________________________________________________
gma = 0.05
eps = 0.2
alp = 0.3
epsilon:  0.2
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (7, 3), destination = (4, 6), deadline = 30
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 1.0 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.0 , action:  right , deadline: 30
annealing now. self.epsilon: 1.0 , action:  left , deadline: 29
annealing now. self.epsilon: 1.0 , action:  None , deadline: 28
annealing now. self.epsilon: 1.0 , action:  left , deadline: 27
annealing now. self.epsilon: 1.0 , action:  None , deadline: 26
annealing now. self.epsilon: 1.0 , action:  left , deadline: 25
annealing now. self.epsilon: 1.0 , action:  left , deadline: 24
annealing now. self.epsilon: 1.0 , action:  None , deadline: 23
annealing now. self.epsilon: 1.0 , action:  left , deadline: 22
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 21
annealing now. self.epsilon: 1.0 , action:  left , deadline: 20
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 19
annealing now. self.epsilon: 1.0 , action:  right , deadline: 18
annealing now. self.epsilon: 1.0 , action:  None , deadline: 17
annealing now. self.epsilon: 1.0 , action:  None , deadline: 16
annealing now. self.epsilon: 1.0 , action:  None , deadline: 15
annealing now. self.epsilon: 1.0 , action:  right , deadline: 14
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 13
annealing now. self.epsilon: 1.0 , action:  None , deadline: 12
annealing now. self.epsilon: 1.0 , action:  None , deadline: 11
annealing now. self.epsilon: 1.0 , action:  right , deadline: 10
annealing now. self.epsilon: 1.0 , action:  None , deadline: 9
annealing now. self.epsilon: 1.0 , action:  right , deadline: 8
annealing now. self.epsilon: 1.0 , action:  left , deadline: 7
annealing now. self.epsilon: 1.0 , action:  right , deadline: 6
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 5
annealing now. self.epsilon: 1.0 , action:  right , deadline: 4
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 3
annealing now. self.epsilon: 1.0 , action:  left , deadline: 2
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (1, 3), destination = (8, 5), deadline = 45
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  None , deadline: 44
annealing now. self.epsilon: 0.5 , action:  left , deadline: 42
annealing now. self.epsilon: 0.5 , action:  None , deadline: 40
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 38
annealing now. self.epsilon: 0.5 , action:  None , deadline: 36
annealing now. self.epsilon: 0.5 , action:  left , deadline: 34
annealing now. self.epsilon: 0.5 , action:  left , deadline: 32
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.5 , action:  None , deadline: 28
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 26
Environment.act(): Primary agent has reached destination!
success: 1 / 2
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (6, 1), destination = (2, 3), deadline = 30
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.333333333333 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.333333333333 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 27
annealing now. self.epsilon: 0.333333333333 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 21
annealing now. self.epsilon: 0.333333333333 , action:  None , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 2 / 3
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (1, 5), destination = (4, 2), deadline = 30
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  left , deadline: 28
annealing now. self.epsilon: 0.25 , action:  right , deadline: 24
annealing now. self.epsilon: 0.25 , action:  None , deadline: 20
annealing now. self.epsilon: 0.25 , action:  None , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 3 / 4
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (6, 6), destination = (2, 2), deadline = 40
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.2 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.2 , action:  None , deadline: 40
annealing now. self.epsilon: 0.2 , action:  right , deadline: 35
annealing now. self.epsilon: 0.2 , action:  None , deadline: 30
annealing now. self.epsilon: 0.2 , action:  forward , deadline: 25
annealing now. self.epsilon: 0.2 , action:  right , deadline: 20
annealing now. self.epsilon: 0.2 , action:  right , deadline: 15
Environment.act(): Primary agent has reached destination!
success: 4 / 5
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (3, 3), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 24
annealing now. self.epsilon: 0.166666666667 , action:  left , deadline: 18
annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 12
success: 4 / 6
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (2, 1), destination = (5, 4), deadline = 30
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.142857142857 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.142857142857 , action:  None , deadline: 28
annealing now. self.epsilon: 0.142857142857 , action:  None , deadline: 21
Environment.act(): Primary agent has reached destination!
success: 5 / 7
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (3, 3), destination = (7, 6), deadline = 35
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  right , deadline: 32
annealing now. self.epsilon: 0.125 , action:  right , deadline: 24
annealing now. self.epsilon: 0.125 , action:  left , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 6 / 8
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (6, 5), destination = (2, 5), deadline = 20
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.111111111111 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.111111111111 , action:  None , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 7 / 9
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (1, 6), destination = (3, 2), deadline = 30
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  left , deadline: 30
annealing now. self.epsilon: 0.1 , action:  right , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 8 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (1, 4), destination = (7, 6), deadline = 40
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0909090909091 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0909090909091 , action:  right , deadline: 33
Environment.act(): Primary agent has reached destination!
success: 9 / 11
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (6, 6), destination = (1, 6), deadline = 25
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  forward , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 10 / 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (7, 3), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0769230769231 , self.eps_freq:  13.0 

Environment.act(): Primary agent has reached destination!
success: 11 / 13
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (2, 3), destination = (3, 6), deadline = 20
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 12 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (4, 6), destination = (6, 4), deadline = 20
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0666666666667 , self.eps_freq:  15.0 

Environment.act(): Primary agent has reached destination!
success: 13 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (5, 6), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 14 / 16
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (4, 6), destination = (7, 4), deadline = 25
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0588235294118 , self.eps_freq:  17.0 

Environment.act(): Primary agent has reached destination!
success: 15 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (1, 4), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 16 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (8, 1), destination = (6, 6), deadline = 35
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0526315789474 , self.eps_freq:  19.0 

Environment.act(): Primary agent has reached destination!
success: 17 / 19
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (3, 5), destination = (6, 4), deadline = 20
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.05 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 18 / 20
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (1, 5), destination = (5, 3), deadline = 30
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.047619047619 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 19 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (1, 5), destination = (5, 3), deadline = 30
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 20 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (4, 1), destination = (3, 4), deadline = 20
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0434782608696 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 21 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (2, 2), destination = (6, 1), deadline = 25
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 22 / 24
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (2, 4), destination = (7, 6), deadline = 35
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.04 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 23 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (6, 1), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (4, 5), destination = (1, 6), deadline = 20
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.037037037037 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (4, 5), destination = (3, 1), deadline = 25
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (7, 1), destination = (3, 4), deadline = 35
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0344827586207 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (8, 2), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 30
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (8, 6), destination = (1, 5), deadline = 40
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0322580645161 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (7, 6), destination = (2, 2), deadline = 45
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (5, 3), destination = (2, 1), deadline = 25
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.030303030303 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 33
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (1, 2), destination = (8, 1), deadline = 40
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

success: 31 / 34
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (2, 3), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0285714285714 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 35
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (5, 5), destination = (2, 1), deadline = 35
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

success: 32 / 36
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (1, 3), destination = (7, 2), deadline = 35
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.027027027027 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 37
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (4, 6), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (1, 2), destination = (5, 6), deadline = 40
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.025641025641 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 35 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (4, 1), destination = (1, 4), deadline = 30
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 40
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (5, 2), destination = (1, 4), deadline = 30
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0243902439024 , self.eps_freq:  41.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 41
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (7, 4), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 42
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (6, 3), destination = (2, 2), deadline = 25
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0232558139535 , self.eps_freq:  43.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (7, 6), destination = (8, 1), deadline = 30
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 44
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (1, 3), destination = (8, 5), deadline = 45
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0222222222222 , self.eps_freq:  45.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (6, 1), destination = (4, 4), deadline = 25
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 46
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (1, 1), destination = (8, 3), deadline = 45
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0212765957447 , self.eps_freq:  47.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 47
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (4, 1), destination = (5, 5), deadline = 25
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (6, 6), destination = (8, 1), deadline = 35
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0204081632653 , self.eps_freq:  50.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 4), deadline = 35
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.02 , self.eps_freq:  50.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (7, 3), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0196078431373 , self.eps_freq:  51.0 

Environment.act(): Primary agent has reached destination!
success: 47 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (6, 2), destination = (1, 6), deadline = 45
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 52
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (1, 5), destination = (3, 1), deadline = 30
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0188679245283 , self.eps_freq:  53.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (6, 4), destination = (1, 1), deadline = 40
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (3, 4), destination = (7, 5), deadline = 25
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0181818181818 , self.eps_freq:  55.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (3, 6), destination = (7, 2), deadline = 40
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (2, 4), destination = (7, 1), deadline = 40
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0175438596491 , self.eps_freq:  57.0 

Environment.act(): Primary agent has reached destination!
success: 53 / 57
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (2, 5), destination = (7, 6), deadline = 30
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

Environment.act(): Primary agent has reached destination!
success: 54 / 58
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (3, 1), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0169491525424 , self.eps_freq:  59.0 

Environment.act(): Primary agent has reached destination!
success: 55 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (8, 1), destination = (1, 5), deadline = 55
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (1, 5), destination = (6, 1), deadline = 45
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.016393442623 , self.eps_freq:  61.0 

Environment.act(): Primary agent has reached destination!
success: 57 / 61
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (2, 1), destination = (7, 1), deadline = 25
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

Environment.act(): Primary agent has reached destination!
success: 58 / 62
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (6, 4), destination = (2, 2), deadline = 30
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.015873015873 , self.eps_freq:  63.0 

success: 58 / 63
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (5, 1), destination = (8, 3), deadline = 25
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

Environment.act(): Primary agent has reached destination!
success: 59 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (6, 2), destination = (3, 5), deadline = 30
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0153846153846 , self.eps_freq:  65.0 

Environment.act(): Primary agent has reached destination!
success: 60 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (6, 1), destination = (7, 5), deadline = 25
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

Environment.act(): Primary agent has reached destination!
success: 61 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (8, 1), destination = (1, 5), deadline = 55
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0149253731343 , self.eps_freq:  67.0 

Environment.act(): Primary agent has reached destination!
success: 62 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (6, 3), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

Environment.act(): Primary agent has reached destination!
success: 63 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (1, 1), destination = (6, 2), deadline = 30
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0144927536232 , self.eps_freq:  69.0 

success: 63 / 69
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (3, 3), destination = (8, 4), deadline = 30
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

success: 63 / 70
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (2, 6), destination = (2, 1), deadline = 25
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0140845070423 , self.eps_freq:  71.0 

Environment.act(): Primary agent has reached destination!
success: 64 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (1, 6), destination = (8, 3), deadline = 50
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

success: 64 / 72
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (6, 1), destination = (2, 5), deadline = 40
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.013698630137 , self.eps_freq:  73.0 

Environment.act(): Primary agent has reached destination!
success: 65 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (3, 4), destination = (7, 3), deadline = 25
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

Environment.act(): Primary agent has reached destination!
success: 66 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (8, 5), destination = (2, 3), deadline = 40
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0133333333333 , self.eps_freq:  75.0 

Environment.act(): Primary agent has reached destination!
success: 67 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (8, 3), destination = (5, 5), deadline = 25
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

Environment.act(): Primary agent has reached destination!
success: 68 / 76
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (7, 5), destination = (1, 1), deadline = 50
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.012987012987 , self.eps_freq:  77.0 

Environment.act(): Primary agent has reached destination!
success: 69 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (6, 1), destination = (2, 6), deadline = 45
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

success: 69 / 78
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (1, 3), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0126582278481 , self.eps_freq:  79.0 

Environment.act(): Primary agent has reached destination!
success: 70 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (6, 4), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

Environment.act(): Primary agent has reached destination!
success: 71 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (7, 1), destination = (8, 4), deadline = 20
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0123456790123 , self.eps_freq:  81.0 

success: 71 / 81
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (6, 2), destination = (1, 2), deadline = 25
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

Environment.act(): Primary agent has reached destination!
success: 72 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (2, 2), destination = (5, 1), deadline = 20
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0120481927711 , self.eps_freq:  83.0 

Environment.act(): Primary agent has reached destination!
success: 73 / 83
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (3, 6), destination = (1, 3), deadline = 25
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

Environment.act(): Primary agent has reached destination!
success: 74 / 84
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (1, 1), destination = (3, 4), deadline = 25
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0117647058824 , self.eps_freq:  85.0 

Environment.act(): Primary agent has reached destination!
success: 75 / 85
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (6, 2), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

Environment.act(): Primary agent has reached destination!
success: 76 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (8, 5), destination = (6, 1), deadline = 30
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0114942528736 , self.eps_freq:  87.0 

Environment.act(): Primary agent has reached destination!
success: 77 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (8, 4), destination = (4, 2), deadline = 30
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

Environment.act(): Primary agent has reached destination!
success: 78 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (4, 5), destination = (7, 2), deadline = 30
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0112359550562 , self.eps_freq:  89.0 

Environment.act(): Primary agent has reached destination!
success: 79 / 89
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (8, 3), destination = (3, 1), deadline = 35
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

Environment.act(): Primary agent has reached destination!
success: 80 / 90
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (3, 2), destination = (7, 1), deadline = 25
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.010989010989 , self.eps_freq:  91.0 

Environment.act(): Primary agent has reached destination!
success: 81 / 91
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (8, 3), destination = (4, 4), deadline = 25
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

Environment.act(): Primary agent has reached destination!
success: 82 / 92
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (4, 2), destination = (2, 4), deadline = 20
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.010752688172 , self.eps_freq:  93.0 

Environment.act(): Primary agent has reached destination!
success: 83 / 93
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (1, 6), destination = (7, 3), deadline = 45
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

Environment.act(): Primary agent has reached destination!
success: 84 / 94
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (1, 3), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0105263157895 , self.eps_freq:  95.0 

Environment.act(): Primary agent has reached destination!
success: 85 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (6, 1), destination = (1, 5), deadline = 45
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

Environment.act(): Primary agent has reached destination!
success: 86 / 96
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (6, 3), destination = (2, 2), deadline = 25
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0103092783505 , self.eps_freq:  97.0 

Environment.act(): Primary agent has reached destination!
success: 87 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (5, 3), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

Environment.act(): Primary agent has reached destination!
success: 88 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (2, 5), destination = (5, 6), deadline = 20
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.010101010101 , self.eps_freq:  99.0 

Environment.act(): Primary agent has reached destination!
success: 89 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (3, 4), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.01 , self.eps_freq:  100.0 

Environment.act(): Primary agent has reached destination!
success: 90 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00870
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03448
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.14982
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01389
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.11585
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.17424
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04328
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05660
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02857
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.82288
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01389
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01449
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.30420
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07217
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01818
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.24273
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.43393
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.31905
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.29527
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03008
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.77194
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01282
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.01514
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05556
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01333
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.59266
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.81033
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.05127
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.58008
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04734
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06667
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07163
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.84497
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99409
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03448
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.17617
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.04322
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05309
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.22779
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01786
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.59300
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 3.60680
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.55104
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.99984
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.16469
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.52763
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.10939
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.10515
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.05076
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.05596
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.52465
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 3.39543
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.53575
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.52540
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.24699
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.57263
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.06572
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.98734
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: -0.16632
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.55167
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.00313
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 3.66064
--------------------------------------------------------------------------------
updated cells:  62 , self.total_cell_count: 2048 , updated_func_counter: 1667
self.alpha: 0.3 self.gamma: 0.05 , self.epsilon: 0.2 , success: 90
________________________________________________________________________________
gma = 0.05
eps = 0.1
alp = 0.3
epsilon:  0.1
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (4, 3), destination = (2, 1), deadline = 20
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.5 , action:  right , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 1 / 1
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (1, 5), destination = (8, 2), deadline = 50
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  right , deadline: 48
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 44
Environment.act(): Primary agent has reached destination!
success: 2 / 2
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (1, 5), destination = (7, 6), deadline = 35
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 30
annealing now. self.epsilon: 0.166666666667 , action:  left , deadline: 24
annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 18
annealing now. self.epsilon: 0.166666666667 , action:  left , deadline: 12
success: 2 / 3
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (5, 2), destination = (1, 6), deadline = 40
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  forward , deadline: 40
annealing now. self.epsilon: 0.125 , action:  left , deadline: 32
Environment.act(): Primary agent has reached destination!
success: 3 / 4
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (6, 1), destination = (4, 6), deadline = 35
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.1 , action:  right , deadline: 20
success: 3 / 5
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (5, 5), destination = (2, 6), deadline = 20
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

Environment.act(): Primary agent has reached destination!
success: 4 / 6
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (4, 3), destination = (8, 3), deadline = 20
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 5 / 7
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (1, 3), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 6 / 8
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (1, 2), destination = (5, 2), deadline = 20
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 7 / 9
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (5, 5), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.05 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 8 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (1, 1), destination = (2, 6), deadline = 30
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 9 / 11
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (3, 3), destination = (2, 6), deadline = 20
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 10 / 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (2, 6), destination = (4, 3), deadline = 25
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 11 / 13
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (3, 5), destination = (6, 1), deadline = 35
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 12 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (7, 2), destination = (5, 6), deadline = 30
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 13 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (7, 4), destination = (2, 5), deadline = 30
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 14 / 16
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (5, 6), destination = (4, 1), deadline = 30
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 15 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (8, 6), destination = (5, 2), deadline = 35
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 16 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (2, 3), destination = (8, 2), deadline = 35
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 17 / 19
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (3, 3), destination = (2, 6), deadline = 20
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 18 / 20
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (4, 5), destination = (1, 1), deadline = 35
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

Environment.act(): Primary agent has reached destination!
success: 19 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (6, 6), destination = (3, 1), deadline = 40
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

Environment.act(): Primary agent has reached destination!
success: 20 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (2, 1), destination = (2, 5), deadline = 20
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

Environment.act(): Primary agent has reached destination!
success: 21 / 23
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (2, 4), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

Environment.act(): Primary agent has reached destination!
success: 22 / 24
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (7, 1), destination = (5, 5), deadline = 30
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.02 , self.eps_freq:  50.0 

Environment.act(): Primary agent has reached destination!
success: 23 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (8, 3), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (8, 5), destination = (1, 4), deadline = 40
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (7, 2), destination = (3, 5), deadline = 35
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (8, 6), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (8, 1), destination = (4, 2), deadline = 25
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 30
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (2, 2), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (6, 5), destination = (1, 3), deadline = 35
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (4, 6), destination = (7, 1), deadline = 40
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 33
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (3, 5), destination = (1, 1), deadline = 30
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

success: 31 / 34
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (1, 5), destination = (7, 1), deadline = 50
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 35
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (1, 3), destination = (8, 3), deadline = 35
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 36
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (1, 4), destination = (4, 1), deadline = 30
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 37
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (7, 1), destination = (5, 4), deadline = 25
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

Environment.act(): Primary agent has reached destination!
success: 35 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (6, 3), destination = (3, 6), deadline = 30
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (7, 2), destination = (8, 5), deadline = 20
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

success: 36 / 40
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (3, 4), destination = (7, 1), deadline = 35
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 41
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (8, 3), destination = (1, 1), deadline = 45
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 42
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (5, 5), destination = (1, 1), deadline = 40
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (8, 5), destination = (7, 2), deadline = 20
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 44
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (5, 1), destination = (1, 2), deadline = 25
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (1, 3), destination = (4, 6), deadline = 30
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

success: 41 / 46
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (1, 4), destination = (3, 6), deadline = 20
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 47
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (6, 2), destination = (1, 3), deadline = 30
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

success: 42 / 48
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (5, 3), destination = (7, 6), deadline = 25
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (3, 3), destination = (6, 4), deadline = 20
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.01 , self.eps_freq:  100.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (5, 1), destination = (2, 4), deadline = 30
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.00980392156863 , self.eps_freq:  102.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (3, 6), destination = (8, 2), deadline = 45
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.00961538461538 , self.eps_freq:  104.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 52
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (4, 6), destination = (1, 3), deadline = 30
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.00943396226415 , self.eps_freq:  106.0 

Environment.act(): Primary agent has reached destination!
success: 47 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (4, 3), destination = (8, 4), deadline = 25
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.00925925925926 , self.eps_freq:  108.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (8, 1), destination = (1, 1), deadline = 35
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.00909090909091 , self.eps_freq:  110.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (7, 6), destination = (4, 4), deadline = 25
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.00892857142857 , self.eps_freq:  112.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (6, 3), destination = (2, 4), deadline = 25
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.00877192982456 , self.eps_freq:  114.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 57
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (8, 5), destination = (2, 5), deadline = 30
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.00862068965517 , self.eps_freq:  116.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 58
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (3, 3), destination = (7, 1), deadline = 30
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.00847457627119 , self.eps_freq:  118.0 

Environment.act(): Primary agent has reached destination!
success: 53 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (4, 3), destination = (7, 6), deadline = 30
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.00833333333333 , self.eps_freq:  120.0 

Environment.act(): Primary agent has reached destination!
success: 54 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (6, 4), destination = (2, 6), deadline = 30
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.00819672131148 , self.eps_freq:  122.0 

Environment.act(): Primary agent has reached destination!
success: 55 / 61
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (1, 1), destination = (7, 3), deadline = 40
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.00806451612903 , self.eps_freq:  124.0 

success: 55 / 62
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (7, 1), destination = (1, 6), deadline = 55
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.00793650793651 , self.eps_freq:  126.0 

success: 55 / 63
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (6, 2), destination = (1, 3), deadline = 30
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0078125 , self.eps_freq:  128.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (6, 2), destination = (1, 2), deadline = 25
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.00769230769231 , self.eps_freq:  130.0 

Environment.act(): Primary agent has reached destination!
success: 57 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (7, 4), destination = (8, 1), deadline = 20
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00757575757576 , self.eps_freq:  132.0 

Environment.act(): Primary agent has reached destination!
success: 58 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (3, 1), destination = (5, 6), deadline = 35
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.00746268656716 , self.eps_freq:  134.0 

Environment.act(): Primary agent has reached destination!
success: 59 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (5, 5), destination = (2, 3), deadline = 25
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.00735294117647 , self.eps_freq:  136.0 

Environment.act(): Primary agent has reached destination!
success: 60 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (4, 3), destination = (8, 2), deadline = 25
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.00724637681159 , self.eps_freq:  138.0 

Environment.act(): Primary agent has reached destination!
success: 61 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (8, 5), destination = (6, 1), deadline = 30
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.00714285714286 , self.eps_freq:  140.0 

Environment.act(): Primary agent has reached destination!
success: 62 / 70
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (4, 6), destination = (7, 2), deadline = 35
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.00704225352113 , self.eps_freq:  142.0 

Environment.act(): Primary agent has reached destination!
success: 63 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (4, 6), destination = (1, 5), deadline = 20
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.00694444444444 , self.eps_freq:  144.0 

Environment.act(): Primary agent has reached destination!
success: 64 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (5, 5), destination = (2, 3), deadline = 25
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.00684931506849 , self.eps_freq:  146.0 

success: 64 / 73
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (1, 3), destination = (5, 4), deadline = 25
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.00675675675676 , self.eps_freq:  148.0 

Environment.act(): Primary agent has reached destination!
success: 65 / 74
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (5, 2), destination = (3, 4), deadline = 20
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.00666666666667 , self.eps_freq:  150.0 

Environment.act(): Primary agent has reached destination!
success: 66 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (1, 1), destination = (7, 1), deadline = 30
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.00657894736842 , self.eps_freq:  152.0 

Environment.act(): Primary agent has reached destination!
success: 67 / 76
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (5, 6), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.00649350649351 , self.eps_freq:  154.0 

Environment.act(): Primary agent has reached destination!
success: 68 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (5, 5), destination = (3, 3), deadline = 20
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.00641025641026 , self.eps_freq:  156.0 

Environment.act(): Primary agent has reached destination!
success: 69 / 78
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (6, 1), destination = (4, 4), deadline = 25
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.00632911392405 , self.eps_freq:  158.0 

Environment.act(): Primary agent has reached destination!
success: 70 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (4, 1), destination = (1, 3), deadline = 25
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.00625 , self.eps_freq:  160.0 

Environment.act(): Primary agent has reached destination!
success: 71 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (4, 6), destination = (1, 1), deadline = 40
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.00617283950617 , self.eps_freq:  162.0 

Environment.act(): Primary agent has reached destination!
success: 72 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (5, 1), destination = (7, 6), deadline = 35
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.00609756097561 , self.eps_freq:  164.0 

Environment.act(): Primary agent has reached destination!
success: 73 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (3, 4), destination = (7, 3), deadline = 25
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.00602409638554 , self.eps_freq:  166.0 

Environment.act(): Primary agent has reached destination!
success: 74 / 83
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (3, 6), destination = (7, 6), deadline = 20
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.00595238095238 , self.eps_freq:  168.0 

Environment.act(): Primary agent has reached destination!
success: 75 / 84
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (5, 3), destination = (8, 4), deadline = 20
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.00588235294118 , self.eps_freq:  170.0 

Environment.act(): Primary agent has reached destination!
success: 76 / 85
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (7, 4), destination = (3, 6), deadline = 30
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.00581395348837 , self.eps_freq:  172.0 

success: 76 / 86
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (2, 1), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.00574712643678 , self.eps_freq:  174.0 

Environment.act(): Primary agent has reached destination!
success: 77 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (5, 1), destination = (1, 4), deadline = 35
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.00568181818182 , self.eps_freq:  176.0 

Environment.act(): Primary agent has reached destination!
success: 78 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (7, 1), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.00561797752809 , self.eps_freq:  178.0 

Environment.act(): Primary agent has reached destination!
success: 79 / 89
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (3, 5), destination = (8, 5), deadline = 25
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.00555555555556 , self.eps_freq:  180.0 

Environment.act(): Primary agent has reached destination!
success: 80 / 90
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (3, 3), destination = (7, 5), deadline = 30
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.00549450549451 , self.eps_freq:  182.0 

Environment.act(): Primary agent has reached destination!
success: 81 / 91
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (2, 2), destination = (6, 1), deadline = 25
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0054347826087 , self.eps_freq:  184.0 

Environment.act(): Primary agent has reached destination!
success: 82 / 92
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (6, 2), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.00537634408602 , self.eps_freq:  186.0 

success: 82 / 93
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (4, 3), destination = (8, 5), deadline = 30
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.00531914893617 , self.eps_freq:  188.0 

Environment.act(): Primary agent has reached destination!
success: 83 / 94
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (7, 1), destination = (4, 3), deadline = 25
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.00526315789474 , self.eps_freq:  190.0 

Environment.act(): Primary agent has reached destination!
success: 84 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (4, 5), destination = (8, 3), deadline = 30
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.00520833333333 , self.eps_freq:  192.0 

Environment.act(): Primary agent has reached destination!
success: 85 / 96
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (8, 1), destination = (3, 1), deadline = 25
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.00515463917526 , self.eps_freq:  194.0 

Environment.act(): Primary agent has reached destination!
success: 86 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (8, 4), destination = (3, 3), deadline = 30
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.00510204081633 , self.eps_freq:  197.0 

Environment.act(): Primary agent has reached destination!
success: 87 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (7, 3), destination = (1, 1), deadline = 40
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.00505050505051 , self.eps_freq:  198.0 

Environment.act(): Primary agent has reached destination!
success: 88 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (1, 4), destination = (8, 6), deadline = 45
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.005 , self.eps_freq:  200.0 

Environment.act(): Primary agent has reached destination!
success: 89 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99594
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05878
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.14542
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02857
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01538
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07206
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01000
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.21061
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01429
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.00459
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02941
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.36260
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.16626
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.28148
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.65621
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10954
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.74192
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04791
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01639
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01010
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01852
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.01140
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04301
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.01264
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02931
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01235
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12708
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.20000
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03158
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03158
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.01317
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05556
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01471
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.43828
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05747
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02073
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.20459
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01136
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.48541
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.98750
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 3.93210
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.20761
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.91529
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.25000
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.33328
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: -0.32969
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 3.75575
--------------------------------------------------------------------------------
updated cells:  47 , self.total_cell_count: 2048 , updated_func_counter: 1730
self.alpha: 0.3 self.gamma: 0.05 , self.epsilon: 0.1 , success: 89
________________________________________________________________________________
gma = 0.1
eps = 0.5
alp = 0.3
epsilon:  0.5
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (8, 4), destination = (4, 3), deadline = 25
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 2.5 , self.eps_freq:  1.0 

annealing now. self.epsilon: 2.5 , action:  left , deadline: 25
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 24
annealing now. self.epsilon: 2.5 , action:  None , deadline: 23
annealing now. self.epsilon: 2.5 , action:  left , deadline: 22
annealing now. self.epsilon: 2.5 , action:  right , deadline: 21
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 20
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 19
annealing now. self.epsilon: 2.5 , action:  right , deadline: 18
annealing now. self.epsilon: 2.5 , action:  None , deadline: 17
annealing now. self.epsilon: 2.5 , action:  left , deadline: 16
annealing now. self.epsilon: 2.5 , action:  None , deadline: 15
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 14
annealing now. self.epsilon: 2.5 , action:  None , deadline: 13
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 12
annealing now. self.epsilon: 2.5 , action:  right , deadline: 11
annealing now. self.epsilon: 2.5 , action:  right , deadline: 10
annealing now. self.epsilon: 2.5 , action:  left , deadline: 9
annealing now. self.epsilon: 2.5 , action:  None , deadline: 8
annealing now. self.epsilon: 2.5 , action:  None , deadline: 7
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 6
annealing now. self.epsilon: 2.5 , action:  right , deadline: 5
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 4
annealing now. self.epsilon: 2.5 , action:  right , deadline: 3
annealing now. self.epsilon: 2.5 , action:  left , deadline: 2
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (4, 5), destination = (8, 4), deadline = 25
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 1.25 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.25 , action:  forward , deadline: 25
annealing now. self.epsilon: 1.25 , action:  None , deadline: 24
annealing now. self.epsilon: 1.25 , action:  None , deadline: 23
annealing now. self.epsilon: 1.25 , action:  right , deadline: 22
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 21
annealing now. self.epsilon: 1.25 , action:  None , deadline: 20
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 19
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 18
annealing now. self.epsilon: 1.25 , action:  left , deadline: 17
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 16
annealing now. self.epsilon: 1.25 , action:  right , deadline: 15
annealing now. self.epsilon: 1.25 , action:  None , deadline: 14
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 13
annealing now. self.epsilon: 1.25 , action:  left , deadline: 12
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 11
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 10
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 9
annealing now. self.epsilon: 1.25 , action:  left , deadline: 8
annealing now. self.epsilon: 1.25 , action:  right , deadline: 7
annealing now. self.epsilon: 1.25 , action:  left , deadline: 6
annealing now. self.epsilon: 1.25 , action:  right , deadline: 5
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 4
annealing now. self.epsilon: 1.25 , action:  right , deadline: 3
annealing now. self.epsilon: 1.25 , action:  left , deadline: 2
success: 0 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (8, 1), destination = (3, 5), deadline = 45
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.833333333333 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 44
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 42
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 40
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 38
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 36
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 34
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 32
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 30
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 28
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 26
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 22
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 20
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 18
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 16
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 14
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 12
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 10
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 8
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 6
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 4
success: 0 / 3
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (3, 6), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.625 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.625 , action:  right , deadline: 20
annealing now. self.epsilon: 0.625 , action:  right , deadline: 18
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.625 , action:  left , deadline: 14
annealing now. self.epsilon: 0.625 , action:  right , deadline: 12
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 10
annealing now. self.epsilon: 0.625 , action:  left , deadline: 8
annealing now. self.epsilon: 0.625 , action:  left , deadline: 6
annealing now. self.epsilon: 0.625 , action:  right , deadline: 4
success: 0 / 4
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (7, 6), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  right , deadline: 20
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.5 , action:  None , deadline: 16
annealing now. self.epsilon: 0.5 , action:  left , deadline: 14
annealing now. self.epsilon: 0.5 , action:  None , deadline: 12
annealing now. self.epsilon: 0.5 , action:  right , deadline: 10
annealing now. self.epsilon: 0.5 , action:  None , deadline: 8
annealing now. self.epsilon: 0.5 , action:  None , deadline: 6
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 4
success: 0 / 5
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (7, 1), destination = (7, 6), deadline = 25
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.416666666667 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.416666666667 , action:  right , deadline: 24
annealing now. self.epsilon: 0.416666666667 , action:  forward , deadline: 21
annealing now. self.epsilon: 0.416666666667 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.416666666667 , action:  None , deadline: 15
annealing now. self.epsilon: 0.416666666667 , action:  None , deadline: 12
annealing now. self.epsilon: 0.416666666667 , action:  left , deadline: 9
annealing now. self.epsilon: 0.416666666667 , action:  left , deadline: 6
success: 0 / 6
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (8, 1), destination = (2, 2), deadline = 35
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.357142857143 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 33
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 30
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 27
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 24
annealing now. self.epsilon: 0.357142857143 , action:  forward , deadline: 21
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 18
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 15
annealing now. self.epsilon: 0.357142857143 , action:  forward , deadline: 12
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 9
annealing now. self.epsilon: 0.357142857143 , action:  forward , deadline: 6
success: 0 / 7
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (3, 5), destination = (8, 5), deadline = 25
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.3125 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.3125 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.3125 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.3125 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.3125 , action:  left , deadline: 12
annealing now. self.epsilon: 0.3125 , action:  left , deadline: 8
success: 0 / 8
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (1, 3), destination = (5, 6), deadline = 35
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.277777777778 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.277777777778 , action:  forward , deadline: 32
annealing now. self.epsilon: 0.277777777778 , action:  right , deadline: 28
annealing now. self.epsilon: 0.277777777778 , action:  left , deadline: 24
annealing now. self.epsilon: 0.277777777778 , action:  left , deadline: 20
annealing now. self.epsilon: 0.277777777778 , action:  right , deadline: 16
annealing now. self.epsilon: 0.277777777778 , action:  forward , deadline: 12
annealing now. self.epsilon: 0.277777777778 , action:  None , deadline: 8
success: 0 / 9
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (3, 4), destination = (5, 6), deadline = 20
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  left , deadline: 20
annealing now. self.epsilon: 0.25 , action:  None , deadline: 16
annealing now. self.epsilon: 0.25 , action:  None , deadline: 12
annealing now. self.epsilon: 0.25 , action:  right , deadline: 8
Environment.act(): Primary agent has reached destination!
success: 1 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (2, 2), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.227272727273 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.227272727273 , action:  right , deadline: 25
annealing now. self.epsilon: 0.227272727273 , action:  None , deadline: 20
annealing now. self.epsilon: 0.227272727273 , action:  left , deadline: 15
annealing now. self.epsilon: 0.227272727273 , action:  None , deadline: 10
success: 1 / 11
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (8, 5), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.208333333333 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.208333333333 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.208333333333 , action:  forward , deadline: 15
annealing now. self.epsilon: 0.208333333333 , action:  None , deadline: 10
success: 1 / 12
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (3, 3), destination = (7, 4), deadline = 25
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.192307692308 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.192307692308 , action:  right , deadline: 24
annealing now. self.epsilon: 0.192307692308 , action:  left , deadline: 18
annealing now. self.epsilon: 0.192307692308 , action:  forward , deadline: 12
success: 1 / 13
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (6, 1), destination = (2, 2), deadline = 25
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.178571428571 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.178571428571 , action:  right , deadline: 24
annealing now. self.epsilon: 0.178571428571 , action:  left , deadline: 18
annealing now. self.epsilon: 0.178571428571 , action:  left , deadline: 12
success: 1 / 14
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (7, 4), destination = (1, 1), deadline = 45
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 42
annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 36
annealing now. self.epsilon: 0.166666666667 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.166666666667 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 2 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (3, 2), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.15625 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.15625 , action:  right , deadline: 28
annealing now. self.epsilon: 0.15625 , action:  None , deadline: 21
annealing now. self.epsilon: 0.15625 , action:  None , deadline: 14
Environment.act(): Primary agent has reached destination!
success: 3 / 16
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (1, 2), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.147058823529 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.147058823529 , action:  left , deadline: 21
annealing now. self.epsilon: 0.147058823529 , action:  None , deadline: 14
Environment.act(): Primary agent has reached destination!
success: 4 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (3, 6), destination = (5, 1), deadline = 35
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.138888888889 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.138888888889 , action:  None , deadline: 32
annealing now. self.epsilon: 0.138888888889 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.138888888889 , action:  left , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 5 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (8, 1), destination = (3, 4), deadline = 40
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.131578947368 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.131578947368 , action:  forward , deadline: 40
annealing now. self.epsilon: 0.131578947368 , action:  left , deadline: 32
annealing now. self.epsilon: 0.131578947368 , action:  None , deadline: 24
annealing now. self.epsilon: 0.131578947368 , action:  forward , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 6 / 19
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (8, 5), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  None , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 7 / 20
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (5, 2), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.119047619048 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.119047619048 , action:  None , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 8 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (2, 1), destination = (8, 2), deadline = 35
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.113636363636 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.113636363636 , action:  forward , deadline: 27
Environment.act(): Primary agent has reached destination!
success: 9 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (2, 4), destination = (7, 1), deadline = 40
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.108695652174 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.108695652174 , action:  left , deadline: 40
annealing now. self.epsilon: 0.108695652174 , action:  left , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 10 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (3, 3), destination = (8, 6), deadline = 40
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.104166666667 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.104166666667 , action:  None , deadline: 40
annealing now. self.epsilon: 0.104166666667 , action:  right , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 11 / 24
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (1, 3), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  right , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 12 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (1, 2), destination = (1, 6), deadline = 20
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0961538461538 , self.eps_freq:  11.0 

Environment.act(): Primary agent has reached destination!
success: 13 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (6, 5), destination = (8, 1), deadline = 30
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0925925925926 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0925925925926 , action:  None , deadline: 22
Environment.act(): Primary agent has reached destination!
success: 14 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (1, 2), destination = (1, 6), deadline = 20
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0892857142857 , self.eps_freq:  12.0 

Environment.act(): Primary agent has reached destination!
success: 15 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (2, 4), destination = (3, 1), deadline = 20
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0862068965517 , self.eps_freq:  12.0 

Environment.act(): Primary agent has reached destination!
success: 16 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (7, 5), destination = (2, 2), deadline = 40
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  forward , deadline: 36
annealing now. self.epsilon: 0.0833333333333 , action:  left , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 17 / 30
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (6, 3), destination = (8, 6), deadline = 25
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0806451612903 , self.eps_freq:  13.0 

Environment.act(): Primary agent has reached destination!
success: 18 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (7, 3), destination = (1, 3), deadline = 30
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.078125 , self.eps_freq:  13.0 

annealing now. self.epsilon: 0.078125 , action:  None , deadline: 26
Environment.act(): Primary agent has reached destination!
success: 19 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (1, 2), destination = (5, 3), deadline = 25
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0757575757576 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 20 / 33
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (6, 1), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0735294117647 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 21 / 34
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (8, 6), destination = (7, 1), deadline = 30
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0714285714286 , action:  right , deadline: 28
Environment.act(): Primary agent has reached destination!
success: 22 / 35
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (3, 4), destination = (1, 6), deadline = 20
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0694444444444 , self.eps_freq:  15.0 

Environment.act(): Primary agent has reached destination!
success: 23 / 36
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (8, 1), destination = (4, 4), deadline = 35
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0675675675676 , self.eps_freq:  15.0 

annealing now. self.epsilon: 0.0675675675676 , action:  None , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 24 / 37
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (6, 6), destination = (5, 2), deadline = 25
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0657894736842 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (6, 5), destination = (3, 3), deadline = 25
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0641025641026 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (3, 2), destination = (6, 4), deadline = 25
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 40
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (6, 2), destination = (5, 6), deadline = 25
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0609756097561 , self.eps_freq:  17.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 41
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (1, 3), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0595238095238 , self.eps_freq:  17.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 42
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (3, 2), destination = (7, 6), deadline = 40
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0581395348837 , self.eps_freq:  18.0 

annealing now. self.epsilon: 0.0581395348837 , action:  right , deadline: 36
Environment.act(): Primary agent has reached destination!
success: 30 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (7, 5), destination = (3, 5), deadline = 20
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0568181818182 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 44
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (2, 4), destination = (6, 2), deadline = 30
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (1, 4), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.054347826087 , self.eps_freq:  19.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 46
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (7, 5), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0531914893617 , self.eps_freq:  19.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 47
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (3, 3), destination = (7, 5), deadline = 30
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0520833333333 , self.eps_freq:  20.0 

success: 34 / 48
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (2, 2), destination = (5, 5), deadline = 30
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0510204081633 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 35 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (6, 5), destination = (1, 1), deadline = 45
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.05 , self.eps_freq:  20.0 

annealing now. self.epsilon: 0.05 , action:  right , deadline: 40
Environment.act(): Primary agent has reached destination!
success: 36 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (1, 5), destination = (3, 2), deadline = 25
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0490196078431 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (1, 4), destination = (4, 1), deadline = 30
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0480769230769 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 52
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (2, 4), destination = (4, 6), deadline = 20
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0471698113208 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (4, 5), destination = (1, 6), deadline = 20
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0462962962963 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (6, 6), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (8, 5), destination = (5, 3), deadline = 25
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0446428571429 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (1, 6), destination = (7, 2), deadline = 50
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0438596491228 , self.eps_freq:  23.0 

annealing now. self.epsilon: 0.0438596491228 , action:  right , deadline: 46
Environment.act(): Primary agent has reached destination!
success: 43 / 57
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (5, 2), destination = (1, 2), deadline = 20
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0431034482759 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 58
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (3, 4), destination = (4, 1), deadline = 20
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0423728813559 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (7, 5), destination = (4, 3), deadline = 25
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (4, 2), destination = (7, 5), deadline = 30
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0409836065574 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 47 / 61
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (6, 6), destination = (3, 2), deadline = 35
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0403225806452 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 62
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (6, 1), destination = (2, 4), deadline = 35
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0396825396825 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (2, 4), destination = (4, 6), deadline = 20
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0390625 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (5, 5), destination = (8, 1), deadline = 35
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (6, 6), destination = (5, 2), deadline = 25
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0378787878788 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (6, 2), destination = (3, 1), deadline = 20
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0373134328358 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 53 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (8, 1), destination = (8, 6), deadline = 25
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0367647058824 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 54 / 68
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (8, 6), destination = (2, 1), deadline = 55
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.036231884058 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 55 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (5, 1), destination = (5, 6), deadline = 25
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 70
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (7, 1), destination = (8, 5), deadline = 25
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0352112676056 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 57 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (5, 1), destination = (2, 4), deadline = 30
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0347222222222 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 58 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (1, 2), destination = (8, 6), deadline = 55
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0342465753425 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 59 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (7, 2), destination = (4, 4), deadline = 25
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0337837837838 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 60 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (6, 6), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 61 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (8, 1), destination = (7, 4), deadline = 20
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0328947368421 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 62 / 76
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (2, 6), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0324675324675 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 63 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (6, 3), destination = (2, 5), deadline = 30
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0320512820513 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 64 / 78
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (4, 1), destination = (8, 3), deadline = 30
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0316455696203 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 65 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (1, 3), destination = (5, 2), deadline = 25
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 66 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (7, 5), destination = (3, 5), deadline = 20
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0308641975309 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 67 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (3, 2), destination = (6, 4), deadline = 25
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.030487804878 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 68 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (2, 3), destination = (8, 4), deadline = 35
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0301204819277 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 69 / 83
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 5), deadline = 30
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0297619047619 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 70 / 84
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (5, 4), destination = (8, 5), deadline = 20
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 71 / 85
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (8, 4), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0290697674419 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 72 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (2, 4), destination = (8, 6), deadline = 40
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0287356321839 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 73 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (7, 6), destination = (4, 1), deadline = 40
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0284090909091 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 74 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (8, 1), destination = (6, 6), deadline = 35
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0280898876404 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 75 / 89
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (5, 5), destination = (1, 3), deadline = 30
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 76 / 90
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (5, 4), destination = (1, 1), deadline = 35
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0274725274725 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 77 / 91
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (8, 2), destination = (1, 6), deadline = 55
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0271739130435 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 78 / 92
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (8, 2), destination = (1, 1), deadline = 40
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0268817204301 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 79 / 93
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (4, 2), destination = (7, 4), deadline = 25
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0265957446809 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 80 / 94
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (8, 6), destination = (7, 2), deadline = 25
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 81 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (2, 6), destination = (1, 1), deadline = 30
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0260416666667 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 82 / 96
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (8, 5), destination = (5, 3), deadline = 25
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0257731958763 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 83 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (1, 2), destination = (5, 3), deadline = 25
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0255102040816 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 84 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (1, 3), destination = (3, 1), deadline = 20
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0252525252525 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 85 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (6, 5), destination = (7, 2), deadline = 20
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 86 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99245
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12563
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03763
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12655
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.11111
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.21643
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04398
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.25386
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.08779
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.26674
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.19351
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10810
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.24148
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.33333
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04111
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07920
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12500
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.97480
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02326
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05556
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01887
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.36906
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.27175
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.06594
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.14281
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.24552
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01149
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02439
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.59728
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.98715
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01562
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03180
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02778
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.34879
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.32127
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03449
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06781
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01587
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.93357
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 4.13277
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.70816
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.47305
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.97503
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.52165
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.11374
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.21431
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.01127
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.55404
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.24364
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50263
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.54959
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.65606
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.41950
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.52034
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.51792
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.86349
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.51720
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.51250
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.98720
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: -0.33056
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.53179
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.00934
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 3.21874
--------------------------------------------------------------------------------
updated cells:  63 , self.total_cell_count: 2048 , updated_func_counter: 1548
self.alpha: 0.3 self.gamma: 0.1 , self.epsilon: 0.5 , success: 86
________________________________________________________________________________
gma = 0.1
eps = 0.2
alp = 0.3
epsilon:  0.2
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (7, 4), destination = (2, 1), deadline = 40
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 1.0 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.0 , action:  right , deadline: 40
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 39
annealing now. self.epsilon: 1.0 , action:  right , deadline: 38
annealing now. self.epsilon: 1.0 , action:  None , deadline: 37
annealing now. self.epsilon: 1.0 , action:  right , deadline: 36
annealing now. self.epsilon: 1.0 , action:  None , deadline: 35
annealing now. self.epsilon: 1.0 , action:  right , deadline: 34
annealing now. self.epsilon: 1.0 , action:  right , deadline: 33
annealing now. self.epsilon: 1.0 , action:  None , deadline: 32
annealing now. self.epsilon: 1.0 , action:  None , deadline: 31
annealing now. self.epsilon: 1.0 , action:  left , deadline: 30
annealing now. self.epsilon: 1.0 , action:  left , deadline: 29
annealing now. self.epsilon: 1.0 , action:  left , deadline: 28
annealing now. self.epsilon: 1.0 , action:  None , deadline: 27
annealing now. self.epsilon: 1.0 , action:  None , deadline: 26
annealing now. self.epsilon: 1.0 , action:  right , deadline: 25
annealing now. self.epsilon: 1.0 , action:  None , deadline: 24
annealing now. self.epsilon: 1.0 , action:  None , deadline: 23
annealing now. self.epsilon: 1.0 , action:  left , deadline: 22
annealing now. self.epsilon: 1.0 , action:  left , deadline: 21
annealing now. self.epsilon: 1.0 , action:  right , deadline: 20
annealing now. self.epsilon: 1.0 , action:  None , deadline: 19
annealing now. self.epsilon: 1.0 , action:  None , deadline: 18
annealing now. self.epsilon: 1.0 , action:  left , deadline: 17
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 16
annealing now. self.epsilon: 1.0 , action:  right , deadline: 15
annealing now. self.epsilon: 1.0 , action:  None , deadline: 14
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 13
annealing now. self.epsilon: 1.0 , action:  None , deadline: 12
annealing now. self.epsilon: 1.0 , action:  left , deadline: 11
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 10
annealing now. self.epsilon: 1.0 , action:  left , deadline: 9
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 8
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 7
annealing now. self.epsilon: 1.0 , action:  right , deadline: 6
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 5
annealing now. self.epsilon: 1.0 , action:  right , deadline: 4
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 3
annealing now. self.epsilon: 1.0 , action:  None , deadline: 2
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (2, 2), destination = (8, 5), deadline = 45
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  right , deadline: 44
annealing now. self.epsilon: 0.5 , action:  right , deadline: 42
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 40
annealing now. self.epsilon: 0.5 , action:  left , deadline: 38
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 36
annealing now. self.epsilon: 0.5 , action:  right , deadline: 34
annealing now. self.epsilon: 0.5 , action:  right , deadline: 32
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.5 , action:  left , deadline: 28
annealing now. self.epsilon: 0.5 , action:  right , deadline: 26
annealing now. self.epsilon: 0.5 , action:  None , deadline: 24
annealing now. self.epsilon: 0.5 , action:  left , deadline: 22
Environment.act(): Primary agent has reached destination!
success: 1 / 2
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (6, 2), destination = (7, 6), deadline = 25
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.333333333333 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.333333333333 , action:  None , deadline: 24
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 21
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 18
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 15
Environment.act(): Primary agent has reached destination!
success: 2 / 3
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (4, 1), destination = (6, 5), deadline = 30
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  right , deadline: 28
annealing now. self.epsilon: 0.25 , action:  left , deadline: 24
annealing now. self.epsilon: 0.25 , action:  None , deadline: 20
annealing now. self.epsilon: 0.25 , action:  None , deadline: 16
annealing now. self.epsilon: 0.25 , action:  left , deadline: 12
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 8
success: 2 / 4
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (8, 4), destination = (3, 3), deadline = 30
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.2 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.2 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.2 , action:  left , deadline: 25
annealing now. self.epsilon: 0.2 , action:  None , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 3 / 5
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (5, 2), destination = (2, 5), deadline = 30
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 30
annealing now. self.epsilon: 0.166666666667 , action:  left , deadline: 24
annealing now. self.epsilon: 0.166666666667 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.166666666667 , action:  forward , deadline: 12
success: 3 / 6
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (2, 5), destination = (7, 6), deadline = 30
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.142857142857 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.142857142857 , action:  None , deadline: 28
annealing now. self.epsilon: 0.142857142857 , action:  right , deadline: 21
annealing now. self.epsilon: 0.142857142857 , action:  forward , deadline: 14
success: 3 / 7
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (3, 2), destination = (7, 5), deadline = 35
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  None , deadline: 32
annealing now. self.epsilon: 0.125 , action:  left , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 4 / 8
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (6, 6), destination = (2, 5), deadline = 25
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.111111111111 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.111111111111 , action:  right , deadline: 18
success: 4 / 9
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (3, 3), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  forward , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 5 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (7, 6), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0909090909091 , self.eps_freq:  11.0 

success: 5 / 11
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (1, 1), destination = (8, 2), deadline = 40
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  forward , deadline: 36
annealing now. self.epsilon: 0.0833333333333 , action:  right , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 6 / 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (4, 3), destination = (2, 5), deadline = 20
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0769230769231 , self.eps_freq:  13.0 

success: 6 / 13
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (7, 2), destination = (3, 6), deadline = 40
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0714285714286 , action:  left , deadline: 28
success: 6 / 14
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (7, 3), destination = (3, 6), deadline = 35
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0666666666667 , self.eps_freq:  15.0 

annealing now. self.epsilon: 0.0666666666667 , action:  None , deadline: 30
success: 6 / 15
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (3, 4), destination = (7, 6), deadline = 30
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 7 / 16
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (6, 2), destination = (3, 1), deadline = 20
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0588235294118 , self.eps_freq:  17.0 

Environment.act(): Primary agent has reached destination!
success: 8 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (1, 4), destination = (4, 2), deadline = 25
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

success: 8 / 18
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (7, 5), destination = (5, 2), deadline = 25
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0526315789474 , self.eps_freq:  19.0 

Environment.act(): Primary agent has reached destination!
success: 9 / 19
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (2, 6), destination = (1, 1), deadline = 30
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.05 , self.eps_freq:  20.0 

success: 9 / 20
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (6, 2), destination = (2, 3), deadline = 25
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.047619047619 , self.eps_freq:  21.0 

success: 9 / 21
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (4, 1), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 10 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (7, 3), destination = (1, 6), deadline = 45
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0434782608696 , self.eps_freq:  23.0 

success: 10 / 23
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (2, 3), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 11 / 24
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (6, 6), destination = (2, 3), deadline = 35
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.04 , self.eps_freq:  25.0 

success: 11 / 25
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (5, 1), destination = (1, 1), deadline = 20
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 12 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (7, 3), destination = (3, 3), deadline = 20
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.037037037037 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 13 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (2, 6), destination = (4, 2), deadline = 30
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

success: 13 / 28
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (2, 3), destination = (3, 6), deadline = 20
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0344827586207 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 14 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (5, 1), destination = (7, 4), deadline = 25
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

success: 14 / 30
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (4, 4), destination = (3, 1), deadline = 20
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0322580645161 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 15 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (7, 3), destination = (3, 5), deadline = 30
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

success: 15 / 32
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (1, 3), destination = (7, 1), deadline = 40
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.030303030303 , self.eps_freq:  33.0 

success: 15 / 33
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (4, 6), destination = (8, 4), deadline = 30
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

success: 15 / 34
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (2, 2), destination = (3, 6), deadline = 25
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0285714285714 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 16 / 35
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (2, 5), destination = (7, 6), deadline = 30
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

success: 16 / 36
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (5, 4), destination = (2, 3), deadline = 20
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.027027027027 , self.eps_freq:  37.0 

success: 16 / 37
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (7, 6), destination = (3, 3), deadline = 35
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

success: 16 / 38
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (6, 4), destination = (7, 1), deadline = 20
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.025641025641 , self.eps_freq:  39.0 

success: 16 / 39
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (3, 5), destination = (1, 3), deadline = 20
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 17 / 40
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (2, 4), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0243902439024 , self.eps_freq:  41.0 

success: 17 / 41
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (8, 5), destination = (4, 3), deadline = 30
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

Environment.act(): Primary agent has reached destination!
success: 18 / 42
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (4, 3), destination = (1, 2), deadline = 20
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0232558139535 , self.eps_freq:  43.0 

success: 18 / 43
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (4, 5), destination = (8, 4), deadline = 25
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

success: 18 / 44
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (6, 1), destination = (1, 2), deadline = 30
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0222222222222 , self.eps_freq:  45.0 

success: 18 / 45
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (1, 2), destination = (7, 5), deadline = 45
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

success: 18 / 46
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (7, 2), destination = (6, 5), deadline = 20
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0212765957447 , self.eps_freq:  47.0 

success: 18 / 47
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (6, 5), destination = (2, 3), deadline = 30
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

Environment.act(): Primary agent has reached destination!
success: 19 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (8, 4), destination = (3, 5), deadline = 30
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0204081632653 , self.eps_freq:  50.0 

Environment.act(): Primary agent has reached destination!
success: 20 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (6, 2), destination = (1, 6), deadline = 45
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.02 , self.eps_freq:  50.0 

success: 20 / 50
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (4, 3), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0196078431373 , self.eps_freq:  51.0 

Environment.act(): Primary agent has reached destination!
success: 21 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (4, 4), destination = (8, 3), deadline = 25
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

success: 21 / 52
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (3, 2), destination = (8, 6), deadline = 45
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0188679245283 , self.eps_freq:  53.0 

Environment.act(): Primary agent has reached destination!
success: 22 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (6, 1), destination = (1, 1), deadline = 25
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

Environment.act(): Primary agent has reached destination!
success: 23 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (3, 2), destination = (7, 2), deadline = 20
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0181818181818 , self.eps_freq:  55.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (8, 3), destination = (1, 3), deadline = 35
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (3, 4), destination = (5, 2), deadline = 20
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0175438596491 , self.eps_freq:  57.0 

success: 25 / 57
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (4, 6), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

success: 25 / 58
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (3, 2), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0169491525424 , self.eps_freq:  59.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (6, 3), destination = (1, 5), deadline = 35
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

success: 26 / 60
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (7, 5), destination = (4, 6), deadline = 20
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.016393442623 , self.eps_freq:  61.0 

success: 26 / 61
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (3, 4), destination = (8, 1), deadline = 40
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

success: 26 / 62
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (8, 2), destination = (6, 6), deadline = 30
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.015873015873 , self.eps_freq:  63.0 

success: 26 / 63
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (2, 2), destination = (3, 6), deadline = 25
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (5, 4), destination = (1, 6), deadline = 30
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0153846153846 , self.eps_freq:  65.0 

success: 27 / 65
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (2, 6), destination = (4, 3), deadline = 25
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

success: 27 / 66
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 3), deadline = 40
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0149253731343 , self.eps_freq:  67.0 

success: 27 / 67
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (1, 2), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

success: 27 / 68
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (3, 3), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0144927536232 , self.eps_freq:  69.0 

success: 27 / 69
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (8, 3), destination = (5, 2), deadline = 20
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 70
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (4, 3), destination = (1, 6), deadline = 30
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0140845070423 , self.eps_freq:  71.0 

success: 28 / 71
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (1, 6), destination = (2, 2), deadline = 25
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

success: 28 / 72
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (3, 3), destination = (6, 6), deadline = 30
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.013698630137 , self.eps_freq:  73.0 

success: 28 / 73
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (2, 2), destination = (8, 3), deadline = 35
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

success: 28 / 74
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (8, 6), destination = (2, 4), deadline = 40
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0133333333333 , self.eps_freq:  75.0 

success: 28 / 75
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (7, 2), destination = (4, 5), deadline = 30
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

success: 28 / 76
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (7, 5), destination = (3, 2), deadline = 35
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.012987012987 , self.eps_freq:  77.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (6, 6), destination = (8, 2), deadline = 30
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

success: 29 / 78
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (6, 1), destination = (2, 3), deadline = 30
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0126582278481 , self.eps_freq:  79.0 

success: 29 / 79
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (8, 4), destination = (4, 1), deadline = 35
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (1, 3), destination = (5, 1), deadline = 30
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0123456790123 , self.eps_freq:  81.0 

success: 30 / 81
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (8, 3), destination = (4, 2), deadline = 25
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (8, 4), destination = (6, 6), deadline = 20
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0120481927711 , self.eps_freq:  83.0 

success: 31 / 83
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (1, 1), destination = (2, 4), deadline = 20
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

success: 31 / 84
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (1, 2), destination = (7, 6), deadline = 50
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0117647058824 , self.eps_freq:  85.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 85
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (7, 5), destination = (4, 3), deadline = 25
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (4, 3), destination = (1, 2), deadline = 20
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0114942528736 , self.eps_freq:  87.0 

success: 33 / 87
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (4, 1), destination = (6, 5), deadline = 30
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (7, 2), destination = (3, 3), deadline = 25
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0112359550562 , self.eps_freq:  89.0 

success: 34 / 89
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (6, 3), destination = (4, 1), deadline = 20
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

Environment.act(): Primary agent has reached destination!
success: 35 / 90
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (8, 4), destination = (2, 2), deadline = 40
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.010989010989 , self.eps_freq:  91.0 

success: 35 / 91
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (6, 6), destination = (2, 3), deadline = 35
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 92
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (2, 2), destination = (6, 5), deadline = 35
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.010752688172 , self.eps_freq:  93.0 

success: 36 / 93
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (1, 3), destination = (7, 3), deadline = 30
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 94
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (2, 5), destination = (7, 1), deadline = 45
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0105263157895 , self.eps_freq:  95.0 

success: 37 / 95
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (2, 3), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

success: 37 / 96
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (3, 6), destination = (6, 3), deadline = 30
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0103092783505 , self.eps_freq:  97.0 

success: 37 / 97
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (3, 1), destination = (1, 5), deadline = 30
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

success: 37 / 98
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (5, 3), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.010101010101 , self.eps_freq:  99.0 

success: 37 / 99
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (2, 2), destination = (7, 2), deadline = 25
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.01 , self.eps_freq:  100.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00986
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02238
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01250
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02922
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01667
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.65580
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.52598
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.17546
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08127
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.19275
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05321
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01031
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.77121
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.02791
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.15780
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.06314
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04325
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.50000
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.98869
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07471
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02615
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01471
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04001
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01370
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.23406
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03604
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.31814
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.04687
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.13164
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.00278
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.22559
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07209
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.42318
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02778
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01587
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02941
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 3.15413
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.97232
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.55502
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.52903
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.98933
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.12220
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.31882
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.49996
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.05428
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.36613
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.36861
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 1.01384
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.53078
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.56228
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.93418
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.56587
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.97367
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.51250
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.98259
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.14356
--------------------------------------------------------------------------------
updated cells:  56 , self.total_cell_count: 2048 , updated_func_counter: 2398
self.alpha: 0.3 self.gamma: 0.1 , self.epsilon: 0.2 , success: 38
________________________________________________________________________________
gma = 0.1
eps = 0.1
alp = 0.3
epsilon:  0.1
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (3, 5), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.5 , action:  right , deadline: 18
annealing now. self.epsilon: 0.5 , action:  left , deadline: 16
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 14
annealing now. self.epsilon: 0.5 , action:  None , deadline: 12
annealing now. self.epsilon: 0.5 , action:  left , deadline: 10
annealing now. self.epsilon: 0.5 , action:  right , deadline: 8
annealing now. self.epsilon: 0.5 , action:  left , deadline: 6
annealing now. self.epsilon: 0.5 , action:  left , deadline: 4
Environment.act(): Primary agent has reached destination!
success: 1 / 1
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (4, 3), destination = (1, 2), deadline = 20
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  None , deadline: 20
annealing now. self.epsilon: 0.25 , action:  None , deadline: 16
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 12
annealing now. self.epsilon: 0.25 , action:  right , deadline: 8
success: 1 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (6, 4), destination = (8, 6), deadline = 20
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.166666666667 , action:  left , deadline: 12
success: 1 / 3
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (6, 5), destination = (1, 1), deadline = 45
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  right , deadline: 40
annealing now. self.epsilon: 0.125 , action:  forward , deadline: 32
annealing now. self.epsilon: 0.125 , action:  right , deadline: 24
annealing now. self.epsilon: 0.125 , action:  left , deadline: 16
success: 1 / 4
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (1, 6), destination = (8, 3), deadline = 50
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  None , deadline: 50
annealing now. self.epsilon: 0.1 , action:  None , deadline: 40
annealing now. self.epsilon: 0.1 , action:  right , deadline: 30
annealing now. self.epsilon: 0.1 , action:  left , deadline: 20
success: 1 / 5
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (2, 6), destination = (8, 6), deadline = 30
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  None , deadline: 24
success: 1 / 6
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (6, 1), destination = (2, 3), deadline = 30
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0714285714286 , action:  forward , deadline: 28
success: 1 / 7
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (3, 3), destination = (1, 1), deadline = 20
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

success: 1 / 8
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (4, 2), destination = (1, 3), deadline = 20
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

success: 1 / 9
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (8, 1), destination = (3, 6), deadline = 50
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.05 , self.eps_freq:  20.0 

annealing now. self.epsilon: 0.05 , action:  left , deadline: 40
success: 1 / 10
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (5, 3), destination = (1, 5), deadline = 30
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

success: 1 / 11
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (5, 6), destination = (4, 1), deadline = 30
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

success: 1 / 12
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (8, 6), destination = (3, 1), deadline = 50
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

success: 1 / 13
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (1, 1), destination = (5, 2), deadline = 25
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

success: 1 / 14
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (7, 6), destination = (8, 2), deadline = 25
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

success: 1 / 15
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (2, 1), destination = (8, 3), deadline = 40
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

success: 1 / 16
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (7, 2), destination = (2, 5), deadline = 40
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

success: 1 / 17
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (3, 5), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

success: 1 / 18
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (1, 6), destination = (8, 2), deadline = 55
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

success: 1 / 19
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (5, 5), destination = (1, 5), deadline = 20
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.025 , self.eps_freq:  40.0 

success: 1 / 20
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (5, 1), destination = (1, 5), deadline = 40
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

success: 1 / 21
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (2, 4), destination = (7, 2), deadline = 35
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

success: 1 / 22
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (8, 6), destination = (6, 4), deadline = 20
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

success: 1 / 23
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (6, 2), destination = (3, 6), deadline = 35
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

success: 1 / 24
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (2, 5), destination = (7, 2), deadline = 40
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.02 , self.eps_freq:  50.0 

success: 1 / 25
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (6, 6), destination = (8, 3), deadline = 25
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

success: 1 / 26
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (4, 1), destination = (7, 3), deadline = 25
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

success: 1 / 27
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (2, 5), destination = (5, 3), deadline = 25
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

success: 1 / 28
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (4, 6), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

success: 1 / 29
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (5, 4), destination = (2, 6), deadline = 25
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

success: 1 / 30
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (3, 4), destination = (7, 6), deadline = 30
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

success: 1 / 31
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (1, 4), destination = (5, 3), deadline = 25
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

success: 1 / 32
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (5, 6), destination = (1, 1), deadline = 45
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

success: 1 / 33
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (4, 3), destination = (8, 6), deadline = 35
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

success: 1 / 34
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (3, 6), destination = (8, 6), deadline = 25
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

success: 1 / 35
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (3, 2), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

success: 1 / 36
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (3, 1), destination = (4, 6), deadline = 30
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

success: 1 / 37
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (5, 3), destination = (2, 5), deadline = 25
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

success: 1 / 38
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (2, 5), destination = (7, 5), deadline = 25
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

success: 1 / 39
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (7, 3), destination = (3, 4), deadline = 25
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

success: 1 / 40
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (4, 1), destination = (8, 5), deadline = 40
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

success: 1 / 41
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (4, 6), destination = (1, 3), deadline = 30
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

success: 1 / 42
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (7, 1), destination = (5, 4), deadline = 25
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

success: 1 / 43
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (7, 6), destination = (1, 4), deadline = 40
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

success: 1 / 44
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (5, 4), destination = (1, 2), deadline = 30
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

success: 1 / 45
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (2, 6), destination = (8, 2), deadline = 50
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

success: 1 / 46
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (6, 1), destination = (1, 4), deadline = 40
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

success: 1 / 47
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (6, 3), destination = (1, 2), deadline = 30
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

success: 1 / 48
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (7, 6), destination = (3, 6), deadline = 20
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

success: 1 / 49
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (1, 5), destination = (3, 3), deadline = 20
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.01 , self.eps_freq:  100.0 

success: 1 / 50
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (8, 2), destination = (7, 5), deadline = 20
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.00980392156863 , self.eps_freq:  102.0 

success: 1 / 51
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (2, 2), destination = (4, 6), deadline = 30
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.00961538461538 , self.eps_freq:  104.0 

success: 1 / 52
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (6, 3), destination = (3, 2), deadline = 20
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.00943396226415 , self.eps_freq:  106.0 

success: 1 / 53
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (1, 2), destination = (8, 3), deadline = 40
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.00925925925926 , self.eps_freq:  108.0 

success: 1 / 54
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (2, 3), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.00909090909091 , self.eps_freq:  110.0 

success: 1 / 55
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (2, 3), destination = (7, 3), deadline = 25
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.00892857142857 , self.eps_freq:  112.0 

success: 1 / 56
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (4, 4), destination = (8, 5), deadline = 25
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.00877192982456 , self.eps_freq:  114.0 

success: 1 / 57
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (8, 6), destination = (7, 2), deadline = 25
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.00862068965517 , self.eps_freq:  116.0 

success: 1 / 58
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (6, 3), destination = (5, 6), deadline = 20
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.00847457627119 , self.eps_freq:  118.0 

success: 1 / 59
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (6, 6), destination = (8, 1), deadline = 35
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00833333333333 , self.eps_freq:  120.0 

success: 1 / 60
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (2, 1), destination = (5, 4), deadline = 30
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.00819672131148 , self.eps_freq:  122.0 

success: 1 / 61
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (4, 6), destination = (2, 4), deadline = 20
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.00806451612903 , self.eps_freq:  124.0 

success: 1 / 62
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (3, 3), destination = (1, 6), deadline = 25
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.00793650793651 , self.eps_freq:  126.0 

success: 1 / 63
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (3, 2), destination = (6, 1), deadline = 20
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0078125 , self.eps_freq:  128.0 

success: 1 / 64
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (5, 3), destination = (8, 4), deadline = 20
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.00769230769231 , self.eps_freq:  130.0 

success: 1 / 65
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (8, 2), destination = (2, 4), deadline = 40
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.00757575757576 , self.eps_freq:  132.0 

success: 1 / 66
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (8, 4), destination = (3, 5), deadline = 30
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.00746268656716 , self.eps_freq:  134.0 

success: 1 / 67
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (8, 3), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.00735294117647 , self.eps_freq:  136.0 

success: 1 / 68
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (8, 6), destination = (6, 4), deadline = 20
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.00724637681159 , self.eps_freq:  138.0 

success: 1 / 69
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (4, 1), destination = (2, 6), deadline = 35
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.00714285714286 , self.eps_freq:  140.0 

success: 1 / 70
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (7, 6), destination = (4, 1), deadline = 40
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.00704225352113 , self.eps_freq:  142.0 

success: 1 / 71
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (3, 5), destination = (5, 2), deadline = 25
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.00694444444444 , self.eps_freq:  144.0 

success: 1 / 72
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (2, 4), destination = (5, 1), deadline = 30
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.00684931506849 , self.eps_freq:  146.0 

success: 1 / 73
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (1, 4), destination = (5, 6), deadline = 30
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.00675675675676 , self.eps_freq:  148.0 

success: 1 / 74
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 2), deadline = 45
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.00666666666667 , self.eps_freq:  150.0 

success: 1 / 75
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (4, 6), destination = (3, 1), deadline = 30
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.00657894736842 , self.eps_freq:  152.0 

success: 1 / 76
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (4, 1), destination = (8, 4), deadline = 35
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.00649350649351 , self.eps_freq:  154.0 

success: 1 / 77
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (8, 3), destination = (3, 2), deadline = 30
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.00641025641026 , self.eps_freq:  156.0 

success: 1 / 78
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (8, 1), destination = (1, 4), deadline = 50
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.00632911392405 , self.eps_freq:  158.0 

success: 1 / 79
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (7, 2), destination = (2, 6), deadline = 45
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.00625 , self.eps_freq:  160.0 

success: 1 / 80
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (3, 4), destination = (7, 6), deadline = 30
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.00617283950617 , self.eps_freq:  162.0 

success: 1 / 81
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (1, 6), destination = (7, 2), deadline = 50
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.00609756097561 , self.eps_freq:  164.0 

success: 1 / 82
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (2, 1), destination = (5, 2), deadline = 20
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.00602409638554 , self.eps_freq:  166.0 

success: 1 / 83
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (3, 2), destination = (2, 6), deadline = 25
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.00595238095238 , self.eps_freq:  168.0 

success: 1 / 84
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (6, 6), destination = (3, 3), deadline = 30
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.00588235294118 , self.eps_freq:  170.0 

success: 1 / 85
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (3, 4), destination = (7, 4), deadline = 20
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.00581395348837 , self.eps_freq:  172.0 

success: 1 / 86
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (2, 6), destination = (3, 3), deadline = 20
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.00574712643678 , self.eps_freq:  174.0 

success: 1 / 87
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (2, 4), destination = (6, 2), deadline = 30
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.00568181818182 , self.eps_freq:  176.0 

success: 1 / 88
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (6, 4), destination = (1, 5), deadline = 30
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.00561797752809 , self.eps_freq:  178.0 

success: 1 / 89
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (8, 2), destination = (2, 2), deadline = 30
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.00555555555556 , self.eps_freq:  180.0 

success: 1 / 90
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (5, 4), destination = (2, 2), deadline = 25
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.00549450549451 , self.eps_freq:  182.0 

success: 1 / 91
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (5, 4), destination = (4, 1), deadline = 20
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0054347826087 , self.eps_freq:  184.0 

success: 1 / 92
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (5, 5), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.00537634408602 , self.eps_freq:  186.0 

success: 1 / 93
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (1, 5), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.00531914893617 , self.eps_freq:  188.0 

success: 1 / 94
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (5, 2), destination = (5, 6), deadline = 20
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.00526315789474 , self.eps_freq:  190.0 

success: 1 / 95
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (1, 3), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.00520833333333 , self.eps_freq:  192.0 

success: 1 / 96
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (8, 6), destination = (3, 1), deadline = 50
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.00515463917526 , self.eps_freq:  194.0 

success: 1 / 97
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (5, 2), destination = (1, 2), deadline = 20
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.00510204081633 , self.eps_freq:  197.0 

success: 1 / 98
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (2, 5), destination = (1, 2), deadline = 20
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.00505050505051 , self.eps_freq:  198.0 

success: 1 / 99
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (8, 3), destination = (2, 5), deadline = 40
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.005 , self.eps_freq:  200.0 

success: 1 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.02698
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04352
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06766
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01010
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01205
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.18198
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05882
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.68804
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01852
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.04856
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.19205
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.14987
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.13664
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.51091
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07923
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12703
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10877
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.68639
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.02988
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.20000
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01075
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08065
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01250
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.17163
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.18922
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.51319
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01031
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.04370
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05532
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.70046
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.46513
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08083
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02778
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02632
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.53293
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.98853
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01695
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01149
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.18813
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01538
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.16667
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01639
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.48740
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.50801
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.13790
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.16667
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.96156
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.50000
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.53970
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.25000
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.81118
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50000
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.13592
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.50807
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.53750
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.98619
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 2.69013
--------------------------------------------------------------------------------
updated cells:  57 , self.total_cell_count: 2048 , updated_func_counter: 3075
self.alpha: 0.3 self.gamma: 0.1 , self.epsilon: 0.1 , success: 1
________________________________________________________________________________
Environment.reset(): Primary agent could not reach destination within deadline!
