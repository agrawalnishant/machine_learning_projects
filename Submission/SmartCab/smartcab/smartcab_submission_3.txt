gma = 0.005
eps = 0.5
alp = 0.7
epsilon:  0.5
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (5, 4), destination = (6, 1), deadline = 20
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 2.5 , self.eps_freq:  1.0 

annealing now. self.epsilon: 2.5 , action:  right , deadline: 20
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 19
annealing now. self.epsilon: 2.5 , action:  None , deadline: 18
annealing now. self.epsilon: 2.5 , action:  right , deadline: 17
annealing now. self.epsilon: 2.5 , action:  right , deadline: 16
annealing now. self.epsilon: 2.5 , action:  left , deadline: 15
annealing now. self.epsilon: 2.5 , action:  left , deadline: 14
annealing now. self.epsilon: 2.5 , action:  right , deadline: 13
annealing now. self.epsilon: 2.5 , action:  left , deadline: 12
annealing now. self.epsilon: 2.5 , action:  None , deadline: 11
annealing now. self.epsilon: 2.5 , action:  right , deadline: 10
annealing now. self.epsilon: 2.5 , action:  left , deadline: 9
annealing now. self.epsilon: 2.5 , action:  None , deadline: 8
annealing now. self.epsilon: 2.5 , action:  right , deadline: 7
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 6
annealing now. self.epsilon: 2.5 , action:  left , deadline: 5
annealing now. self.epsilon: 2.5 , action:  right , deadline: 4
annealing now. self.epsilon: 2.5 , action:  None , deadline: 3
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 2
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (7, 4), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 1.25 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.25 , action:  forward , deadline: 25
annealing now. self.epsilon: 1.25 , action:  left , deadline: 24
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 23
annealing now. self.epsilon: 1.25 , action:  right , deadline: 22
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 21
annealing now. self.epsilon: 1.25 , action:  left , deadline: 20
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 19
annealing now. self.epsilon: 1.25 , action:  None , deadline: 18
annealing now. self.epsilon: 1.25 , action:  None , deadline: 17
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 16
annealing now. self.epsilon: 1.25 , action:  None , deadline: 15
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 14
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 13
annealing now. self.epsilon: 1.25 , action:  left , deadline: 12
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 11
annealing now. self.epsilon: 1.25 , action:  None , deadline: 10
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 9
annealing now. self.epsilon: 1.25 , action:  right , deadline: 8
Environment.act(): Primary agent has reached destination!
success: 1 / 2
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (3, 6), destination = (7, 5), deadline = 25
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.833333333333 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 24
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 22
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 18
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 16
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 14
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 2 / 3
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (8, 4), destination = (2, 6), deadline = 40
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.625 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.625 , action:  forward , deadline: 40
annealing now. self.epsilon: 0.625 , action:  None , deadline: 38
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 36
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 34
annealing now. self.epsilon: 0.625 , action:  right , deadline: 32
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.625 , action:  right , deadline: 28
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 26
annealing now. self.epsilon: 0.625 , action:  None , deadline: 24
annealing now. self.epsilon: 0.625 , action:  None , deadline: 22
Environment.act(): Primary agent has reached destination!
success: 3 / 4
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (2, 1), destination = (5, 5), deadline = 35
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  left , deadline: 34
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 32
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.5 , action:  right , deadline: 28
annealing now. self.epsilon: 0.5 , action:  right , deadline: 26
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 22
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 4 / 5
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (6, 6), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.416666666667 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.416666666667 , action:  right , deadline: 18
annealing now. self.epsilon: 0.416666666667 , action:  forward , deadline: 15
annealing now. self.epsilon: 0.416666666667 , action:  right , deadline: 12
annealing now. self.epsilon: 0.416666666667 , action:  right , deadline: 9
annealing now. self.epsilon: 0.416666666667 , action:  left , deadline: 6
Environment.act(): Primary agent has reached destination!
success: 5 / 6
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (7, 2), destination = (2, 6), deadline = 45
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.357142857143 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.357142857143 , action:  forward , deadline: 45
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 42
annealing now. self.epsilon: 0.357142857143 , action:  forward , deadline: 39
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 36
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 33
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 30
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 27
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 24
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 21
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 6 / 7
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (6, 6), destination = (2, 1), deadline = 45
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.3125 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.3125 , action:  None , deadline: 44
annealing now. self.epsilon: 0.3125 , action:  forward , deadline: 40
Environment.act(): Primary agent has reached destination!
success: 7 / 8
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (4, 4), destination = (1, 3), deadline = 20
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.277777777778 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.277777777778 , action:  right , deadline: 20
annealing now. self.epsilon: 0.277777777778 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.277777777778 , action:  forward , deadline: 12
annealing now. self.epsilon: 0.277777777778 , action:  right , deadline: 8
Environment.act(): Primary agent has reached destination!
success: 8 / 9
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (3, 3), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  left , deadline: 20
annealing now. self.epsilon: 0.25 , action:  left , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 9 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (2, 6), destination = (1, 3), deadline = 20
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.227272727273 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.227272727273 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.227272727273 , action:  right , deadline: 15
annealing now. self.epsilon: 0.227272727273 , action:  right , deadline: 10
success: 9 / 11
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (8, 1), destination = (4, 3), deadline = 30
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.208333333333 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.208333333333 , action:  right , deadline: 30
annealing now. self.epsilon: 0.208333333333 , action:  right , deadline: 25
Environment.act(): Primary agent has reached destination!
success: 10 / 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (4, 2), destination = (1, 4), deadline = 25
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.192307692308 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.192307692308 , action:  left , deadline: 24
annealing now. self.epsilon: 0.192307692308 , action:  left , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 11 / 13
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (6, 6), destination = (2, 3), deadline = 35
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.178571428571 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.178571428571 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.178571428571 , action:  left , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 12 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (1, 1), destination = (7, 5), deadline = 50
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 48
Environment.act(): Primary agent has reached destination!
success: 13 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (4, 6), destination = (8, 2), deadline = 40
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.15625 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.15625 , action:  forward , deadline: 35
Environment.act(): Primary agent has reached destination!
success: 14 / 16
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (5, 3), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.147058823529 , self.eps_freq:  7.0 

Environment.act(): Primary agent has reached destination!
success: 15 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (8, 5), destination = (1, 5), deadline = 35
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.138888888889 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.138888888889 , action:  right , deadline: 32
annealing now. self.epsilon: 0.138888888889 , action:  left , deadline: 24
annealing now. self.epsilon: 0.138888888889 , action:  None , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 16 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (2, 6), destination = (5, 4), deadline = 25
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.131578947368 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.131578947368 , action:  left , deadline: 24
annealing now. self.epsilon: 0.131578947368 , action:  right , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 17 / 19
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (8, 2), destination = (2, 2), deadline = 30
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  None , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 18 / 20
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (1, 3), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.119047619048 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.119047619048 , action:  forward , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 19 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (4, 1), destination = (2, 4), deadline = 25
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.113636363636 , self.eps_freq:  9.0 

Environment.act(): Primary agent has reached destination!
success: 20 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (5, 3), destination = (2, 6), deadline = 30
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.108695652174 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.108695652174 , action:  None , deadline: 30
annealing now. self.epsilon: 0.108695652174 , action:  forward , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 21 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (7, 1), destination = (1, 5), deadline = 50
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.104166666667 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.104166666667 , action:  left , deadline: 50
annealing now. self.epsilon: 0.104166666667 , action:  right , deadline: 40
Environment.act(): Primary agent has reached destination!
success: 22 / 24
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (8, 5), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  left , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 23 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (8, 5), destination = (1, 6), deadline = 40
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0961538461538 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0961538461538 , action:  None , deadline: 33
Environment.act(): Primary agent has reached destination!
success: 24 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (7, 4), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0925925925926 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0925925925926 , action:  None , deadline: 22
Environment.act(): Primary agent has reached destination!
success: 25 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (8, 2), destination = (4, 5), deadline = 35
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0892857142857 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0892857142857 , action:  right , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 26 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (3, 1), destination = (8, 4), deadline = 40
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0862068965517 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0862068965517 , action:  left , deadline: 36
Environment.act(): Primary agent has reached destination!
success: 27 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (3, 5), destination = (8, 4), deadline = 30
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  forward , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 28 / 30
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (3, 1), destination = (6, 5), deadline = 35
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0806451612903 , self.eps_freq:  13.0 

annealing now. self.epsilon: 0.0806451612903 , action:  right , deadline: 26
Environment.act(): Primary agent has reached destination!
success: 29 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (8, 4), destination = (3, 5), deadline = 30
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.078125 , self.eps_freq:  13.0 

annealing now. self.epsilon: 0.078125 , action:  forward , deadline: 26
Environment.act(): Primary agent has reached destination!
success: 30 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (5, 3), destination = (2, 5), deadline = 25
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0757575757576 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 33
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (1, 6), destination = (5, 6), deadline = 20
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0735294117647 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 34
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (7, 5), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 35
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (3, 6), destination = (2, 2), deadline = 25
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0694444444444 , self.eps_freq:  15.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 36
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (5, 4), destination = (7, 1), deadline = 25
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0675675675676 , self.eps_freq:  15.0 

success: 34 / 37
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (7, 6), destination = (2, 2), deadline = 45
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0657894736842 , self.eps_freq:  16.0 

annealing now. self.epsilon: 0.0657894736842 , action:  None , deadline: 32
Environment.act(): Primary agent has reached destination!
success: 35 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (3, 2), destination = (7, 2), deadline = 20
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0641025641026 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (2, 5), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 40
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (4, 1), destination = (8, 5), deadline = 40
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0609756097561 , self.eps_freq:  17.0 

annealing now. self.epsilon: 0.0609756097561 , action:  None , deadline: 34
Environment.act(): Primary agent has reached destination!
success: 38 / 41
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (8, 3), destination = (1, 3), deadline = 35
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0595238095238 , self.eps_freq:  17.0 

annealing now. self.epsilon: 0.0595238095238 , action:  forward , deadline: 34
Environment.act(): Primary agent has reached destination!
success: 39 / 42
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (3, 4), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0581395348837 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (2, 6), destination = (7, 4), deadline = 35
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0568181818182 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 44
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (6, 4), destination = (8, 1), deadline = 25
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (4, 2), destination = (1, 5), deadline = 30
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.054347826087 , self.eps_freq:  19.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 46
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (7, 6), destination = (1, 1), deadline = 55
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0531914893617 , self.eps_freq:  19.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 47
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (6, 6), destination = (2, 5), deadline = 25
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0520833333333 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (8, 3), destination = (1, 1), deadline = 45
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0510204081633 , self.eps_freq:  20.0 

annealing now. self.epsilon: 0.0510204081633 , action:  None , deadline: 40
Environment.act(): Primary agent has reached destination!
success: 46 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (1, 6), destination = (6, 3), deadline = 40
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.05 , self.eps_freq:  20.0 

annealing now. self.epsilon: 0.05 , action:  left , deadline: 40
Environment.act(): Primary agent has reached destination!
success: 47 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (8, 6), destination = (5, 1), deadline = 40
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0490196078431 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (8, 5), destination = (1, 3), deadline = 45
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0480769230769 , self.eps_freq:  21.0 

annealing now. self.epsilon: 0.0480769230769 , action:  forward , deadline: 42
Environment.act(): Primary agent has reached destination!
success: 49 / 52
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (3, 2), destination = (7, 3), deadline = 25
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0471698113208 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (1, 6), destination = (6, 1), deadline = 50
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0462962962963 , self.eps_freq:  22.0 

annealing now. self.epsilon: 0.0462962962963 , action:  None , deadline: 44
Environment.act(): Primary agent has reached destination!
success: 51 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (2, 1), destination = (7, 6), deadline = 50
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

annealing now. self.epsilon: 0.0454545454545 , action:  left , deadline: 44
Environment.act(): Primary agent has reached destination!
success: 52 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (7, 2), destination = (3, 1), deadline = 25
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0446428571429 , self.eps_freq:  23.0 

success: 52 / 56
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (1, 1), destination = (4, 5), deadline = 35
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0438596491228 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 53 / 57
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (3, 2), destination = (2, 6), deadline = 25
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0431034482759 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 54 / 58
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (3, 3), destination = (8, 2), deadline = 30
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0423728813559 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 55 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (1, 1), destination = (8, 3), deadline = 45
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (7, 2), destination = (1, 3), deadline = 35
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0409836065574 , self.eps_freq:  25.0 

success: 56 / 61
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (3, 4), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0403225806452 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 57 / 62
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (1, 6), destination = (7, 6), deadline = 30
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0396825396825 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 58 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (6, 1), destination = (3, 4), deadline = 30
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0390625 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 59 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (1, 5), destination = (7, 5), deadline = 30
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 60 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (1, 3), destination = (6, 1), deadline = 35
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0378787878788 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 61 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (5, 1), destination = (4, 6), deadline = 30
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0373134328358 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 62 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (2, 5), destination = (7, 2), deadline = 40
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0367647058824 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 63 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (5, 5), destination = (1, 6), deadline = 25
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.036231884058 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 64 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (7, 6), destination = (1, 6), deadline = 30
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 65 / 70
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (5, 4), destination = (1, 1), deadline = 35
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0352112676056 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 66 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (2, 6), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0347222222222 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 67 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (2, 5), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0342465753425 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 68 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (7, 5), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0337837837838 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 69 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (3, 1), destination = (8, 1), deadline = 25
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 70 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (2, 6), destination = (7, 1), deadline = 50
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0328947368421 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 71 / 76
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (4, 5), destination = (2, 1), deadline = 30
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0324675324675 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 72 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (6, 2), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0320512820513 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 73 / 78
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (2, 4), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0316455696203 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 74 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (4, 1), destination = (7, 5), deadline = 35
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 75 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (1, 5), destination = (5, 4), deadline = 25
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0308641975309 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 76 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (4, 4), destination = (8, 3), deadline = 25
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.030487804878 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 77 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (5, 3), destination = (8, 6), deadline = 30
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0301204819277 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 78 / 83
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (1, 3), destination = (7, 5), deadline = 40
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0297619047619 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 79 / 84
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (8, 6), destination = (3, 2), deadline = 45
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 80 / 85
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (3, 6), destination = (1, 4), deadline = 20
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0290697674419 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 81 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (8, 2), destination = (2, 1), deadline = 35
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0287356321839 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 82 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (5, 2), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0284090909091 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 83 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (8, 5), destination = (5, 2), deadline = 30
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0280898876404 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 84 / 89
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (1, 4), destination = (5, 5), deadline = 25
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 85 / 90
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (8, 1), destination = (5, 2), deadline = 20
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0274725274725 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 86 / 91
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (6, 1), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0271739130435 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 87 / 92
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (1, 6), destination = (3, 3), deadline = 25
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0268817204301 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 88 / 93
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (7, 2), destination = (4, 1), deadline = 20
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0265957446809 , self.eps_freq:  38.0 

success: 88 / 94
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (6, 4), destination = (1, 2), deadline = 35
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 89 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (8, 5), destination = (1, 3), deadline = 45
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0260416666667 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 90 / 96
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (7, 4), destination = (2, 5), deadline = 30
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0257731958763 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 91 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (5, 6), destination = (4, 1), deadline = 30
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0255102040816 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 92 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (8, 5), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0252525252525 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 93 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (3, 6), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 94 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99959
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01149
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05348
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.22106
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.22254
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03515
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.33830
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.18401
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.89185
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.27828
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08941
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00201
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04762
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.15759
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.53550
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00409
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.23218
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06835
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03030
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03704
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.30559
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07079
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01163
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.53021
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.04348
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01613
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02000
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.00044
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 3.65628
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 1.11632
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.39638
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 2.55041
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.99916
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.45273
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.49969
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.12508
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.32688
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.33899
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.64832
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.75343
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.33452
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 1.00426
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.42629
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.65636
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.50286
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.50272
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.99749
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: -0.04000
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.50452
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 3.05240
--------------------------------------------------------------------------------
updated cells:  50 , self.total_cell_count: 2048 , updated_func_counter: 1475
self.alpha: 0.7 self.gamma: 0.005 , self.epsilon: 0.5 , success: 94  in steps:  12
________________________________________________________________________________
gma = 0.005
eps = 0.2
alp = 0.7
epsilon:  0.2
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (8, 4), destination = (3, 4), deadline = 25
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 1.0 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.0 , action:  left , deadline: 25
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 24
annealing now. self.epsilon: 1.0 , action:  left , deadline: 23
annealing now. self.epsilon: 1.0 , action:  None , deadline: 22
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 21
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 20
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 19
annealing now. self.epsilon: 1.0 , action:  None , deadline: 18
annealing now. self.epsilon: 1.0 , action:  None , deadline: 17
annealing now. self.epsilon: 1.0 , action:  right , deadline: 16
annealing now. self.epsilon: 1.0 , action:  None , deadline: 15
annealing now. self.epsilon: 1.0 , action:  left , deadline: 14
annealing now. self.epsilon: 1.0 , action:  None , deadline: 13
annealing now. self.epsilon: 1.0 , action:  None , deadline: 12
annealing now. self.epsilon: 1.0 , action:  left , deadline: 11
annealing now. self.epsilon: 1.0 , action:  left , deadline: 10
annealing now. self.epsilon: 1.0 , action:  None , deadline: 9
annealing now. self.epsilon: 1.0 , action:  left , deadline: 8
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 7
annealing now. self.epsilon: 1.0 , action:  left , deadline: 6
annealing now. self.epsilon: 1.0 , action:  None , deadline: 5
annealing now. self.epsilon: 1.0 , action:  right , deadline: 4
annealing now. self.epsilon: 1.0 , action:  None , deadline: 3
annealing now. self.epsilon: 1.0 , action:  left , deadline: 2
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (5, 3), destination = (1, 5), deadline = 30
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  right , deadline: 30
annealing now. self.epsilon: 0.5 , action:  left , deadline: 28
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 26
annealing now. self.epsilon: 0.5 , action:  left , deadline: 24
annealing now. self.epsilon: 0.5 , action:  right , deadline: 22
annealing now. self.epsilon: 0.5 , action:  None , deadline: 20
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.5 , action:  left , deadline: 16
annealing now. self.epsilon: 0.5 , action:  left , deadline: 14
annealing now. self.epsilon: 0.5 , action:  None , deadline: 12
annealing now. self.epsilon: 0.5 , action:  left , deadline: 10
Environment.act(): Primary agent has reached destination!
success: 1 / 2
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (8, 6), destination = (4, 2), deadline = 40
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.333333333333 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.333333333333 , action:  forward , deadline: 39
annealing now. self.epsilon: 0.333333333333 , action:  None , deadline: 36
annealing now. self.epsilon: 0.333333333333 , action:  forward , deadline: 33
annealing now. self.epsilon: 0.333333333333 , action:  right , deadline: 30
annealing now. self.epsilon: 0.333333333333 , action:  right , deadline: 27
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 24
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 21
annealing now. self.epsilon: 0.333333333333 , action:  None , deadline: 18
annealing now. self.epsilon: 0.333333333333 , action:  right , deadline: 15
annealing now. self.epsilon: 0.333333333333 , action:  forward , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 2 / 3
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (1, 2), destination = (7, 3), deadline = 35
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  forward , deadline: 32
annealing now. self.epsilon: 0.25 , action:  None , deadline: 28
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 3 / 4
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (8, 3), destination = (1, 4), deadline = 40
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.2 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.2 , action:  forward , deadline: 40
annealing now. self.epsilon: 0.2 , action:  None , deadline: 35
annealing now. self.epsilon: 0.2 , action:  None , deadline: 30
annealing now. self.epsilon: 0.2 , action:  left , deadline: 25
annealing now. self.epsilon: 0.2 , action:  forward , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 4 / 5
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (6, 1), destination = (1, 1), deadline = 25
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  left , deadline: 24
annealing now. self.epsilon: 0.166666666667 , action:  left , deadline: 18
annealing now. self.epsilon: 0.166666666667 , action:  left , deadline: 12
success: 4 / 6
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (8, 5), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.142857142857 , self.eps_freq:  7.0 

Environment.act(): Primary agent has reached destination!
success: 5 / 7
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (1, 6), destination = (8, 4), deadline = 45
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  right , deadline: 40
annealing now. self.epsilon: 0.125 , action:  None , deadline: 32
annealing now. self.epsilon: 0.125 , action:  left , deadline: 24
annealing now. self.epsilon: 0.125 , action:  forward , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 6 / 8
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (2, 3), destination = (8, 6), deadline = 45
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.111111111111 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.111111111111 , action:  None , deadline: 45
annealing now. self.epsilon: 0.111111111111 , action:  None , deadline: 36
annealing now. self.epsilon: 0.111111111111 , action:  forward , deadline: 27
Environment.act(): Primary agent has reached destination!
success: 7 / 9
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (3, 2), destination = (7, 5), deadline = 35
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  None , deadline: 30
annealing now. self.epsilon: 0.1 , action:  left , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 8 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (6, 1), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0909090909091 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0909090909091 , action:  left , deadline: 22
Environment.act(): Primary agent has reached destination!
success: 9 / 11
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (3, 3), destination = (1, 5), deadline = 20
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

Environment.act(): Primary agent has reached destination!
success: 10 / 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (4, 4), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0769230769231 , self.eps_freq:  13.0 

success: 10 / 13
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (7, 4), destination = (1, 1), deadline = 45
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0714285714286 , action:  left , deadline: 42
annealing now. self.epsilon: 0.0714285714286 , action:  left , deadline: 28
Environment.act(): Primary agent has reached destination!
success: 11 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (8, 4), destination = (6, 6), deadline = 20
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0666666666667 , self.eps_freq:  15.0 

Environment.act(): Primary agent has reached destination!
success: 12 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (5, 3), destination = (7, 5), deadline = 20
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 13 / 16
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (8, 2), destination = (2, 4), deadline = 40
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0588235294118 , self.eps_freq:  17.0 

annealing now. self.epsilon: 0.0588235294118 , action:  forward , deadline: 34
Environment.act(): Primary agent has reached destination!
success: 14 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (8, 6), destination = (3, 2), deadline = 45
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 15 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (1, 2), destination = (7, 6), deadline = 50
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0526315789474 , self.eps_freq:  19.0 

annealing now. self.epsilon: 0.0526315789474 , action:  forward , deadline: 38
Environment.act(): Primary agent has reached destination!
success: 16 / 19
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (1, 6), destination = (7, 2), deadline = 50
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.05 , self.eps_freq:  20.0 

annealing now. self.epsilon: 0.05 , action:  right , deadline: 40
Environment.act(): Primary agent has reached destination!
success: 17 / 20
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (1, 5), destination = (4, 6), deadline = 20
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.047619047619 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 18 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (7, 2), destination = (1, 5), deadline = 45
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

annealing now. self.epsilon: 0.0454545454545 , action:  forward , deadline: 44
Environment.act(): Primary agent has reached destination!
success: 19 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (2, 1), destination = (5, 4), deadline = 30
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0434782608696 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 20 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (5, 2), destination = (2, 1), deadline = 20
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

success: 20 / 24
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (1, 6), destination = (5, 4), deadline = 30
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.04 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 21 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (7, 6), destination = (4, 3), deadline = 30
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 22 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (3, 5), destination = (6, 1), deadline = 35
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.037037037037 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 23 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (7, 4), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (4, 6), destination = (2, 2), deadline = 30
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0344827586207 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (4, 3), destination = (8, 3), deadline = 20
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 30
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (4, 4), destination = (1, 6), deadline = 25
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0322580645161 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (4, 4), destination = (7, 2), deadline = 25
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (6, 4), destination = (1, 5), deadline = 30
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.030303030303 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 33
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (4, 3), destination = (7, 6), deadline = 30
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

success: 29 / 34
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (2, 2), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0285714285714 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 35
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (8, 2), destination = (3, 5), deadline = 40
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 36
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (8, 2), destination = (1, 5), deadline = 50
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.027027027027 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 37
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (4, 3), destination = (5, 6), deadline = 20
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (2, 3), destination = (8, 3), deadline = 30
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.025641025641 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (1, 4), destination = (3, 1), deadline = 25
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 35 / 40
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (2, 2), destination = (8, 2), deadline = 30
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0243902439024 , self.eps_freq:  41.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 41
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (5, 3), destination = (8, 6), deadline = 30
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 42
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (2, 5), destination = (5, 1), deadline = 35
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0232558139535 , self.eps_freq:  43.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (2, 6), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 44
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (7, 6), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0222222222222 , self.eps_freq:  45.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (4, 1), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 46
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (3, 2), destination = (8, 5), deadline = 40
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0212765957447 , self.eps_freq:  47.0 

success: 41 / 47
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (6, 3), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (2, 4), destination = (6, 6), deadline = 30
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0204081632653 , self.eps_freq:  50.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (8, 1), destination = (7, 6), deadline = 30
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.02 , self.eps_freq:  50.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (2, 4), destination = (7, 2), deadline = 35
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0196078431373 , self.eps_freq:  51.0 

success: 44 / 51
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (8, 4), destination = (2, 6), deadline = 40
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 52
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (2, 6), destination = (6, 4), deadline = 30
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0188679245283 , self.eps_freq:  53.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (3, 6), destination = (1, 4), deadline = 20
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

Environment.act(): Primary agent has reached destination!
success: 47 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (6, 5), destination = (7, 1), deadline = 25
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0181818181818 , self.eps_freq:  55.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (2, 5), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (4, 3), destination = (2, 5), deadline = 20
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0175438596491 , self.eps_freq:  57.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 57
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (1, 3), destination = (7, 4), deadline = 35
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 58
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (3, 6), destination = (1, 3), deadline = 25
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0169491525424 , self.eps_freq:  59.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (3, 3), destination = (7, 5), deadline = 30
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

Environment.act(): Primary agent has reached destination!
success: 53 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (7, 3), destination = (4, 6), deadline = 30
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.016393442623 , self.eps_freq:  61.0 

success: 53 / 61
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (6, 5), destination = (1, 5), deadline = 25
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

Environment.act(): Primary agent has reached destination!
success: 54 / 62
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (5, 5), destination = (8, 6), deadline = 20
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.015873015873 , self.eps_freq:  63.0 

Environment.act(): Primary agent has reached destination!
success: 55 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (1, 4), destination = (7, 6), deadline = 40
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (2, 3), destination = (7, 3), deadline = 25
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0153846153846 , self.eps_freq:  65.0 

Environment.act(): Primary agent has reached destination!
success: 57 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (2, 6), destination = (5, 2), deadline = 35
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

Environment.act(): Primary agent has reached destination!
success: 58 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (2, 2), destination = (8, 6), deadline = 50
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0149253731343 , self.eps_freq:  67.0 

success: 58 / 67
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (1, 1), destination = (4, 3), deadline = 25
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

Environment.act(): Primary agent has reached destination!
success: 59 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (4, 4), destination = (7, 2), deadline = 25
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0144927536232 , self.eps_freq:  69.0 

Environment.act(): Primary agent has reached destination!
success: 60 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (6, 4), destination = (8, 1), deadline = 25
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

Environment.act(): Primary agent has reached destination!
success: 61 / 70
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (5, 2), destination = (1, 2), deadline = 20
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0140845070423 , self.eps_freq:  71.0 

Environment.act(): Primary agent has reached destination!
success: 62 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (5, 1), destination = (5, 6), deadline = 25
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

Environment.act(): Primary agent has reached destination!
success: 63 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (8, 6), destination = (8, 1), deadline = 25
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.013698630137 , self.eps_freq:  73.0 

Environment.act(): Primary agent has reached destination!
success: 64 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (1, 1), destination = (5, 5), deadline = 40
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

Environment.act(): Primary agent has reached destination!
success: 65 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (1, 3), destination = (7, 1), deadline = 40
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0133333333333 , self.eps_freq:  75.0 

Environment.act(): Primary agent has reached destination!
success: 66 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (2, 1), destination = (5, 6), deadline = 40
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

Environment.act(): Primary agent has reached destination!
success: 67 / 76
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (4, 6), destination = (8, 6), deadline = 20
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.012987012987 , self.eps_freq:  77.0 

Environment.act(): Primary agent has reached destination!
success: 68 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (1, 5), destination = (5, 1), deadline = 40
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

Environment.act(): Primary agent has reached destination!
success: 69 / 78
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (5, 2), destination = (7, 6), deadline = 30
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0126582278481 , self.eps_freq:  79.0 

Environment.act(): Primary agent has reached destination!
success: 70 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (5, 6), destination = (8, 4), deadline = 25
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

Environment.act(): Primary agent has reached destination!
success: 71 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (4, 1), destination = (6, 4), deadline = 25
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0123456790123 , self.eps_freq:  81.0 

Environment.act(): Primary agent has reached destination!
success: 72 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (2, 5), destination = (6, 4), deadline = 25
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

Environment.act(): Primary agent has reached destination!
success: 73 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (5, 1), destination = (8, 5), deadline = 35
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0120481927711 , self.eps_freq:  83.0 

Environment.act(): Primary agent has reached destination!
success: 74 / 83
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (2, 2), destination = (6, 1), deadline = 25
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

success: 74 / 84
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (3, 3), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0117647058824 , self.eps_freq:  85.0 

Environment.act(): Primary agent has reached destination!
success: 75 / 85
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (8, 3), destination = (4, 2), deadline = 25
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

Environment.act(): Primary agent has reached destination!
success: 76 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (5, 1), destination = (8, 3), deadline = 25
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0114942528736 , self.eps_freq:  87.0 

Environment.act(): Primary agent has reached destination!
success: 77 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (1, 4), destination = (3, 6), deadline = 20
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

Environment.act(): Primary agent has reached destination!
success: 78 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (1, 5), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0112359550562 , self.eps_freq:  89.0 

Environment.act(): Primary agent has reached destination!
success: 79 / 89
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (3, 5), destination = (8, 1), deadline = 45
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

Environment.act(): Primary agent has reached destination!
success: 80 / 90
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (1, 3), destination = (7, 5), deadline = 40
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.010989010989 , self.eps_freq:  91.0 

Environment.act(): Primary agent has reached destination!
success: 81 / 91
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (4, 1), destination = (7, 3), deadline = 25
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

Environment.act(): Primary agent has reached destination!
success: 82 / 92
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (1, 4), destination = (3, 2), deadline = 20
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.010752688172 , self.eps_freq:  93.0 

Environment.act(): Primary agent has reached destination!
success: 83 / 93
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (4, 1), destination = (1, 2), deadline = 20
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

Environment.act(): Primary agent has reached destination!
success: 84 / 94
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (2, 2), destination = (3, 6), deadline = 25
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0105263157895 , self.eps_freq:  95.0 

Environment.act(): Primary agent has reached destination!
success: 85 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (3, 3), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

success: 85 / 96
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (1, 2), destination = (7, 4), deadline = 40
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0103092783505 , self.eps_freq:  97.0 

success: 85 / 97
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (6, 2), destination = (4, 6), deadline = 30
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

Environment.act(): Primary agent has reached destination!
success: 86 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (8, 6), destination = (2, 4), deadline = 40
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.010101010101 , self.eps_freq:  99.0 

success: 86 / 99
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (2, 6), destination = (4, 2), deadline = 30
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.01 , self.eps_freq:  100.0 

Environment.act(): Primary agent has reached destination!
success: 87 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99981
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.13856
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02174
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01316
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01087
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10972
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07195
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.96847
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01031
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01010
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00355
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.33968
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.61236
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12803
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.15655
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.00055
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.51669
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04762
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.98027
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04060
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07933
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03000
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99837
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01639
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12377
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.00000
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.30302
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00438
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.36234
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.14152
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03409
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.33378
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99997
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02279
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01220
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08333
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01111
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03448
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07891
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01515
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.75031
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.15131
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.22977
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07143
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.26909
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03448
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.79116
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 3.78252
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.00250
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.50150
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.16667
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.49937
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.42689
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.06288
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 3.05847
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 3.43060
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.02531
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.78894
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: -0.16663
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.50520
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.50438
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.00035
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.50455
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.53542
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 3.25288
--------------------------------------------------------------------------------
updated cells:  65 , self.total_cell_count: 2048 , updated_func_counter: 1682
self.alpha: 0.7 self.gamma: 0.005 , self.epsilon: 0.2 , success: 87  in steps:  19
________________________________________________________________________________
gma = 0.005
eps = 0.1
alp = 0.7
epsilon:  0.1
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (7, 1), destination = (2, 6), deadline = 50
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  left , deadline: 50
annealing now. self.epsilon: 0.5 , action:  right , deadline: 48
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 46
annealing now. self.epsilon: 0.5 , action:  None , deadline: 44
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 42
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 40
annealing now. self.epsilon: 0.5 , action:  left , deadline: 38
annealing now. self.epsilon: 0.5 , action:  right , deadline: 36
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 34
annealing now. self.epsilon: 0.5 , action:  right , deadline: 32
annealing now. self.epsilon: 0.5 , action:  left , deadline: 30
annealing now. self.epsilon: 0.5 , action:  right , deadline: 28
annealing now. self.epsilon: 0.5 , action:  right , deadline: 26
annealing now. self.epsilon: 0.5 , action:  None , deadline: 24
annealing now. self.epsilon: 0.5 , action:  right , deadline: 22
annealing now. self.epsilon: 0.5 , action:  left , deadline: 20
annealing now. self.epsilon: 0.5 , action:  None , deadline: 18
annealing now. self.epsilon: 0.5 , action:  left , deadline: 16
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 14
Environment.act(): Primary agent has reached destination!
success: 1 / 1
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (4, 3), destination = (1, 4), deadline = 20
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  right , deadline: 20
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.25 , action:  None , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 2 / 2
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (5, 6), destination = (3, 3), deadline = 25
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 3 / 3
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (7, 3), destination = (1, 2), deadline = 35
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  left , deadline: 32
annealing now. self.epsilon: 0.125 , action:  right , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 4 / 4
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (5, 2), destination = (7, 4), deadline = 20
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  None , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 5 / 5
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (2, 4), destination = (7, 3), deadline = 30
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  forward , deadline: 24
success: 5 / 6
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (8, 6), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 6 / 7
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (1, 6), destination = (4, 1), deadline = 40
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

annealing now. self.epsilon: 0.0625 , action:  left , deadline: 32
Environment.act(): Primary agent has reached destination!
success: 7 / 8
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (3, 6), destination = (1, 4), deadline = 20
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 8 / 9
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (2, 1), destination = (5, 6), deadline = 40
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.05 , self.eps_freq:  20.0 

annealing now. self.epsilon: 0.05 , action:  forward , deadline: 40
Environment.act(): Primary agent has reached destination!
success: 9 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (7, 2), destination = (4, 1), deadline = 20
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 10 / 11
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (1, 3), destination = (7, 3), deadline = 30
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 11 / 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (5, 5), destination = (2, 2), deadline = 30
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

success: 11 / 13
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (5, 3), destination = (8, 4), deadline = 20
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 12 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 5), deadline = 30
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 13 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (5, 1), destination = (1, 4), deadline = 35
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 14 / 16
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (6, 1), destination = (7, 4), deadline = 20
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 15 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (7, 2), destination = (2, 5), deadline = 40
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 16 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (2, 1), destination = (5, 4), deadline = 30
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 17 / 19
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (5, 3), destination = (7, 1), deadline = 20
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 18 / 20
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (1, 5), destination = (7, 5), deadline = 30
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

Environment.act(): Primary agent has reached destination!
success: 19 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (8, 3), destination = (7, 6), deadline = 20
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

Environment.act(): Primary agent has reached destination!
success: 20 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (1, 1), destination = (3, 5), deadline = 30
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

Environment.act(): Primary agent has reached destination!
success: 21 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (7, 5), destination = (3, 1), deadline = 40
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

Environment.act(): Primary agent has reached destination!
success: 22 / 24
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (8, 3), destination = (4, 1), deadline = 30
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.02 , self.eps_freq:  50.0 

Environment.act(): Primary agent has reached destination!
success: 23 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (3, 5), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (4, 5), destination = (2, 1), deadline = 30
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (6, 4), destination = (2, 5), deadline = 25
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (1, 3), destination = (5, 6), deadline = 35
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (3, 1), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 30
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (1, 4), destination = (3, 2), deadline = 20
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (5, 1), destination = (2, 4), deadline = 30
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (7, 6), destination = (3, 3), deadline = 35
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 33
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (6, 1), destination = (1, 4), deadline = 40
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 34
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (4, 2), destination = (5, 6), deadline = 25
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 35
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (8, 2), destination = (5, 5), deadline = 30
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 36
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (5, 1), destination = (2, 4), deadline = 30
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

Environment.act(): Primary agent has reached destination!
success: 35 / 37
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (1, 5), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (8, 3), destination = (2, 5), deadline = 40
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (3, 4), destination = (5, 2), deadline = 20
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 40
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (5, 6), destination = (7, 1), deadline = 35
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 41
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (8, 1), destination = (3, 4), deadline = 40
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 42
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (7, 6), destination = (1, 5), deadline = 35
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (1, 1), destination = (7, 2), deadline = 35
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 44
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (1, 2), destination = (6, 3), deadline = 30
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (3, 2), destination = (6, 4), deadline = 25
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 46
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (6, 1), destination = (5, 6), deadline = 30
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 47
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (2, 1), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (7, 3), destination = (1, 2), deadline = 35
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

Environment.act(): Primary agent has reached destination!
success: 47 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (3, 2), destination = (7, 3), deadline = 25
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.01 , self.eps_freq:  100.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (3, 2), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.00980392156863 , self.eps_freq:  102.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (3, 3), destination = (8, 1), deadline = 35
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00961538461538 , self.eps_freq:  104.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 52
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (8, 1), destination = (2, 2), deadline = 35
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.00943396226415 , self.eps_freq:  106.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (8, 5), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.00925925925926 , self.eps_freq:  108.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (5, 5), destination = (3, 3), deadline = 20
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.00909090909091 , self.eps_freq:  110.0 

Environment.act(): Primary agent has reached destination!
success: 53 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (2, 2), destination = (3, 6), deadline = 25
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.00892857142857 , self.eps_freq:  112.0 

Environment.act(): Primary agent has reached destination!
success: 54 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (7, 3), destination = (2, 1), deadline = 35
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.00877192982456 , self.eps_freq:  114.0 

Environment.act(): Primary agent has reached destination!
success: 55 / 57
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (8, 6), destination = (1, 6), deadline = 35
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.00862068965517 , self.eps_freq:  116.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 58
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (1, 1), destination = (4, 3), deadline = 25
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.00847457627119 , self.eps_freq:  118.0 

Environment.act(): Primary agent has reached destination!
success: 57 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (3, 2), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.00833333333333 , self.eps_freq:  120.0 

Environment.act(): Primary agent has reached destination!
success: 58 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (1, 2), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.00819672131148 , self.eps_freq:  122.0 

Environment.act(): Primary agent has reached destination!
success: 59 / 61
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (3, 6), destination = (8, 3), deadline = 40
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.00806451612903 , self.eps_freq:  124.0 

Environment.act(): Primary agent has reached destination!
success: 60 / 62
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (5, 3), destination = (2, 5), deadline = 25
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.00793650793651 , self.eps_freq:  126.0 

Environment.act(): Primary agent has reached destination!
success: 61 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (2, 4), destination = (8, 3), deadline = 35
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0078125 , self.eps_freq:  128.0 

success: 61 / 64
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (2, 4), destination = (5, 2), deadline = 25
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.00769230769231 , self.eps_freq:  130.0 

Environment.act(): Primary agent has reached destination!
success: 62 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (1, 2), destination = (6, 3), deadline = 30
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.00757575757576 , self.eps_freq:  132.0 

Environment.act(): Primary agent has reached destination!
success: 63 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (7, 6), destination = (7, 1), deadline = 25
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.00746268656716 , self.eps_freq:  134.0 

Environment.act(): Primary agent has reached destination!
success: 64 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (8, 3), destination = (3, 4), deadline = 30
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.00735294117647 , self.eps_freq:  136.0 

success: 64 / 68
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (8, 3), destination = (2, 6), deadline = 45
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.00724637681159 , self.eps_freq:  138.0 

Environment.act(): Primary agent has reached destination!
success: 65 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (4, 5), destination = (3, 2), deadline = 20
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.00714285714286 , self.eps_freq:  140.0 

Environment.act(): Primary agent has reached destination!
success: 66 / 70
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (6, 1), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.00704225352113 , self.eps_freq:  142.0 

Environment.act(): Primary agent has reached destination!
success: 67 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (2, 5), destination = (5, 2), deadline = 30
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.00694444444444 , self.eps_freq:  144.0 

Environment.act(): Primary agent has reached destination!
success: 68 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (1, 1), destination = (3, 6), deadline = 35
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.00684931506849 , self.eps_freq:  146.0 

Environment.act(): Primary agent has reached destination!
success: 69 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (5, 2), destination = (6, 5), deadline = 20
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.00675675675676 , self.eps_freq:  148.0 

Environment.act(): Primary agent has reached destination!
success: 70 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (2, 4), destination = (5, 1), deadline = 30
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.00666666666667 , self.eps_freq:  150.0 

Environment.act(): Primary agent has reached destination!
success: 71 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (5, 2), destination = (7, 5), deadline = 25
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.00657894736842 , self.eps_freq:  152.0 

Environment.act(): Primary agent has reached destination!
success: 72 / 76
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (7, 5), destination = (3, 4), deadline = 25
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.00649350649351 , self.eps_freq:  154.0 

Environment.act(): Primary agent has reached destination!
success: 73 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (2, 4), destination = (7, 1), deadline = 40
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.00641025641026 , self.eps_freq:  156.0 

Environment.act(): Primary agent has reached destination!
success: 74 / 78
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (7, 6), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.00632911392405 , self.eps_freq:  158.0 

Environment.act(): Primary agent has reached destination!
success: 75 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (2, 6), destination = (8, 3), deadline = 45
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.00625 , self.eps_freq:  160.0 

Environment.act(): Primary agent has reached destination!
success: 76 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (2, 6), destination = (5, 3), deadline = 30
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.00617283950617 , self.eps_freq:  162.0 

Environment.act(): Primary agent has reached destination!
success: 77 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (7, 2), destination = (2, 2), deadline = 25
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.00609756097561 , self.eps_freq:  164.0 

Environment.act(): Primary agent has reached destination!
success: 78 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (4, 4), destination = (1, 1), deadline = 30
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.00602409638554 , self.eps_freq:  166.0 

Environment.act(): Primary agent has reached destination!
success: 79 / 83
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (2, 4), destination = (8, 5), deadline = 35
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.00595238095238 , self.eps_freq:  168.0 

Environment.act(): Primary agent has reached destination!
success: 80 / 84
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (7, 5), destination = (1, 4), deadline = 35
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.00588235294118 , self.eps_freq:  170.0 

Environment.act(): Primary agent has reached destination!
success: 81 / 85
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (5, 1), destination = (5, 6), deadline = 25
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.00581395348837 , self.eps_freq:  172.0 

Environment.act(): Primary agent has reached destination!
success: 82 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (8, 4), destination = (4, 3), deadline = 25
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.00574712643678 , self.eps_freq:  174.0 

Environment.act(): Primary agent has reached destination!
success: 83 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (7, 6), destination = (7, 1), deadline = 25
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.00568181818182 , self.eps_freq:  176.0 

Environment.act(): Primary agent has reached destination!
success: 84 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (7, 2), destination = (3, 2), deadline = 20
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.00561797752809 , self.eps_freq:  178.0 

Environment.act(): Primary agent has reached destination!
success: 85 / 89
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (2, 4), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.00555555555556 , self.eps_freq:  180.0 

Environment.act(): Primary agent has reached destination!
success: 86 / 90
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (1, 1), destination = (3, 3), deadline = 20
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.00549450549451 , self.eps_freq:  182.0 

Environment.act(): Primary agent has reached destination!
success: 87 / 91
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (8, 4), destination = (3, 4), deadline = 25
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0054347826087 , self.eps_freq:  184.0 

Environment.act(): Primary agent has reached destination!
success: 88 / 92
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (2, 2), destination = (3, 6), deadline = 25
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.00537634408602 , self.eps_freq:  186.0 

Environment.act(): Primary agent has reached destination!
success: 89 / 93
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (8, 2), destination = (8, 6), deadline = 20
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.00531914893617 , self.eps_freq:  188.0 

Environment.act(): Primary agent has reached destination!
success: 90 / 94
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 2), deadline = 45
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.00526315789474 , self.eps_freq:  190.0 

Environment.act(): Primary agent has reached destination!
success: 91 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (7, 2), destination = (4, 4), deadline = 25
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.00520833333333 , self.eps_freq:  192.0 

Environment.act(): Primary agent has reached destination!
success: 92 / 96
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (8, 3), destination = (6, 5), deadline = 20
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.00515463917526 , self.eps_freq:  194.0 

Environment.act(): Primary agent has reached destination!
success: 93 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (3, 6), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.00510204081633 , self.eps_freq:  197.0 

Environment.act(): Primary agent has reached destination!
success: 94 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (7, 2), destination = (2, 5), deadline = 40
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.00505050505051 , self.eps_freq:  198.0 

Environment.act(): Primary agent has reached destination!
success: 95 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (5, 1), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.005 , self.eps_freq:  200.0 

Environment.act(): Primary agent has reached destination!
success: 96 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99938
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03169
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02249
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02296
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06285
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.38865
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01449
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.92704
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01562
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04348
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.33054
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04347
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12175
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.24800
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03559
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.91954
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07572
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00000
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01852
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.72259
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01786
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02614
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.69940
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00000
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03333
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00564
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09671
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02778
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03030
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.99812
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 3.83348
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.00000
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.50067
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50532
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50500
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.65822
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 3.10764
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50375
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.99952
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.50055
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.50000
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 3.05971
--------------------------------------------------------------------------------
updated cells:  42 , self.total_cell_count: 2048 , updated_func_counter: 1411
self.alpha: 0.7 self.gamma: 0.005 , self.epsilon: 0.1 , success: 96  in steps:  11
________________________________________________________________________________
gma = 0.05
eps = 0.5
alp = 0.7
epsilon:  0.5
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (3, 5), destination = (8, 6), deadline = 30
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 2.5 , self.eps_freq:  1.0 

annealing now. self.epsilon: 2.5 , action:  None , deadline: 30
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 29
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 28
annealing now. self.epsilon: 2.5 , action:  left , deadline: 27
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 26
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 25
annealing now. self.epsilon: 2.5 , action:  None , deadline: 24
annealing now. self.epsilon: 2.5 , action:  left , deadline: 23
annealing now. self.epsilon: 2.5 , action:  None , deadline: 22
annealing now. self.epsilon: 2.5 , action:  right , deadline: 21
annealing now. self.epsilon: 2.5 , action:  left , deadline: 20
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 19
annealing now. self.epsilon: 2.5 , action:  left , deadline: 18
annealing now. self.epsilon: 2.5 , action:  right , deadline: 17
annealing now. self.epsilon: 2.5 , action:  None , deadline: 16
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 15
annealing now. self.epsilon: 2.5 , action:  left , deadline: 14
annealing now. self.epsilon: 2.5 , action:  right , deadline: 13
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 12
annealing now. self.epsilon: 2.5 , action:  None , deadline: 11
annealing now. self.epsilon: 2.5 , action:  left , deadline: 10
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 9
annealing now. self.epsilon: 2.5 , action:  left , deadline: 8
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 7
annealing now. self.epsilon: 2.5 , action:  right , deadline: 6
annealing now. self.epsilon: 2.5 , action:  None , deadline: 5
annealing now. self.epsilon: 2.5 , action:  left , deadline: 4
annealing now. self.epsilon: 2.5 , action:  None , deadline: 3
annealing now. self.epsilon: 2.5 , action:  left , deadline: 2
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (5, 4), destination = (8, 3), deadline = 20
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 1.25 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.25 , action:  left , deadline: 20
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 19
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 18
annealing now. self.epsilon: 1.25 , action:  left , deadline: 17
annealing now. self.epsilon: 1.25 , action:  None , deadline: 16
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 15
annealing now. self.epsilon: 1.25 , action:  right , deadline: 14
annealing now. self.epsilon: 1.25 , action:  None , deadline: 13
annealing now. self.epsilon: 1.25 , action:  left , deadline: 12
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 11
annealing now. self.epsilon: 1.25 , action:  None , deadline: 10
annealing now. self.epsilon: 1.25 , action:  left , deadline: 9
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 8
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 7
annealing now. self.epsilon: 1.25 , action:  None , deadline: 6
annealing now. self.epsilon: 1.25 , action:  right , deadline: 5
annealing now. self.epsilon: 1.25 , action:  left , deadline: 4
annealing now. self.epsilon: 1.25 , action:  left , deadline: 3
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 2
success: 0 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (3, 5), destination = (8, 6), deadline = 30
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.833333333333 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 30
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 28
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 26
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 22
Environment.act(): Primary agent has reached destination!
success: 1 / 3
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (1, 6), destination = (6, 3), deadline = 40
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.625 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.625 , action:  left , deadline: 40
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 38
annealing now. self.epsilon: 0.625 , action:  None , deadline: 36
annealing now. self.epsilon: 0.625 , action:  left , deadline: 34
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 32
annealing now. self.epsilon: 0.625 , action:  right , deadline: 30
annealing now. self.epsilon: 0.625 , action:  None , deadline: 28
annealing now. self.epsilon: 0.625 , action:  left , deadline: 26
annealing now. self.epsilon: 0.625 , action:  right , deadline: 24
annealing now. self.epsilon: 0.625 , action:  left , deadline: 22
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.625 , action:  left , deadline: 18
annealing now. self.epsilon: 0.625 , action:  None , deadline: 16
annealing now. self.epsilon: 0.625 , action:  left , deadline: 14
Environment.act(): Primary agent has reached destination!
success: 2 / 4
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (4, 5), destination = (1, 4), deadline = 20
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.5 , action:  right , deadline: 18
annealing now. self.epsilon: 0.5 , action:  left , deadline: 16
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 14
annealing now. self.epsilon: 0.5 , action:  None , deadline: 12
annealing now. self.epsilon: 0.5 , action:  right , deadline: 10
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 8
Environment.act(): Primary agent has reached destination!
success: 3 / 5
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (1, 1), destination = (7, 5), deadline = 50
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.416666666667 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.416666666667 , action:  None , deadline: 48
annealing now. self.epsilon: 0.416666666667 , action:  None , deadline: 45
annealing now. self.epsilon: 0.416666666667 , action:  left , deadline: 42
annealing now. self.epsilon: 0.416666666667 , action:  forward , deadline: 39
annealing now. self.epsilon: 0.416666666667 , action:  right , deadline: 36
annealing now. self.epsilon: 0.416666666667 , action:  None , deadline: 33
annealing now. self.epsilon: 0.416666666667 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.416666666667 , action:  None , deadline: 27
annealing now. self.epsilon: 0.416666666667 , action:  None , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 4 / 6
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (1, 3), destination = (6, 5), deadline = 35
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.357142857143 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 33
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 30
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 27
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 5 / 7
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (5, 6), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.3125 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.3125 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.3125 , action:  None , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 6 / 8
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (4, 4), destination = (6, 1), deadline = 25
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.277777777778 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.277777777778 , action:  None , deadline: 24
annealing now. self.epsilon: 0.277777777778 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.277777777778 , action:  right , deadline: 16
annealing now. self.epsilon: 0.277777777778 , action:  forward , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 7 / 9
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (8, 4), destination = (6, 6), deadline = 20
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  None , deadline: 20
annealing now. self.epsilon: 0.25 , action:  None , deadline: 16
annealing now. self.epsilon: 0.25 , action:  left , deadline: 12
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 8
success: 7 / 10
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (5, 6), destination = (2, 4), deadline = 25
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.227272727273 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.227272727273 , action:  left , deadline: 25
annealing now. self.epsilon: 0.227272727273 , action:  right , deadline: 20
annealing now. self.epsilon: 0.227272727273 , action:  forward , deadline: 15
Environment.act(): Primary agent has reached destination!
success: 8 / 11
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (3, 2), destination = (2, 6), deadline = 25
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.208333333333 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.208333333333 , action:  left , deadline: 25
annealing now. self.epsilon: 0.208333333333 , action:  right , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 9 / 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (4, 5), destination = (7, 6), deadline = 20
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.192307692308 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.192307692308 , action:  left , deadline: 18
annealing now. self.epsilon: 0.192307692308 , action:  None , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 10 / 13
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (2, 6), destination = (7, 6), deadline = 25
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.178571428571 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.178571428571 , action:  left , deadline: 24
annealing now. self.epsilon: 0.178571428571 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.178571428571 , action:  forward , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 11 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (2, 5), destination = (7, 5), deadline = 25
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  left , deadline: 24
annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 12 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (8, 1), destination = (3, 6), deadline = 50
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.15625 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.15625 , action:  None , deadline: 49
annealing now. self.epsilon: 0.15625 , action:  None , deadline: 42
annealing now. self.epsilon: 0.15625 , action:  forward , deadline: 35
annealing now. self.epsilon: 0.15625 , action:  right , deadline: 28
annealing now. self.epsilon: 0.15625 , action:  forward , deadline: 21
Environment.act(): Primary agent has reached destination!
success: 13 / 16
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (2, 1), destination = (6, 5), deadline = 40
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.147058823529 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.147058823529 , action:  forward , deadline: 35
annealing now. self.epsilon: 0.147058823529 , action:  left , deadline: 28
annealing now. self.epsilon: 0.147058823529 , action:  forward , deadline: 21
Environment.act(): Primary agent has reached destination!
success: 14 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (1, 1), destination = (3, 4), deadline = 25
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.138888888889 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.138888888889 , action:  right , deadline: 24
annealing now. self.epsilon: 0.138888888889 , action:  right , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 15 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (1, 3), destination = (6, 1), deadline = 35
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.131578947368 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.131578947368 , action:  None , deadline: 32
annealing now. self.epsilon: 0.131578947368 , action:  left , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 16 / 19
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (6, 3), destination = (1, 6), deadline = 40
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  right , deadline: 40
annealing now. self.epsilon: 0.125 , action:  None , deadline: 32
annealing now. self.epsilon: 0.125 , action:  forward , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 17 / 20
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (3, 1), destination = (7, 4), deadline = 35
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.119047619048 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.119047619048 , action:  None , deadline: 27
Environment.act(): Primary agent has reached destination!
success: 18 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (5, 5), destination = (2, 4), deadline = 20
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.113636363636 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.113636363636 , action:  right , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 19 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (5, 6), destination = (1, 5), deadline = 25
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.108695652174 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.108695652174 , action:  left , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 20 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (4, 4), destination = (6, 6), deadline = 20
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.104166666667 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.104166666667 , action:  forward , deadline: 20
success: 20 / 24
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (8, 4), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  None , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 21 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (2, 4), destination = (7, 2), deadline = 35
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0961538461538 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0961538461538 , action:  None , deadline: 33
annealing now. self.epsilon: 0.0961538461538 , action:  forward , deadline: 22
Environment.act(): Primary agent has reached destination!
success: 22 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (8, 2), destination = (1, 3), deadline = 40
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0925925925926 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0925925925926 , action:  left , deadline: 33
annealing now. self.epsilon: 0.0925925925926 , action:  left , deadline: 22
success: 22 / 27
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (8, 2), destination = (5, 4), deadline = 25
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0892857142857 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0892857142857 , action:  None , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 23 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (1, 6), destination = (3, 1), deadline = 35
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0862068965517 , self.eps_freq:  12.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (2, 1), destination = (1, 5), deadline = 25
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  right , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 25 / 30
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (8, 5), destination = (5, 1), deadline = 35
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0806451612903 , self.eps_freq:  13.0 

annealing now. self.epsilon: 0.0806451612903 , action:  None , deadline: 26
Environment.act(): Primary agent has reached destination!
success: 26 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (4, 6), destination = (7, 5), deadline = 20
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.078125 , self.eps_freq:  13.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (8, 3), destination = (4, 5), deadline = 30
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0757575757576 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0757575757576 , action:  left , deadline: 28
Environment.act(): Primary agent has reached destination!
success: 28 / 33
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (6, 3), destination = (2, 3), deadline = 20
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0735294117647 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 34
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (5, 6), destination = (8, 4), deadline = 25
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 35
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (7, 4), destination = (6, 1), deadline = 20
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0694444444444 , self.eps_freq:  15.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 36
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (6, 1), destination = (8, 6), deadline = 35
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0675675675676 , self.eps_freq:  15.0 

annealing now. self.epsilon: 0.0675675675676 , action:  forward , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 32 / 37
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (3, 3), destination = (8, 1), deadline = 35
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0657894736842 , self.eps_freq:  16.0 

annealing now. self.epsilon: 0.0657894736842 , action:  right , deadline: 32
Environment.act(): Primary agent has reached destination!
success: 33 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (1, 4), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0641025641026 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (6, 6), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 35 / 40
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (2, 5), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0609756097561 , self.eps_freq:  17.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 41
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (8, 1), destination = (2, 4), deadline = 45
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0595238095238 , self.eps_freq:  17.0 

annealing now. self.epsilon: 0.0595238095238 , action:  left , deadline: 34
Environment.act(): Primary agent has reached destination!
success: 37 / 42
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (1, 1), destination = (6, 2), deadline = 30
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0581395348837 , self.eps_freq:  18.0 

success: 37 / 43
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (1, 2), destination = (5, 3), deadline = 25
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0568181818182 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 44
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (2, 4), destination = (7, 1), deadline = 40
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

annealing now. self.epsilon: 0.0555555555556 , action:  left , deadline: 36
Environment.act(): Primary agent has reached destination!
success: 39 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (2, 2), destination = (4, 6), deadline = 30
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.054347826087 , self.eps_freq:  19.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 46
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (8, 4), destination = (3, 3), deadline = 30
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0531914893617 , self.eps_freq:  19.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 47
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (4, 6), destination = (8, 6), deadline = 20
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0520833333333 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (1, 2), destination = (4, 4), deadline = 25
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0510204081633 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (4, 4), destination = (7, 6), deadline = 25
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.05 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (1, 4), destination = (8, 4), deadline = 35
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0490196078431 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (3, 5), destination = (6, 6), deadline = 20
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0480769230769 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 52
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (1, 4), destination = (8, 5), deadline = 40
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0471698113208 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 47 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (2, 3), destination = (5, 6), deadline = 30
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0462962962963 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (2, 4), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (4, 6), destination = (3, 2), deadline = 25
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0446428571429 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (1, 3), destination = (8, 2), deadline = 40
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0438596491228 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 57
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (5, 4), destination = (2, 5), deadline = 20
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0431034482759 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 58
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (7, 4), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0423728813559 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 53 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (8, 5), destination = (2, 6), deadline = 35
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 54 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (6, 6), destination = (1, 1), deadline = 50
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0409836065574 , self.eps_freq:  25.0 

annealing now. self.epsilon: 0.0409836065574 , action:  right , deadline: 50
Environment.act(): Primary agent has reached destination!
success: 55 / 61
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (5, 1), destination = (7, 4), deadline = 25
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0403225806452 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 62
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (6, 6), destination = (1, 2), deadline = 45
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0396825396825 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 57 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (2, 2), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0390625 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 58 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (5, 1), destination = (6, 4), deadline = 20
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 59 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (8, 6), destination = (3, 2), deadline = 45
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0378787878788 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 60 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (3, 4), destination = (2, 1), deadline = 20
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0373134328358 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 61 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (2, 5), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0367647058824 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 62 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (2, 3), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.036231884058 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 63 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (2, 2), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 64 / 70
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (2, 4), destination = (6, 4), deadline = 20
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0352112676056 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 65 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (8, 5), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0347222222222 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 66 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (6, 2), destination = (7, 5), deadline = 20
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0342465753425 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 67 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (8, 1), destination = (4, 2), deadline = 25
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0337837837838 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 68 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (4, 2), destination = (3, 6), deadline = 25
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 69 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (6, 3), destination = (1, 4), deadline = 30
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0328947368421 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 70 / 76
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (3, 1), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0324675324675 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 71 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (3, 6), destination = (8, 4), deadline = 35
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0320512820513 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 72 / 78
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (7, 1), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0316455696203 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 73 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (7, 5), destination = (1, 2), deadline = 45
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 74 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (7, 1), destination = (2, 5), deadline = 45
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0308641975309 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 75 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (2, 4), destination = (5, 1), deadline = 30
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.030487804878 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 76 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (1, 4), destination = (6, 4), deadline = 25
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0301204819277 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 77 / 83
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (1, 2), destination = (6, 6), deadline = 45
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0297619047619 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 78 / 84
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (8, 6), destination = (2, 5), deadline = 35
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 79 / 85
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (2, 3), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0290697674419 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 80 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (8, 1), destination = (8, 6), deadline = 25
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0287356321839 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 81 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (5, 3), destination = (7, 6), deadline = 25
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0284090909091 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 82 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (2, 6), destination = (3, 2), deadline = 25
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0280898876404 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 83 / 89
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (8, 6), destination = (4, 3), deadline = 35
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 84 / 90
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (6, 4), destination = (1, 3), deadline = 30
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0274725274725 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 85 / 91
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (6, 6), destination = (1, 6), deadline = 25
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0271739130435 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 86 / 92
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (5, 1), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0268817204301 , self.eps_freq:  38.0 

success: 86 / 93
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (7, 1), destination = (3, 4), deadline = 35
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0265957446809 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 87 / 94
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (1, 1), destination = (8, 4), deadline = 50
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 88 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (7, 6), destination = (1, 2), deadline = 50
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0260416666667 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 89 / 96
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (8, 4), destination = (3, 1), deadline = 40
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0257731958763 , self.eps_freq:  39.0 

success: 89 / 97
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (3, 2), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0255102040816 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 90 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (2, 2), destination = (5, 4), deadline = 25
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0252525252525 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 91 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (8, 4), destination = (3, 2), deadline = 35
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 92 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99379
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.50000
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04216
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01163
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05080
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.51587
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01136
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.11172
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.05540
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.00128
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01515
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.23264
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06316
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.25000
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02500
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.17366
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00451
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02206
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01852
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05263
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03333
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.65445
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.25629
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05173
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.67119
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02051
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99362
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02857
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01449
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05882
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.76108
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.15514
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.41053
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01408
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.01134
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 3.63423
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.99053
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.12461
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 1.38017
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.98704
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.11102
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.00376
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.25594
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.13711
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.53089
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.43552
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 3.07342
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.06804
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 3.02609
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.05368
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.05252
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.00999
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: -0.25000
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.52093
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.07523
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.97362
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: -0.03687
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.03887
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.50004
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 3.69738
--------------------------------------------------------------------------------
updated cells:  60 , self.total_cell_count: 2048 , updated_func_counter: 1478
self.alpha: 0.7 self.gamma: 0.05 , self.epsilon: 0.5 , success: 92  in steps:  20
________________________________________________________________________________
gma = 0.05
eps = 0.2
alp = 0.7
epsilon:  0.2
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (4, 1), destination = (1, 3), deadline = 25
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 1.0 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.0 , action:  right , deadline: 25
annealing now. self.epsilon: 1.0 , action:  None , deadline: 24
annealing now. self.epsilon: 1.0 , action:  left , deadline: 23
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 22
annealing now. self.epsilon: 1.0 , action:  left , deadline: 21
annealing now. self.epsilon: 1.0 , action:  None , deadline: 20
annealing now. self.epsilon: 1.0 , action:  None , deadline: 19
annealing now. self.epsilon: 1.0 , action:  left , deadline: 18
annealing now. self.epsilon: 1.0 , action:  left , deadline: 17
annealing now. self.epsilon: 1.0 , action:  left , deadline: 16
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 15
annealing now. self.epsilon: 1.0 , action:  right , deadline: 14
annealing now. self.epsilon: 1.0 , action:  None , deadline: 13
annealing now. self.epsilon: 1.0 , action:  None , deadline: 12
annealing now. self.epsilon: 1.0 , action:  right , deadline: 11
annealing now. self.epsilon: 1.0 , action:  None , deadline: 10
annealing now. self.epsilon: 1.0 , action:  left , deadline: 9
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 8
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 7
annealing now. self.epsilon: 1.0 , action:  None , deadline: 6
annealing now. self.epsilon: 1.0 , action:  left , deadline: 5
annealing now. self.epsilon: 1.0 , action:  left , deadline: 4
annealing now. self.epsilon: 1.0 , action:  right , deadline: 3
annealing now. self.epsilon: 1.0 , action:  right , deadline: 2
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (1, 5), destination = (5, 3), deadline = 30
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  left , deadline: 30
annealing now. self.epsilon: 0.5 , action:  None , deadline: 28
annealing now. self.epsilon: 0.5 , action:  None , deadline: 26
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.5 , action:  right , deadline: 22
annealing now. self.epsilon: 0.5 , action:  right , deadline: 20
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.5 , action:  None , deadline: 16
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 14
annealing now. self.epsilon: 0.5 , action:  left , deadline: 12
annealing now. self.epsilon: 0.5 , action:  right , deadline: 10
annealing now. self.epsilon: 0.5 , action:  None , deadline: 8
annealing now. self.epsilon: 0.5 , action:  right , deadline: 6
annealing now. self.epsilon: 0.5 , action:  None , deadline: 4
success: 0 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (1, 6), destination = (7, 4), deadline = 40
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.333333333333 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.333333333333 , action:  None , deadline: 39
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 36
annealing now. self.epsilon: 0.333333333333 , action:  None , deadline: 33
annealing now. self.epsilon: 0.333333333333 , action:  None , deadline: 30
annealing now. self.epsilon: 0.333333333333 , action:  right , deadline: 27
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 24
annealing now. self.epsilon: 0.333333333333 , action:  right , deadline: 21
annealing now. self.epsilon: 0.333333333333 , action:  right , deadline: 18
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 15
annealing now. self.epsilon: 0.333333333333 , action:  None , deadline: 12
annealing now. self.epsilon: 0.333333333333 , action:  None , deadline: 9
annealing now. self.epsilon: 0.333333333333 , action:  forward , deadline: 6
success: 0 / 3
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (3, 6), destination = (3, 2), deadline = 20
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  None , deadline: 20
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 1 / 4
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (2, 5), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.2 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.2 , action:  left , deadline: 20
annealing now. self.epsilon: 0.2 , action:  None , deadline: 15
annealing now. self.epsilon: 0.2 , action:  right , deadline: 10
success: 1 / 5
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (5, 3), destination = (8, 5), deadline = 25
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  left , deadline: 24
annealing now. self.epsilon: 0.166666666667 , action:  left , deadline: 18
annealing now. self.epsilon: 0.166666666667 , action:  forward , deadline: 12
success: 1 / 6
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (2, 6), destination = (8, 1), deadline = 55
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.142857142857 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.142857142857 , action:  left , deadline: 49
annealing now. self.epsilon: 0.142857142857 , action:  None , deadline: 42
annealing now. self.epsilon: 0.142857142857 , action:  left , deadline: 35
annealing now. self.epsilon: 0.142857142857 , action:  forward , deadline: 28
annealing now. self.epsilon: 0.142857142857 , action:  right , deadline: 21
annealing now. self.epsilon: 0.142857142857 , action:  forward , deadline: 14
success: 1 / 7
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (8, 1), destination = (6, 6), deadline = 35
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  forward , deadline: 32
annealing now. self.epsilon: 0.125 , action:  left , deadline: 24
annealing now. self.epsilon: 0.125 , action:  left , deadline: 16
success: 1 / 8
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (6, 2), destination = (2, 3), deadline = 25
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.111111111111 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.111111111111 , action:  None , deadline: 18
success: 1 / 9
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (4, 4), destination = (7, 5), deadline = 20
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  left , deadline: 20
success: 1 / 10
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (8, 5), destination = (1, 5), deadline = 35
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0909090909091 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0909090909091 , action:  forward , deadline: 33
annealing now. self.epsilon: 0.0909090909091 , action:  None , deadline: 22
success: 1 / 11
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (4, 5), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

success: 1 / 12
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (1, 5), destination = (8, 1), deadline = 55
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0769230769231 , self.eps_freq:  13.0 

annealing now. self.epsilon: 0.0769230769231 , action:  forward , deadline: 52
annealing now. self.epsilon: 0.0769230769231 , action:  right , deadline: 39
annealing now. self.epsilon: 0.0769230769231 , action:  left , deadline: 26
success: 1 / 13
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (8, 4), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

success: 1 / 14
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (7, 6), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0666666666667 , self.eps_freq:  15.0 

success: 1 / 15
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 5), deadline = 30
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

success: 1 / 16
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (8, 3), destination = (1, 3), deadline = 35
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0588235294118 , self.eps_freq:  17.0 

annealing now. self.epsilon: 0.0588235294118 , action:  forward , deadline: 34
success: 1 / 17
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (1, 4), destination = (6, 2), deadline = 35
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

success: 1 / 18
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (4, 6), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0526315789474 , self.eps_freq:  19.0 

success: 1 / 19
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (8, 6), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.05 , self.eps_freq:  20.0 

success: 1 / 20
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (8, 4), destination = (3, 6), deadline = 35
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.047619047619 , self.eps_freq:  21.0 

success: 1 / 21
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (2, 6), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

success: 1 / 22
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (8, 5), destination = (5, 6), deadline = 20
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0434782608696 , self.eps_freq:  23.0 

success: 1 / 23
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (3, 3), destination = (1, 5), deadline = 20
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

success: 1 / 24
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (6, 2), destination = (1, 1), deadline = 30
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.04 , self.eps_freq:  25.0 

success: 1 / 25
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (2, 5), destination = (7, 5), deadline = 25
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

success: 1 / 26
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (2, 3), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.037037037037 , self.eps_freq:  27.0 

success: 1 / 27
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (3, 2), destination = (8, 3), deadline = 30
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

success: 1 / 28
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (6, 6), destination = (2, 3), deadline = 35
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0344827586207 , self.eps_freq:  29.0 

success: 1 / 29
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (3, 2), destination = (8, 5), deadline = 40
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

success: 1 / 30
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (3, 3), destination = (7, 4), deadline = 25
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0322580645161 , self.eps_freq:  31.0 

success: 1 / 31
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (5, 3), destination = (3, 1), deadline = 20
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

success: 1 / 32
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (5, 2), destination = (2, 6), deadline = 35
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.030303030303 , self.eps_freq:  33.0 

success: 1 / 33
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (4, 5), destination = (7, 6), deadline = 20
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

success: 1 / 34
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (4, 1), destination = (3, 5), deadline = 25
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0285714285714 , self.eps_freq:  35.0 

success: 1 / 35
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (5, 5), destination = (1, 2), deadline = 35
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

success: 1 / 36
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (7, 6), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.027027027027 , self.eps_freq:  37.0 

success: 1 / 37
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (3, 5), destination = (8, 3), deadline = 35
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

success: 1 / 38
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (2, 6), destination = (4, 3), deadline = 25
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.025641025641 , self.eps_freq:  39.0 

success: 1 / 39
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (1, 4), destination = (7, 3), deadline = 35
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.025 , self.eps_freq:  40.0 

success: 1 / 40
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (1, 5), destination = (4, 3), deadline = 25
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0243902439024 , self.eps_freq:  41.0 

success: 1 / 41
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (8, 4), destination = (4, 1), deadline = 35
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

success: 1 / 42
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (7, 2), destination = (1, 2), deadline = 30
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0232558139535 , self.eps_freq:  43.0 

success: 1 / 43
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (8, 1), destination = (2, 4), deadline = 45
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

success: 1 / 44
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (8, 1), destination = (8, 5), deadline = 20
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0222222222222 , self.eps_freq:  45.0 

success: 1 / 45
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (2, 2), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

success: 1 / 46
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (5, 1), destination = (6, 4), deadline = 20
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0212765957447 , self.eps_freq:  47.0 

success: 1 / 47
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (6, 2), destination = (1, 2), deadline = 25
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

success: 1 / 48
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (5, 2), destination = (7, 5), deadline = 25
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0204081632653 , self.eps_freq:  50.0 

success: 1 / 49
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (8, 3), destination = (4, 2), deadline = 25
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.02 , self.eps_freq:  50.0 

success: 1 / 50
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (8, 6), destination = (1, 6), deadline = 35
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0196078431373 , self.eps_freq:  51.0 

success: 1 / 51
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (6, 2), destination = (1, 6), deadline = 45
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

success: 1 / 52
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (4, 4), destination = (8, 1), deadline = 35
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0188679245283 , self.eps_freq:  53.0 

success: 1 / 53
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (6, 3), destination = (8, 5), deadline = 20
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

success: 1 / 54
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (6, 1), destination = (1, 6), deadline = 50
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0181818181818 , self.eps_freq:  55.0 

success: 1 / 55
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (3, 3), destination = (8, 2), deadline = 30
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

success: 1 / 56
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (5, 2), destination = (8, 4), deadline = 25
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0175438596491 , self.eps_freq:  57.0 

success: 1 / 57
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (8, 4), destination = (1, 2), deadline = 45
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

success: 1 / 58
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (2, 1), destination = (8, 5), deadline = 50
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0169491525424 , self.eps_freq:  59.0 

success: 1 / 59
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (4, 5), destination = (8, 6), deadline = 25
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

success: 1 / 60
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (6, 3), destination = (3, 5), deadline = 25
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.016393442623 , self.eps_freq:  61.0 

success: 1 / 61
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (3, 1), destination = (8, 6), deadline = 50
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

success: 1 / 62
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (1, 3), destination = (6, 4), deadline = 30
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.015873015873 , self.eps_freq:  63.0 

success: 1 / 63
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (6, 3), destination = (1, 5), deadline = 35
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

success: 1 / 64
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (1, 5), destination = (6, 6), deadline = 30
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0153846153846 , self.eps_freq:  65.0 

success: 1 / 65
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 2), deadline = 45
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

success: 1 / 66
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (7, 5), destination = (6, 1), deadline = 25
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0149253731343 , self.eps_freq:  67.0 

success: 1 / 67
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (6, 1), destination = (4, 5), deadline = 30
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

Environment.act(): Primary agent has reached destination!
success: 2 / 68
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (3, 4), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0144927536232 , self.eps_freq:  69.0 

success: 2 / 69
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (4, 5), destination = (8, 4), deadline = 25
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

success: 2 / 70
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (3, 1), destination = (7, 4), deadline = 35
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0140845070423 , self.eps_freq:  71.0 

success: 2 / 71
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (1, 1), destination = (7, 5), deadline = 50
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

success: 2 / 72
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (5, 2), destination = (1, 4), deadline = 30
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.013698630137 , self.eps_freq:  73.0 

success: 2 / 73
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (7, 2), destination = (2, 2), deadline = 25
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

success: 2 / 74
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (3, 1), destination = (8, 6), deadline = 50
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0133333333333 , self.eps_freq:  75.0 

success: 2 / 75
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (2, 1), destination = (8, 4), deadline = 45
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

success: 2 / 76
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (8, 3), destination = (1, 2), deadline = 40
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.012987012987 , self.eps_freq:  77.0 

success: 2 / 77
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (8, 5), destination = (5, 1), deadline = 35
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

success: 2 / 78
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (8, 1), destination = (5, 4), deadline = 30
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0126582278481 , self.eps_freq:  79.0 

success: 2 / 79
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (7, 2), destination = (6, 5), deadline = 20
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

success: 2 / 80
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (3, 2), destination = (6, 4), deadline = 25
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0123456790123 , self.eps_freq:  81.0 

success: 2 / 81
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (1, 2), destination = (5, 3), deadline = 25
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

success: 2 / 82
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (2, 4), destination = (8, 6), deadline = 40
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0120481927711 , self.eps_freq:  83.0 

success: 2 / 83
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (7, 3), destination = (2, 6), deadline = 40
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

success: 2 / 84
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (8, 1), destination = (5, 3), deadline = 25
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0117647058824 , self.eps_freq:  85.0 

success: 2 / 85
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (4, 6), destination = (2, 4), deadline = 20
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

success: 2 / 86
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (1, 1), destination = (4, 5), deadline = 35
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0114942528736 , self.eps_freq:  87.0 

success: 2 / 87
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (2, 2), destination = (7, 6), deadline = 45
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

success: 2 / 88
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (4, 1), destination = (7, 6), deadline = 40
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0112359550562 , self.eps_freq:  89.0 

success: 2 / 89
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (3, 3), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

success: 2 / 90
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (8, 2), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.010989010989 , self.eps_freq:  91.0 

success: 2 / 91
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (3, 3), destination = (6, 4), deadline = 20
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

success: 2 / 92
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (5, 2), destination = (3, 6), deadline = 30
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.010752688172 , self.eps_freq:  93.0 

success: 2 / 93
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (4, 2), destination = (2, 5), deadline = 25
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

success: 2 / 94
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (8, 2), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0105263157895 , self.eps_freq:  95.0 

success: 2 / 95
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (4, 4), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

success: 2 / 96
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (2, 3), destination = (5, 2), deadline = 20
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0103092783505 , self.eps_freq:  97.0 

success: 2 / 97
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (2, 4), destination = (5, 6), deadline = 25
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

success: 2 / 98
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (8, 4), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.010101010101 , self.eps_freq:  99.0 

success: 2 / 99
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (2, 1), destination = (4, 6), deadline = 35
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.01 , self.eps_freq:  100.0 

success: 2 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99387
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04983
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06439
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10746
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06267
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.18341
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07979
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.33062
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12500
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.89835
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04762
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.02680
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.44424
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.28045
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.65450
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08187
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.47847
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.16441
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02235
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.89893
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99859
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01493
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.05047
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01639
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01786
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00047
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.14286
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.03816
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03030
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01515
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.00879
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.28896
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.12498
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.50006
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.49668
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.54109
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.53052
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.39904
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.20957
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.13928
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 1.35882
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.51703
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.24383
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.55095
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.00562
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.42930
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.98889
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.51250
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.11521
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.98339
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: -1.00000
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 2.41600
--------------------------------------------------------------------------------
updated cells:  52 , self.total_cell_count: 2048 , updated_func_counter: 3116
self.alpha: 0.7 self.gamma: 0.05 , self.epsilon: 0.2 , success: 2  in steps:  0
________________________________________________________________________________
Environment.reset(): Primary agent could not reach destination within deadline!
gma = 0.05
eps = 0.1
alp = 0.7
epsilon:  0.1
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (2, 4), destination = (3, 1), deadline = 20
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.5 , action:  left , deadline: 16
annealing now. self.epsilon: 0.5 , action:  left , deadline: 14
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 12
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 10
annealing now. self.epsilon: 0.5 , action:  right , deadline: 8
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 6
annealing now. self.epsilon: 0.5 , action:  left , deadline: 4
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (4, 6), destination = (6, 1), deadline = 35
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  None , deadline: 32
annealing now. self.epsilon: 0.25 , action:  left , deadline: 28
annealing now. self.epsilon: 0.25 , action:  right , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 1 / 2
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (3, 5), destination = (7, 5), deadline = 20
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 18
annealing now. self.epsilon: 0.166666666667 , action:  left , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 2 / 3
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (8, 1), destination = (1, 6), deadline = 60
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  None , deadline: 56
annealing now. self.epsilon: 0.125 , action:  right , deadline: 48
annealing now. self.epsilon: 0.125 , action:  left , deadline: 40
annealing now. self.epsilon: 0.125 , action:  None , deadline: 32
annealing now. self.epsilon: 0.125 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.125 , action:  right , deadline: 16
success: 2 / 4
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (8, 5), destination = (7, 1), deadline = 25
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  right , deadline: 20
success: 2 / 5
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (5, 5), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

success: 2 / 6
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (7, 5), destination = (3, 1), deadline = 40
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0714285714286 , action:  None , deadline: 28
success: 2 / 7
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (5, 6), destination = (6, 1), deadline = 30
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 3 / 8
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (6, 5), destination = (3, 6), deadline = 20
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

success: 3 / 9
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (4, 1), destination = (2, 4), deadline = 25
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.05 , self.eps_freq:  20.0 

success: 3 / 10
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (6, 1), destination = (8, 5), deadline = 30
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

success: 3 / 11
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (5, 5), destination = (2, 4), deadline = 20
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

success: 3 / 12
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (2, 1), destination = (6, 6), deadline = 45
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

success: 3 / 13
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (2, 3), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

success: 3 / 14
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (2, 4), destination = (5, 2), deadline = 25
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

success: 3 / 15
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (8, 4), destination = (1, 3), deadline = 40
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

success: 3 / 16
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (5, 6), destination = (3, 1), deadline = 35
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

success: 3 / 17
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (6, 4), destination = (3, 2), deadline = 25
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

success: 3 / 18
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (7, 5), destination = (4, 6), deadline = 20
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

success: 3 / 19
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (1, 6), destination = (2, 1), deadline = 30
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.025 , self.eps_freq:  40.0 

success: 3 / 20
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (8, 3), destination = (2, 5), deadline = 40
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

success: 3 / 21
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (4, 3), destination = (7, 2), deadline = 20
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

success: 3 / 22
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (4, 6), destination = (1, 4), deadline = 25
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

success: 3 / 23
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (7, 3), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

success: 3 / 24
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (4, 4), destination = (8, 3), deadline = 25
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.02 , self.eps_freq:  50.0 

success: 3 / 25
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (8, 6), destination = (7, 2), deadline = 25
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

success: 3 / 26
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (5, 1), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

success: 3 / 27
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (2, 6), destination = (6, 1), deadline = 45
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

success: 3 / 28
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (7, 3), destination = (1, 2), deadline = 35
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

success: 3 / 29
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (3, 2), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

success: 3 / 30
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (3, 4), destination = (5, 6), deadline = 20
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

success: 3 / 31
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (7, 2), destination = (4, 1), deadline = 20
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

success: 3 / 32
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (1, 5), destination = (8, 3), deadline = 45
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

success: 3 / 33
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (7, 5), destination = (1, 6), deadline = 35
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

success: 3 / 34
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (7, 3), destination = (1, 1), deadline = 40
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

success: 3 / 35
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (1, 3), destination = (5, 6), deadline = 35
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

success: 3 / 36
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (2, 3), destination = (7, 5), deadline = 35
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

success: 3 / 37
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (1, 3), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

success: 3 / 38
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (8, 2), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

success: 3 / 39
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (3, 4), destination = (1, 1), deadline = 25
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

success: 3 / 40
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (7, 6), destination = (3, 3), deadline = 35
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

success: 3 / 41
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (8, 4), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

success: 3 / 42
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (8, 5), destination = (8, 1), deadline = 20
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

success: 3 / 43
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (8, 3), destination = (3, 6), deadline = 40
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

success: 3 / 44
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (6, 1), destination = (3, 5), deadline = 35
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

success: 3 / 45
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (1, 3), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

success: 3 / 46
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (5, 6), destination = (7, 4), deadline = 20
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

Environment.act(): Primary agent has reached destination!
success: 4 / 47
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (8, 4), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

success: 4 / 48
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (7, 4), destination = (3, 5), deadline = 25
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

success: 4 / 49
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (2, 5), destination = (3, 2), deadline = 20
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.01 , self.eps_freq:  100.0 

success: 4 / 50
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (4, 1), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.00980392156863 , self.eps_freq:  102.0 

success: 4 / 51
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (8, 2), destination = (7, 5), deadline = 20
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.00961538461538 , self.eps_freq:  104.0 

success: 4 / 52
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (1, 5), destination = (7, 6), deadline = 35
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.00943396226415 , self.eps_freq:  106.0 

success: 4 / 53
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (3, 3), destination = (8, 1), deadline = 35
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00925925925926 , self.eps_freq:  108.0 

success: 4 / 54
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (3, 3), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.00909090909091 , self.eps_freq:  110.0 

success: 4 / 55
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (1, 3), destination = (6, 4), deadline = 30
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.00892857142857 , self.eps_freq:  112.0 

success: 4 / 56
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (7, 1), destination = (1, 4), deadline = 45
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.00877192982456 , self.eps_freq:  114.0 

success: 4 / 57
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (8, 5), destination = (5, 2), deadline = 30
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.00862068965517 , self.eps_freq:  116.0 

success: 4 / 58
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (6, 2), destination = (8, 5), deadline = 25
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.00847457627119 , self.eps_freq:  118.0 

success: 4 / 59
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (1, 1), destination = (7, 5), deadline = 50
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.00833333333333 , self.eps_freq:  120.0 

success: 4 / 60
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (8, 5), destination = (3, 4), deadline = 30
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.00819672131148 , self.eps_freq:  122.0 

success: 4 / 61
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (7, 4), destination = (8, 1), deadline = 20
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00806451612903 , self.eps_freq:  124.0 

success: 4 / 62
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (3, 2), destination = (2, 6), deadline = 25
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.00793650793651 , self.eps_freq:  126.0 

success: 4 / 63
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (8, 2), destination = (6, 6), deadline = 30
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0078125 , self.eps_freq:  128.0 

success: 4 / 64
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (3, 4), destination = (6, 5), deadline = 20
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.00769230769231 , self.eps_freq:  130.0 

success: 4 / 65
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (3, 2), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.00757575757576 , self.eps_freq:  132.0 

success: 4 / 66
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (8, 1), destination = (1, 3), deadline = 45
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.00746268656716 , self.eps_freq:  134.0 

success: 4 / 67
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (8, 1), destination = (7, 4), deadline = 20
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.00735294117647 , self.eps_freq:  136.0 

Environment.act(): Primary agent has reached destination!
success: 5 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (6, 1), destination = (1, 3), deadline = 35
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.00724637681159 , self.eps_freq:  138.0 

Environment.act(): Primary agent has reached destination!
success: 6 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (8, 1), destination = (6, 6), deadline = 35
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.00714285714286 , self.eps_freq:  140.0 

success: 6 / 70
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (4, 5), destination = (3, 1), deadline = 25
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.00704225352113 , self.eps_freq:  142.0 

success: 6 / 71
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (3, 4), destination = (7, 1), deadline = 35
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.00694444444444 , self.eps_freq:  144.0 

success: 6 / 72
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (2, 6), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.00684931506849 , self.eps_freq:  146.0 

Environment.act(): Primary agent has reached destination!
success: 7 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (3, 4), destination = (8, 2), deadline = 35
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.00675675675676 , self.eps_freq:  148.0 

success: 7 / 74
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (8, 5), destination = (1, 6), deadline = 40
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.00666666666667 , self.eps_freq:  150.0 

success: 7 / 75
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (6, 6), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.00657894736842 , self.eps_freq:  152.0 

success: 7 / 76
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (8, 4), destination = (4, 3), deadline = 25
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.00649350649351 , self.eps_freq:  154.0 

success: 7 / 77
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (6, 5), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.00641025641026 , self.eps_freq:  156.0 

success: 7 / 78
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (5, 2), destination = (6, 5), deadline = 20
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.00632911392405 , self.eps_freq:  158.0 

success: 7 / 79
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (3, 4), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.00625 , self.eps_freq:  160.0 

success: 7 / 80
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (7, 2), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.00617283950617 , self.eps_freq:  162.0 

success: 7 / 81
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (6, 6), destination = (8, 4), deadline = 20
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.00609756097561 , self.eps_freq:  164.0 

success: 7 / 82
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (4, 3), destination = (7, 1), deadline = 25
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.00602409638554 , self.eps_freq:  166.0 

success: 7 / 83
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (6, 3), destination = (2, 1), deadline = 30
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.00595238095238 , self.eps_freq:  168.0 

success: 7 / 84
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (2, 2), destination = (1, 5), deadline = 20
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.00588235294118 , self.eps_freq:  170.0 

success: 7 / 85
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (5, 6), destination = (8, 1), deadline = 40
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00581395348837 , self.eps_freq:  172.0 

Environment.act(): Primary agent has reached destination!
success: 8 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (2, 2), destination = (8, 1), deadline = 35
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00574712643678 , self.eps_freq:  174.0 

success: 8 / 87
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (2, 6), destination = (7, 5), deadline = 30
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.00568181818182 , self.eps_freq:  176.0 

success: 8 / 88
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (5, 6), destination = (1, 4), deadline = 30
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.00561797752809 , self.eps_freq:  178.0 

success: 8 / 89
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (3, 1), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.00555555555556 , self.eps_freq:  180.0 

success: 8 / 90
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (3, 1), destination = (2, 6), deadline = 30
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.00549450549451 , self.eps_freq:  182.0 

Environment.act(): Primary agent has reached destination!
success: 9 / 91
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (5, 4), destination = (7, 6), deadline = 20
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0054347826087 , self.eps_freq:  184.0 

success: 9 / 92
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (2, 6), destination = (6, 2), deadline = 40
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.00537634408602 , self.eps_freq:  186.0 

success: 9 / 93
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (4, 6), destination = (3, 2), deadline = 25
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.00531914893617 , self.eps_freq:  188.0 

success: 9 / 94
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (1, 6), destination = (8, 6), deadline = 35
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.00526315789474 , self.eps_freq:  190.0 

Environment.act(): Primary agent has reached destination!
success: 10 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (2, 6), destination = (3, 3), deadline = 20
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.00520833333333 , self.eps_freq:  192.0 

success: 10 / 96
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (1, 1), destination = (6, 4), deadline = 40
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.00515463917526 , self.eps_freq:  194.0 

success: 10 / 97
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (6, 1), destination = (7, 4), deadline = 20
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.00510204081633 , self.eps_freq:  197.0 

success: 10 / 98
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (1, 3), destination = (7, 1), deadline = 40
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.00505050505051 , self.eps_freq:  198.0 

success: 10 / 99
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (8, 1), destination = (7, 5), deadline = 25
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.005 , self.eps_freq:  200.0 

success: 10 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00975
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.34761
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.44584
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01667
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.21442
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.02137
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10662
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.19520
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99377
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07558
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06722
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10124
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03526
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.15225
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12260
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.21179
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09336
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02000
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03125
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.00773
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01020
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.01899
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12248
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.19041
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.34909
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.11141
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.45173
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06305
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03854
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.01266
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05085
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03030
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99990
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01887
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.01902
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.59266
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 2.43829
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.99376
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.50134
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.00000
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.51250
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.10000
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.14619
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50475
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50000
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.10561
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.32911
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.50000
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.00298
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.50000
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.49695
--------------------------------------------------------------------------------
updated cells:  51 , self.total_cell_count: 2048 , updated_func_counter: 2777
self.alpha: 0.7 self.gamma: 0.05 , self.epsilon: 0.1 , success: 10  in steps:  0
________________________________________________________________________________
Environment.reset(): Primary agent could not reach destination within deadline!
gma = 0.1
eps = 0.5
alp = 0.7
epsilon:  0.5
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (2, 1), destination = (1, 4), deadline = 20
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 2.5 , self.eps_freq:  1.0 

annealing now. self.epsilon: 2.5 , action:  right , deadline: 20
annealing now. self.epsilon: 2.5 , action:  right , deadline: 19
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 18
annealing now. self.epsilon: 2.5 , action:  right , deadline: 17
annealing now. self.epsilon: 2.5 , action:  right , deadline: 16
annealing now. self.epsilon: 2.5 , action:  right , deadline: 15
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 14
annealing now. self.epsilon: 2.5 , action:  left , deadline: 13
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 12
annealing now. self.epsilon: 2.5 , action:  left , deadline: 11
annealing now. self.epsilon: 2.5 , action:  right , deadline: 10
annealing now. self.epsilon: 2.5 , action:  right , deadline: 9
annealing now. self.epsilon: 2.5 , action:  right , deadline: 8
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 7
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 6
annealing now. self.epsilon: 2.5 , action:  right , deadline: 5
annealing now. self.epsilon: 2.5 , action:  None , deadline: 4
annealing now. self.epsilon: 2.5 , action:  right , deadline: 3
annealing now. self.epsilon: 2.5 , action:  left , deadline: 2
Environment.act(): Primary agent has reached destination!
success: 1 / 1
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (6, 5), destination = (8, 1), deadline = 30
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 1.25 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.25 , action:  None , deadline: 30
annealing now. self.epsilon: 1.25 , action:  None , deadline: 29
annealing now. self.epsilon: 1.25 , action:  left , deadline: 28
annealing now. self.epsilon: 1.25 , action:  left , deadline: 27
annealing now. self.epsilon: 1.25 , action:  None , deadline: 26
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 25
annealing now. self.epsilon: 1.25 , action:  right , deadline: 24
annealing now. self.epsilon: 1.25 , action:  right , deadline: 23
annealing now. self.epsilon: 1.25 , action:  right , deadline: 22
annealing now. self.epsilon: 1.25 , action:  None , deadline: 21
annealing now. self.epsilon: 1.25 , action:  None , deadline: 20
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 19
annealing now. self.epsilon: 1.25 , action:  right , deadline: 18
annealing now. self.epsilon: 1.25 , action:  None , deadline: 17
annealing now. self.epsilon: 1.25 , action:  right , deadline: 16
annealing now. self.epsilon: 1.25 , action:  None , deadline: 15
annealing now. self.epsilon: 1.25 , action:  left , deadline: 14
annealing now. self.epsilon: 1.25 , action:  left , deadline: 13
annealing now. self.epsilon: 1.25 , action:  None , deadline: 12
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 11
Environment.act(): Primary agent has reached destination!
success: 2 / 2
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (8, 6), destination = (2, 3), deadline = 45
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.833333333333 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 44
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 42
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 40
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 38
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 36
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 34
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 32
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 30
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 28
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 26
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 22
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 20
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 14
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 12
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 10
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 8
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 6
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 4
success: 2 / 3
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (8, 4), destination = (4, 1), deadline = 35
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.625 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.625 , action:  left , deadline: 34
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 32
annealing now. self.epsilon: 0.625 , action:  None , deadline: 30
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 28
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 26
annealing now. self.epsilon: 0.625 , action:  left , deadline: 24
annealing now. self.epsilon: 0.625 , action:  None , deadline: 22
annealing now. self.epsilon: 0.625 , action:  left , deadline: 20
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 3 / 4
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (2, 5), destination = (7, 1), deadline = 45
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  None , deadline: 44
annealing now. self.epsilon: 0.5 , action:  left , deadline: 42
annealing now. self.epsilon: 0.5 , action:  None , deadline: 40
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 38
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 36
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 34
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 32
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.5 , action:  None , deadline: 28
annealing now. self.epsilon: 0.5 , action:  left , deadline: 26
annealing now. self.epsilon: 0.5 , action:  right , deadline: 24
annealing now. self.epsilon: 0.5 , action:  left , deadline: 22
annealing now. self.epsilon: 0.5 , action:  left , deadline: 20
annealing now. self.epsilon: 0.5 , action:  None , deadline: 18
annealing now. self.epsilon: 0.5 , action:  None , deadline: 16
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 14
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 12
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 10
Environment.act(): Primary agent has reached destination!
success: 4 / 5
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (7, 3), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.416666666667 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.416666666667 , action:  None , deadline: 24
annealing now. self.epsilon: 0.416666666667 , action:  left , deadline: 21
annealing now. self.epsilon: 0.416666666667 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.416666666667 , action:  forward , deadline: 15
annealing now. self.epsilon: 0.416666666667 , action:  None , deadline: 12
annealing now. self.epsilon: 0.416666666667 , action:  forward , deadline: 9
Environment.act(): Primary agent has reached destination!
success: 5 / 6
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (7, 6), destination = (2, 2), deadline = 45
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.357142857143 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 45
annealing now. self.epsilon: 0.357142857143 , action:  forward , deadline: 42
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 39
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 36
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 33
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 30
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 27
annealing now. self.epsilon: 0.357142857143 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 21
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 18
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 15
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 12
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 9
Environment.act(): Primary agent has reached destination!
success: 6 / 7
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (6, 3), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.3125 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.3125 , action:  left , deadline: 20
annealing now. self.epsilon: 0.3125 , action:  right , deadline: 16
annealing now. self.epsilon: 0.3125 , action:  None , deadline: 12
annealing now. self.epsilon: 0.3125 , action:  left , deadline: 8
Environment.act(): Primary agent has reached destination!
success: 7 / 8
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (7, 4), destination = (2, 5), deadline = 30
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.277777777778 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.277777777778 , action:  left , deadline: 28
Environment.act(): Primary agent has reached destination!
success: 8 / 9
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (5, 2), destination = (7, 6), deadline = 30
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  left , deadline: 28
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 9 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (7, 1), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.227272727273 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.227272727273 , action:  left , deadline: 25
annealing now. self.epsilon: 0.227272727273 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.227272727273 , action:  right , deadline: 15
annealing now. self.epsilon: 0.227272727273 , action:  forward , deadline: 10
Environment.act(): Primary agent has reached destination!
success: 10 / 11
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (6, 1), destination = (1, 6), deadline = 50
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.208333333333 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.208333333333 , action:  forward , deadline: 50
annealing now. self.epsilon: 0.208333333333 , action:  right , deadline: 45
annealing now. self.epsilon: 0.208333333333 , action:  None , deadline: 40
annealing now. self.epsilon: 0.208333333333 , action:  forward , deadline: 35
annealing now. self.epsilon: 0.208333333333 , action:  right , deadline: 30
annealing now. self.epsilon: 0.208333333333 , action:  right , deadline: 25
annealing now. self.epsilon: 0.208333333333 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.208333333333 , action:  right , deadline: 15
annealing now. self.epsilon: 0.208333333333 , action:  None , deadline: 10
Environment.act(): Primary agent has reached destination!
success: 11 / 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (6, 1), destination = (8, 3), deadline = 20
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.192307692308 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.192307692308 , action:  None , deadline: 18
annealing now. self.epsilon: 0.192307692308 , action:  forward , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 12 / 13
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (4, 2), destination = (8, 1), deadline = 25
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.178571428571 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.178571428571 , action:  forward , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 13 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (8, 1), destination = (2, 4), deadline = 45
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 42
annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 36
Environment.act(): Primary agent has reached destination!
success: 14 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (1, 1), destination = (5, 5), deadline = 40
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.15625 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.15625 , action:  right , deadline: 35
annealing now. self.epsilon: 0.15625 , action:  None , deadline: 28
annealing now. self.epsilon: 0.15625 , action:  None , deadline: 21
annealing now. self.epsilon: 0.15625 , action:  forward , deadline: 14
success: 14 / 16
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (8, 1), destination = (7, 5), deadline = 25
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.147058823529 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.147058823529 , action:  left , deadline: 21
Environment.act(): Primary agent has reached destination!
success: 15 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (1, 4), destination = (5, 6), deadline = 30
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.138888888889 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.138888888889 , action:  left , deadline: 24
annealing now. self.epsilon: 0.138888888889 , action:  right , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 16 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (1, 5), destination = (5, 3), deadline = 30
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.131578947368 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.131578947368 , action:  right , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 17 / 19
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (2, 4), destination = (7, 3), deadline = 30
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  right , deadline: 24
annealing now. self.epsilon: 0.125 , action:  forward , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 18 / 20
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (4, 3), destination = (1, 6), deadline = 30
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.119047619048 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.119047619048 , action:  right , deadline: 27
annealing now. self.epsilon: 0.119047619048 , action:  left , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 19 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (7, 2), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.113636363636 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.113636363636 , action:  right , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 20 / 22
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (8, 2), destination = (3, 6), deadline = 45
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.108695652174 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.108695652174 , action:  forward , deadline: 40
annealing now. self.epsilon: 0.108695652174 , action:  None , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 21 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (3, 2), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.104166666667 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.104166666667 , action:  left , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 22 / 24
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (7, 4), destination = (6, 1), deadline = 20
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  forward , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 23 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (1, 2), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0961538461538 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0961538461538 , action:  forward , deadline: 22
Environment.act(): Primary agent has reached destination!
success: 24 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (7, 5), destination = (3, 1), deadline = 40
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0925925925926 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0925925925926 , action:  None , deadline: 33
annealing now. self.epsilon: 0.0925925925926 , action:  right , deadline: 22
Environment.act(): Primary agent has reached destination!
success: 25 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (4, 4), destination = (8, 2), deadline = 30
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0892857142857 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0892857142857 , action:  left , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 26 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (1, 4), destination = (8, 2), deadline = 45
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0862068965517 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0862068965517 , action:  left , deadline: 36
Environment.act(): Primary agent has reached destination!
success: 27 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (4, 3), destination = (1, 2), deadline = 20
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 30
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (2, 2), destination = (3, 6), deadline = 25
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0806451612903 , self.eps_freq:  13.0 

success: 28 / 31
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (5, 1), destination = (1, 2), deadline = 25
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.078125 , self.eps_freq:  13.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (2, 2), destination = (3, 5), deadline = 20
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0757575757576 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 33
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (2, 2), destination = (1, 5), deadline = 20
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0735294117647 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 34
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (8, 3), destination = (1, 4), deadline = 40
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0714285714286 , action:  right , deadline: 28
Environment.act(): Primary agent has reached destination!
success: 32 / 35
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (3, 6), destination = (1, 4), deadline = 20
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0694444444444 , self.eps_freq:  15.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 36
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (5, 1), destination = (2, 6), deadline = 40
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0675675675676 , self.eps_freq:  15.0 

annealing now. self.epsilon: 0.0675675675676 , action:  None , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 34 / 37
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (1, 1), destination = (6, 4), deadline = 40
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0657894736842 , self.eps_freq:  16.0 

annealing now. self.epsilon: 0.0657894736842 , action:  right , deadline: 32
Environment.act(): Primary agent has reached destination!
success: 35 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (7, 2), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0641025641026 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (6, 1), destination = (7, 4), deadline = 20
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 40
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (5, 6), destination = (7, 3), deadline = 25
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0609756097561 , self.eps_freq:  17.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 41
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (2, 2), destination = (1, 6), deadline = 25
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0595238095238 , self.eps_freq:  17.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 42
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (1, 2), destination = (7, 1), deadline = 35
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0581395348837 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (3, 6), destination = (6, 3), deadline = 30
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0568181818182 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 44
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (6, 6), destination = (2, 3), deadline = 35
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (2, 5), destination = (5, 3), deadline = 25
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.054347826087 , self.eps_freq:  19.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 46
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (3, 2), destination = (8, 3), deadline = 30
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0531914893617 , self.eps_freq:  19.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 47
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (4, 6), destination = (2, 2), deadline = 30
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0520833333333 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (6, 4), destination = (1, 5), deadline = 30
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0510204081633 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (7, 1), destination = (8, 5), deadline = 25
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.05 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 47 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (2, 6), destination = (5, 1), deadline = 40
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0490196078431 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (8, 3), destination = (3, 4), deadline = 30
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0480769230769 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 52
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (7, 6), destination = (1, 2), deadline = 50
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0471698113208 , self.eps_freq:  22.0 

annealing now. self.epsilon: 0.0471698113208 , action:  forward , deadline: 44
Environment.act(): Primary agent has reached destination!
success: 50 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (4, 4), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0462962962963 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (7, 4), destination = (2, 1), deadline = 40
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (5, 6), destination = (2, 4), deadline = 25
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0446428571429 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 53 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (8, 4), destination = (4, 1), deadline = 35
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0438596491228 , self.eps_freq:  23.0 

success: 53 / 57
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (6, 2), destination = (3, 1), deadline = 20
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0431034482759 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 54 / 58
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (7, 6), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0423728813559 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 55 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (8, 1), destination = (3, 1), deadline = 25
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (2, 4), destination = (8, 5), deadline = 35
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0409836065574 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 57 / 61
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (8, 2), destination = (4, 4), deadline = 30
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0403225806452 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 58 / 62
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (3, 5), destination = (6, 1), deadline = 35
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0396825396825 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 59 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (7, 6), destination = (1, 3), deadline = 45
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0390625 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 60 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 5), deadline = 30
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 61 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (8, 3), destination = (1, 4), deadline = 40
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0378787878788 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 62 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (8, 3), destination = (3, 2), deadline = 30
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0373134328358 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 63 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (3, 3), destination = (1, 5), deadline = 20
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0367647058824 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 64 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (1, 2), destination = (4, 1), deadline = 20
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.036231884058 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 65 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (2, 5), destination = (1, 1), deadline = 25
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 66 / 70
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (6, 6), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0352112676056 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 67 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (7, 4), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0347222222222 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 68 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (4, 4), destination = (1, 5), deadline = 20
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0342465753425 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 69 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (8, 1), destination = (1, 3), deadline = 45
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0337837837838 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 70 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (5, 3), destination = (3, 6), deadline = 25
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 71 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (3, 6), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0328947368421 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 72 / 76
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (7, 5), destination = (2, 6), deadline = 30
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0324675324675 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 73 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (4, 1), destination = (1, 2), deadline = 20
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0320512820513 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 74 / 78
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (6, 1), destination = (2, 1), deadline = 20
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0316455696203 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 75 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (3, 2), destination = (8, 2), deadline = 25
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 76 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (1, 6), destination = (4, 2), deadline = 35
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0308641975309 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 77 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (4, 4), destination = (8, 3), deadline = 25
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.030487804878 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 78 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (1, 1), destination = (6, 1), deadline = 25
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0301204819277 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 79 / 83
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (2, 1), destination = (8, 5), deadline = 50
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0297619047619 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 80 / 84
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (3, 3), destination = (7, 4), deadline = 25
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 81 / 85
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (6, 2), destination = (3, 5), deadline = 30
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0290697674419 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 82 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (6, 2), destination = (7, 6), deadline = 25
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0287356321839 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 83 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (5, 5), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0284090909091 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 84 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (6, 4), destination = (1, 4), deadline = 25
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0280898876404 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 85 / 89
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (1, 1), destination = (8, 4), deadline = 50
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 86 / 90
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (8, 5), destination = (2, 4), deadline = 35
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0274725274725 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 87 / 91
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (1, 4), destination = (5, 2), deadline = 30
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0271739130435 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 88 / 92
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (2, 3), destination = (8, 2), deadline = 35
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0268817204301 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 89 / 93
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (7, 5), destination = (3, 4), deadline = 25
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0265957446809 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 90 / 94
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (1, 1), destination = (4, 4), deadline = 30
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 91 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (3, 2), destination = (3, 6), deadline = 20
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0260416666667 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 92 / 96
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (4, 1), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0257731958763 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 93 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (2, 6), destination = (8, 5), deadline = 35
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0255102040816 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 94 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (5, 4), destination = (6, 1), deadline = 20
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0252525252525 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 95 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (4, 4), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 96 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99226
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01087
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01639
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.33333
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05970
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.33922
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.23429
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.95532
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.09880
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07339
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.81990
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03814
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04840
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.15160
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03540
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12379
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.98196
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.51611
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.93533
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.20481
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.17636
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.18995
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.98118
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01786
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01111
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01639
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01020
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.02985
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04348
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05576
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04762
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.98848
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: -0.19443
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 3.56171
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.77591
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.33212
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.97186
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.54479
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.02553
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.05062
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.32402
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.53970
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.51345
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.19778
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.08641
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.95914
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.41930
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.56651
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 2.05031
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.35066
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.67162
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.85308
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: -0.16528
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: -0.26395
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.13116
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.10735
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.21568
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.20758
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.32849
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.02884
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 3.71753
--------------------------------------------------------------------------------
updated cells:  61 , self.total_cell_count: 2048 , updated_func_counter: 1635
self.alpha: 0.7 self.gamma: 0.1 , self.epsilon: 0.5 , success: 96  in steps:  5
________________________________________________________________________________
gma = 0.1
eps = 0.2
alp = 0.7
epsilon:  0.2
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (3, 4), destination = (8, 3), deadline = 30
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 1.0 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.0 , action:  right , deadline: 30
annealing now. self.epsilon: 1.0 , action:  None , deadline: 29
annealing now. self.epsilon: 1.0 , action:  left , deadline: 28
annealing now. self.epsilon: 1.0 , action:  None , deadline: 27
annealing now. self.epsilon: 1.0 , action:  right , deadline: 26
annealing now. self.epsilon: 1.0 , action:  right , deadline: 25
annealing now. self.epsilon: 1.0 , action:  left , deadline: 24
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 23
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 22
annealing now. self.epsilon: 1.0 , action:  left , deadline: 21
annealing now. self.epsilon: 1.0 , action:  right , deadline: 20
annealing now. self.epsilon: 1.0 , action:  left , deadline: 19
Environment.act(): Primary agent has reached destination!
success: 1 / 1
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (5, 1), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  left , deadline: 20
annealing now. self.epsilon: 0.5 , action:  left , deadline: 18
annealing now. self.epsilon: 0.5 , action:  None , deadline: 16
annealing now. self.epsilon: 0.5 , action:  None , deadline: 14
annealing now. self.epsilon: 0.5 , action:  left , deadline: 12
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 10
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 8
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 6
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 4
success: 1 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (7, 3), destination = (3, 2), deadline = 25
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.333333333333 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 24
annealing now. self.epsilon: 0.333333333333 , action:  None , deadline: 21
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 18
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 15
annealing now. self.epsilon: 0.333333333333 , action:  right , deadline: 12
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 9
Environment.act(): Primary agent has reached destination!
success: 2 / 3
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (2, 3), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.25 , action:  None , deadline: 16
annealing now. self.epsilon: 0.25 , action:  left , deadline: 12
annealing now. self.epsilon: 0.25 , action:  right , deadline: 8
success: 2 / 4
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (2, 1), destination = (4, 4), deadline = 25
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.2 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.2 , action:  None , deadline: 25
annealing now. self.epsilon: 0.2 , action:  right , deadline: 20
annealing now. self.epsilon: 0.2 , action:  right , deadline: 15
annealing now. self.epsilon: 0.2 , action:  right , deadline: 10
success: 2 / 5
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (8, 2), destination = (7, 5), deadline = 20
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.166666666667 , action:  forward , deadline: 12
success: 2 / 6
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (5, 4), destination = (1, 1), deadline = 35
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.142857142857 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.142857142857 , action:  right , deadline: 35
annealing now. self.epsilon: 0.142857142857 , action:  forward , deadline: 28
annealing now. self.epsilon: 0.142857142857 , action:  forward , deadline: 21
Environment.act(): Primary agent has reached destination!
success: 3 / 7
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (5, 3), destination = (7, 6), deadline = 25
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.125 , action:  right , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 4 / 8
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (7, 4), destination = (6, 1), deadline = 20
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.111111111111 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.111111111111 , action:  right , deadline: 18
success: 4 / 9
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (4, 4), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  None , deadline: 20
success: 4 / 10
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (2, 2), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0909090909091 , self.eps_freq:  11.0 

success: 4 / 11
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (2, 1), destination = (7, 6), deadline = 50
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  None , deadline: 48
annealing now. self.epsilon: 0.0833333333333 , action:  None , deadline: 36
Environment.act(): Primary agent has reached destination!
success: 5 / 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (8, 3), destination = (1, 2), deadline = 40
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0769230769231 , self.eps_freq:  13.0 

annealing now. self.epsilon: 0.0769230769231 , action:  forward , deadline: 39
annealing now. self.epsilon: 0.0769230769231 , action:  right , deadline: 26
success: 5 / 13
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (1, 3), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

success: 5 / 14
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (8, 1), destination = (1, 2), deadline = 40
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0666666666667 , self.eps_freq:  15.0 

annealing now. self.epsilon: 0.0666666666667 , action:  None , deadline: 30
success: 5 / 15
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (1, 5), destination = (3, 1), deadline = 30
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

success: 5 / 16
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (1, 3), destination = (5, 1), deadline = 30
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0588235294118 , self.eps_freq:  17.0 

Environment.act(): Primary agent has reached destination!
success: 6 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (2, 4), destination = (5, 6), deadline = 25
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

success: 6 / 18
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (4, 6), destination = (8, 6), deadline = 20
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0526315789474 , self.eps_freq:  19.0 

success: 6 / 19
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (4, 2), destination = (3, 5), deadline = 20
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.05 , self.eps_freq:  20.0 

success: 6 / 20
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (8, 1), destination = (2, 1), deadline = 30
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.047619047619 , self.eps_freq:  21.0 

success: 6 / 21
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (5, 2), destination = (8, 6), deadline = 35
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

success: 6 / 22
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (5, 2), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0434782608696 , self.eps_freq:  23.0 

success: 6 / 23
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (3, 5), destination = (7, 5), deadline = 20
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

success: 6 / 24
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (8, 6), destination = (5, 2), deadline = 35
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.04 , self.eps_freq:  25.0 

success: 6 / 25
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (5, 1), destination = (2, 6), deadline = 40
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 7 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (5, 3), destination = (3, 5), deadline = 20
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.037037037037 , self.eps_freq:  27.0 

success: 7 / 27
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (4, 3), destination = (8, 5), deadline = 30
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 8 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (5, 5), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0344827586207 , self.eps_freq:  29.0 

success: 8 / 29
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (2, 1), destination = (5, 5), deadline = 35
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

success: 8 / 30
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (8, 2), destination = (5, 5), deadline = 30
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0322580645161 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 9 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (6, 3), destination = (8, 6), deadline = 25
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

success: 9 / 32
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (2, 1), destination = (4, 5), deadline = 30
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.030303030303 , self.eps_freq:  33.0 

success: 9 / 33
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (1, 1), destination = (5, 4), deadline = 35
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 10 / 34
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (4, 4), destination = (5, 1), deadline = 20
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0285714285714 , self.eps_freq:  35.0 

success: 10 / 35
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (6, 6), destination = (1, 5), deadline = 30
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

success: 10 / 36
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (6, 5), destination = (2, 5), deadline = 20
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.027027027027 , self.eps_freq:  37.0 

success: 10 / 37
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (3, 5), destination = (6, 4), deadline = 20
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

success: 10 / 38
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (1, 6), destination = (5, 2), deadline = 40
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.025641025641 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 11 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (5, 2), destination = (2, 5), deadline = 30
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.025 , self.eps_freq:  40.0 

success: 11 / 40
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (8, 1), destination = (4, 2), deadline = 25
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0243902439024 , self.eps_freq:  41.0 

success: 11 / 41
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (6, 4), destination = (3, 2), deadline = 25
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

Environment.act(): Primary agent has reached destination!
success: 12 / 42
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (6, 2), destination = (8, 6), deadline = 30
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0232558139535 , self.eps_freq:  43.0 

success: 12 / 43
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (8, 2), destination = (2, 3), deadline = 35
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

success: 12 / 44
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (1, 5), destination = (4, 3), deadline = 25
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0222222222222 , self.eps_freq:  45.0 

success: 12 / 45
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (8, 4), destination = (1, 3), deadline = 40
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

Environment.act(): Primary agent has reached destination!
success: 13 / 46
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (2, 3), destination = (7, 6), deadline = 40
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0212765957447 , self.eps_freq:  47.0 

success: 13 / 47
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (5, 3), destination = (1, 2), deadline = 25
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

Environment.act(): Primary agent has reached destination!
success: 14 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (4, 2), destination = (2, 6), deadline = 30
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0204081632653 , self.eps_freq:  50.0 

success: 14 / 49
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (7, 1), destination = (4, 3), deadline = 25
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.02 , self.eps_freq:  50.0 

success: 14 / 50
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (8, 4), destination = (2, 5), deadline = 35
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0196078431373 , self.eps_freq:  51.0 

Environment.act(): Primary agent has reached destination!
success: 15 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (2, 5), destination = (7, 3), deadline = 35
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

Environment.act(): Primary agent has reached destination!
success: 16 / 52
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (1, 6), destination = (5, 4), deadline = 30
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0188679245283 , self.eps_freq:  53.0 

Environment.act(): Primary agent has reached destination!
success: 17 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (7, 3), destination = (1, 4), deadline = 35
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

Environment.act(): Primary agent has reached destination!
success: 18 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (7, 3), destination = (2, 1), deadline = 35
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0181818181818 , self.eps_freq:  55.0 

success: 18 / 55
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (3, 1), destination = (7, 4), deadline = 35
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

Environment.act(): Primary agent has reached destination!
success: 19 / 56
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (8, 3), destination = (2, 2), deadline = 35
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0175438596491 , self.eps_freq:  57.0 

success: 19 / 57
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (3, 5), destination = (8, 4), deadline = 30
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

success: 19 / 58
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (7, 3), destination = (2, 6), deadline = 40
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0169491525424 , self.eps_freq:  59.0 

success: 19 / 59
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (1, 4), destination = (8, 3), deadline = 40
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

Environment.act(): Primary agent has reached destination!
success: 20 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (4, 3), destination = (7, 1), deadline = 25
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.016393442623 , self.eps_freq:  61.0 

success: 20 / 61
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (7, 3), destination = (4, 6), deadline = 30
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

success: 20 / 62
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (1, 1), destination = (3, 4), deadline = 25
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.015873015873 , self.eps_freq:  63.0 

Environment.act(): Primary agent has reached destination!
success: 21 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (3, 5), destination = (6, 6), deadline = 20
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

success: 21 / 64
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (2, 4), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0153846153846 , self.eps_freq:  65.0 

success: 21 / 65
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (3, 5), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

success: 21 / 66
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (3, 1), destination = (7, 4), deadline = 35
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0149253731343 , self.eps_freq:  67.0 

Environment.act(): Primary agent has reached destination!
success: 22 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (8, 4), destination = (1, 2), deadline = 45
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

success: 22 / 68
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (8, 2), destination = (3, 1), deadline = 30
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0144927536232 , self.eps_freq:  69.0 

success: 22 / 69
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (1, 6), destination = (2, 3), deadline = 20
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

success: 22 / 70
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (1, 2), destination = (6, 4), deadline = 35
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0140845070423 , self.eps_freq:  71.0 

Environment.act(): Primary agent has reached destination!
success: 23 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (2, 6), destination = (7, 3), deadline = 40
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (1, 5), destination = (5, 4), deadline = 25
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.013698630137 , self.eps_freq:  73.0 

success: 24 / 73
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (8, 1), destination = (1, 6), deadline = 60
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (8, 1), destination = (1, 2), deadline = 40
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0133333333333 , self.eps_freq:  75.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (8, 5), destination = (1, 5), deadline = 35
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

success: 26 / 76
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (1, 2), destination = (4, 1), deadline = 20
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.012987012987 , self.eps_freq:  77.0 

success: 26 / 77
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (4, 2), destination = (4, 6), deadline = 20
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

success: 26 / 78
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (7, 1), destination = (2, 5), deadline = 45
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0126582278481 , self.eps_freq:  79.0 

success: 26 / 79
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (5, 1), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

success: 26 / 80
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (5, 1), destination = (2, 3), deadline = 25
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0123456790123 , self.eps_freq:  81.0 

success: 26 / 81
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (1, 1), destination = (6, 4), deadline = 40
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 5), deadline = 30
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0120481927711 , self.eps_freq:  83.0 

success: 27 / 83
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (4, 1), destination = (8, 3), deadline = 30
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 84
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (2, 4), destination = (5, 1), deadline = 30
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0117647058824 , self.eps_freq:  85.0 

success: 28 / 85
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (2, 5), destination = (7, 1), deadline = 45
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

success: 28 / 86
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (3, 4), destination = (1, 2), deadline = 20
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0114942528736 , self.eps_freq:  87.0 

success: 28 / 87
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (6, 1), destination = (1, 6), deadline = 50
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

success: 28 / 88
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (8, 3), destination = (2, 4), deadline = 35
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0112359550562 , self.eps_freq:  89.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 89
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (7, 2), destination = (2, 2), deadline = 25
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

success: 29 / 90
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (7, 2), destination = (1, 5), deadline = 45
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.010989010989 , self.eps_freq:  91.0 

success: 29 / 91
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (5, 1), destination = (1, 1), deadline = 20
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

success: 29 / 92
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (2, 3), destination = (4, 1), deadline = 20
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.010752688172 , self.eps_freq:  93.0 

success: 29 / 93
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (5, 2), destination = (1, 6), deadline = 40
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

success: 29 / 94
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (5, 6), destination = (3, 3), deadline = 25
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0105263157895 , self.eps_freq:  95.0 

success: 29 / 95
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (8, 5), destination = (6, 1), deadline = 30
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

success: 29 / 96
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (8, 6), destination = (3, 5), deadline = 30
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0103092783505 , self.eps_freq:  97.0 

success: 29 / 97
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (7, 6), destination = (2, 2), deadline = 45
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (7, 3), destination = (1, 3), deadline = 30
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.010101010101 , self.eps_freq:  99.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (6, 6), destination = (3, 4), deadline = 25
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.01 , self.eps_freq:  100.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.01263
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07143
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01136
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03333
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06643
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01429
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12422
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03125
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.62770
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.19897
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.29614
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.24801
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06689
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02265
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01266
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01124
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05357
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03306
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.49975
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03333
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03563
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.11068
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.67707
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01538
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.23295
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10287
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02508
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12307
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12560
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05349
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.38787
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.79048
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.97657
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.25780
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03456
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05613
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08990
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03704
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.14496
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01449
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.16114
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.88677
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.59074
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.26216
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06759
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02128
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10152
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.57354
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01351
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01111
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.26660
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.15563
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.03466
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.25600
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.92317
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.10443
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.31477
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.11941
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.54293
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.24931
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.14147
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50000
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.55558
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.36759
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.00025
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 1.81884
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.99065
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 2.56275
--------------------------------------------------------------------------------
updated cells:  68 , self.total_cell_count: 2048 , updated_func_counter: 2682
self.alpha: 0.7 self.gamma: 0.1 , self.epsilon: 0.2 , success: 32  in steps:  13
________________________________________________________________________________
gma = 0.1
eps = 0.1
alp = 0.7
epsilon:  0.1
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (6, 1), destination = (7, 5), deadline = 25
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  None , deadline: 24
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 22
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.5 , action:  right , deadline: 18
annealing now. self.epsilon: 0.5 , action:  right , deadline: 16
annealing now. self.epsilon: 0.5 , action:  left , deadline: 14
annealing now. self.epsilon: 0.5 , action:  None , deadline: 12
annealing now. self.epsilon: 0.5 , action:  None , deadline: 10
annealing now. self.epsilon: 0.5 , action:  right , deadline: 8
annealing now. self.epsilon: 0.5 , action:  left , deadline: 6
annealing now. self.epsilon: 0.5 , action:  right , deadline: 4
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (7, 3), destination = (2, 5), deadline = 35
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  None , deadline: 32
annealing now. self.epsilon: 0.25 , action:  right , deadline: 28
annealing now. self.epsilon: 0.25 , action:  None , deadline: 24
annealing now. self.epsilon: 0.25 , action:  None , deadline: 20
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.25 , action:  right , deadline: 12
annealing now. self.epsilon: 0.25 , action:  left , deadline: 8
success: 0 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (8, 1), destination = (1, 2), deadline = 40
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  left , deadline: 36
annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 30
annealing now. self.epsilon: 0.166666666667 , action:  left , deadline: 24
annealing now. self.epsilon: 0.166666666667 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 12
success: 0 / 3
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (2, 4), destination = (6, 4), deadline = 20
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  forward , deadline: 16
success: 0 / 4
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (4, 6), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  None , deadline: 20
success: 0 / 5
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (1, 1), destination = (5, 2), deadline = 25
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  left , deadline: 24
success: 0 / 6
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (2, 2), destination = (7, 1), deadline = 30
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0714285714286 , action:  forward , deadline: 28
success: 0 / 7
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (6, 5), destination = (2, 6), deadline = 25
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

success: 0 / 8
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (7, 3), destination = (3, 6), deadline = 35
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

success: 0 / 9
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (3, 6), destination = (5, 2), deadline = 30
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.05 , self.eps_freq:  20.0 

success: 0 / 10
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (1, 1), destination = (1, 5), deadline = 20
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

success: 0 / 11
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (7, 5), destination = (1, 3), deadline = 40
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

success: 0 / 12
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (3, 5), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

success: 0 / 13
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (2, 6), destination = (3, 1), deadline = 30
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

success: 0 / 14
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (8, 3), destination = (3, 6), deadline = 40
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

success: 0 / 15
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (4, 1), destination = (1, 5), deadline = 35
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

success: 0 / 16
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (3, 2), destination = (8, 6), deadline = 45
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

success: 0 / 17
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (2, 6), destination = (3, 2), deadline = 25
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

success: 0 / 18
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (3, 1), destination = (1, 3), deadline = 20
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

success: 0 / 19
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (4, 1), destination = (5, 6), deadline = 30
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.025 , self.eps_freq:  40.0 

success: 0 / 20
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (4, 3), destination = (7, 5), deadline = 25
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

success: 0 / 21
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (7, 2), destination = (2, 2), deadline = 25
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

success: 0 / 22
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (1, 6), destination = (6, 1), deadline = 50
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

success: 0 / 23
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (1, 1), destination = (7, 5), deadline = 50
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

success: 0 / 24
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (1, 6), destination = (7, 6), deadline = 30
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.02 , self.eps_freq:  50.0 

success: 0 / 25
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (8, 2), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

success: 0 / 26
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (8, 5), destination = (2, 1), deadline = 50
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

success: 0 / 27
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (5, 4), destination = (1, 3), deadline = 25
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

success: 0 / 28
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (4, 5), destination = (1, 1), deadline = 35
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

success: 0 / 29
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (1, 6), destination = (2, 1), deadline = 30
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

success: 0 / 30
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (1, 3), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

success: 0 / 31
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (3, 3), destination = (5, 1), deadline = 20
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

success: 0 / 32
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (7, 1), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

success: 0 / 33
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (7, 6), destination = (2, 2), deadline = 45
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

success: 0 / 34
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (4, 3), destination = (8, 5), deadline = 30
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

success: 0 / 35
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (4, 6), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

success: 0 / 36
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (3, 4), destination = (8, 4), deadline = 25
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

success: 0 / 37
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (3, 6), destination = (3, 2), deadline = 20
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

success: 0 / 38
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (8, 4), destination = (3, 3), deadline = 30
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

success: 0 / 39
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (5, 1), destination = (2, 3), deadline = 25
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

success: 0 / 40
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (1, 5), destination = (5, 6), deadline = 25
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

success: 0 / 41
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (4, 6), destination = (6, 1), deadline = 35
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

success: 0 / 42
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (3, 3), destination = (6, 1), deadline = 25
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

success: 0 / 43
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (8, 4), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

success: 0 / 44
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (8, 6), destination = (3, 1), deadline = 50
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

success: 0 / 45
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (7, 5), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

success: 0 / 46
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (4, 4), destination = (2, 1), deadline = 25
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

success: 0 / 47
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (3, 1), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

success: 0 / 48
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (8, 3), destination = (3, 2), deadline = 30
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

success: 0 / 49
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (7, 4), destination = (8, 1), deadline = 20
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.01 , self.eps_freq:  100.0 

success: 0 / 50
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (4, 4), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.00980392156863 , self.eps_freq:  102.0 

success: 0 / 51
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (7, 4), destination = (2, 2), deadline = 35
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.00961538461538 , self.eps_freq:  104.0 

success: 0 / 52
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (7, 3), destination = (3, 3), deadline = 20
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.00943396226415 , self.eps_freq:  106.0 

success: 0 / 53
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (6, 3), destination = (3, 2), deadline = 20
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.00925925925926 , self.eps_freq:  108.0 

success: 0 / 54
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (5, 6), destination = (8, 3), deadline = 30
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.00909090909091 , self.eps_freq:  110.0 

success: 0 / 55
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (4, 3), destination = (8, 5), deadline = 30
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.00892857142857 , self.eps_freq:  112.0 

success: 0 / 56
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (3, 1), destination = (7, 3), deadline = 30
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.00877192982456 , self.eps_freq:  114.0 

success: 0 / 57
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (8, 3), destination = (1, 5), deadline = 45
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.00862068965517 , self.eps_freq:  116.0 

success: 0 / 58
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (8, 5), destination = (1, 3), deadline = 45
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.00847457627119 , self.eps_freq:  118.0 

success: 0 / 59
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (4, 3), destination = (6, 1), deadline = 20
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.00833333333333 , self.eps_freq:  120.0 

success: 0 / 60
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (2, 6), destination = (3, 1), deadline = 30
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.00819672131148 , self.eps_freq:  122.0 

success: 0 / 61
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (4, 3), destination = (1, 6), deadline = 30
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.00806451612903 , self.eps_freq:  124.0 

success: 0 / 62
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (8, 5), destination = (6, 1), deadline = 30
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.00793650793651 , self.eps_freq:  126.0 

success: 0 / 63
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (7, 1), destination = (5, 4), deadline = 25
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0078125 , self.eps_freq:  128.0 

success: 0 / 64
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (5, 1), destination = (8, 3), deadline = 25
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.00769230769231 , self.eps_freq:  130.0 

success: 0 / 65
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (1, 3), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.00757575757576 , self.eps_freq:  132.0 

success: 0 / 66
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (3, 6), destination = (8, 4), deadline = 35
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.00746268656716 , self.eps_freq:  134.0 

success: 0 / 67
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (1, 5), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.00735294117647 , self.eps_freq:  136.0 

success: 0 / 68
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (8, 5), destination = (2, 4), deadline = 35
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.00724637681159 , self.eps_freq:  138.0 

success: 0 / 69
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (1, 1), destination = (2, 4), deadline = 20
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.00714285714286 , self.eps_freq:  140.0 

success: 0 / 70
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (5, 2), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.00704225352113 , self.eps_freq:  142.0 

success: 0 / 71
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (6, 5), destination = (1, 5), deadline = 25
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.00694444444444 , self.eps_freq:  144.0 

success: 0 / 72
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (6, 4), destination = (5, 1), deadline = 20
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.00684931506849 , self.eps_freq:  146.0 

success: 0 / 73
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (5, 1), destination = (1, 1), deadline = 20
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.00675675675676 , self.eps_freq:  148.0 

success: 0 / 74
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (6, 5), destination = (4, 2), deadline = 25
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.00666666666667 , self.eps_freq:  150.0 

success: 0 / 75
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (8, 1), destination = (4, 4), deadline = 35
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.00657894736842 , self.eps_freq:  152.0 

success: 0 / 76
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (1, 6), destination = (3, 3), deadline = 25
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.00649350649351 , self.eps_freq:  154.0 

success: 0 / 77
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (6, 4), destination = (1, 4), deadline = 25
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.00641025641026 , self.eps_freq:  156.0 

success: 0 / 78
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (8, 3), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.00632911392405 , self.eps_freq:  158.0 

success: 0 / 79
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (3, 6), destination = (3, 2), deadline = 20
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.00625 , self.eps_freq:  160.0 

success: 0 / 80
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (3, 3), destination = (7, 6), deadline = 35
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.00617283950617 , self.eps_freq:  162.0 

success: 0 / 81
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (3, 5), destination = (6, 4), deadline = 20
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.00609756097561 , self.eps_freq:  164.0 

success: 0 / 82
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (7, 4), destination = (4, 2), deadline = 25
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.00602409638554 , self.eps_freq:  166.0 

success: 0 / 83
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (6, 5), destination = (3, 3), deadline = 25
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.00595238095238 , self.eps_freq:  168.0 

success: 0 / 84
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (3, 3), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.00588235294118 , self.eps_freq:  170.0 

success: 0 / 85
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (8, 3), destination = (1, 4), deadline = 40
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.00581395348837 , self.eps_freq:  172.0 

success: 0 / 86
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (1, 5), destination = (8, 2), deadline = 50
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.00574712643678 , self.eps_freq:  174.0 

success: 0 / 87
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (8, 6), destination = (8, 2), deadline = 20
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.00568181818182 , self.eps_freq:  176.0 

success: 0 / 88
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (7, 5), destination = (3, 4), deadline = 25
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.00561797752809 , self.eps_freq:  178.0 

success: 0 / 89
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (2, 3), destination = (3, 6), deadline = 20
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.00555555555556 , self.eps_freq:  180.0 

success: 0 / 90
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (6, 6), destination = (8, 3), deadline = 25
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.00549450549451 , self.eps_freq:  182.0 

success: 0 / 91
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (4, 5), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0054347826087 , self.eps_freq:  184.0 

success: 0 / 92
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (2, 3), destination = (8, 5), deadline = 40
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.00537634408602 , self.eps_freq:  186.0 

success: 0 / 93
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (6, 3), destination = (7, 6), deadline = 20
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.00531914893617 , self.eps_freq:  188.0 

success: 0 / 94
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (4, 3), destination = (1, 1), deadline = 25
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.00526315789474 , self.eps_freq:  190.0 

success: 0 / 95
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (1, 2), destination = (5, 2), deadline = 20
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.00520833333333 , self.eps_freq:  192.0 

success: 0 / 96
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (3, 2), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.00515463917526 , self.eps_freq:  194.0 

success: 0 / 97
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (7, 1), destination = (2, 4), deadline = 40
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.00510204081633 , self.eps_freq:  197.0 

success: 0 / 98
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (4, 5), destination = (7, 1), deadline = 35
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.00505050505051 , self.eps_freq:  198.0 

success: 0 / 99
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (3, 1), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.005 , self.eps_freq:  200.0 

success: 0 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00962
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.14041
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.21322
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09299
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.24091
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06860
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.23172
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07522
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.75681
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.03977
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.16509
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.20306
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.44226
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.20745
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.14286
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.69000
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.37515
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10906
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.66989
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05196
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.05194
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05556
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10000
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03333
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09091
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.11003
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.05247
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12097
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06505
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.57501
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02235
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01053
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.11942
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.03946
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01408
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07275
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02263
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01087
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09091
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.15711
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.20663
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.06485
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09878
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01235
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10960
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.35093
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03031
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03333
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.32662
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.97436
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.50856
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.33716
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.26972
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.03804
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.53877
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.52550
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.56788
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.55099
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.53844
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.66667
--------------------------------------------------------------------------------
updated cells:  60 , self.total_cell_count: 2048 , updated_func_counter: 2954
self.alpha: 0.7 self.gamma: 0.1 , self.epsilon: 0.1 , success: 0  in steps:  0
________________________________________________________________________________
Environment.reset(): Primary agent could not reach destination within deadline!
gma = 0.005
eps = 0.5
alp = 0.5
epsilon:  0.5
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (2, 5), destination = (5, 2), deadline = 30
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 2.5 , self.eps_freq:  1.0 

annealing now. self.epsilon: 2.5 , action:  forward , deadline: 30
annealing now. self.epsilon: 2.5 , action:  right , deadline: 29
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 28
annealing now. self.epsilon: 2.5 , action:  left , deadline: 27
annealing now. self.epsilon: 2.5 , action:  left , deadline: 26
annealing now. self.epsilon: 2.5 , action:  None , deadline: 25
annealing now. self.epsilon: 2.5 , action:  right , deadline: 24
annealing now. self.epsilon: 2.5 , action:  None , deadline: 23
annealing now. self.epsilon: 2.5 , action:  left , deadline: 22
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 21
annealing now. self.epsilon: 2.5 , action:  None , deadline: 20
annealing now. self.epsilon: 2.5 , action:  left , deadline: 19
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 18
annealing now. self.epsilon: 2.5 , action:  right , deadline: 17
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 16
annealing now. self.epsilon: 2.5 , action:  right , deadline: 15
annealing now. self.epsilon: 2.5 , action:  right , deadline: 14
annealing now. self.epsilon: 2.5 , action:  left , deadline: 13
annealing now. self.epsilon: 2.5 , action:  left , deadline: 12
annealing now. self.epsilon: 2.5 , action:  right , deadline: 11
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 10
annealing now. self.epsilon: 2.5 , action:  right , deadline: 9
annealing now. self.epsilon: 2.5 , action:  None , deadline: 8
annealing now. self.epsilon: 2.5 , action:  left , deadline: 7
annealing now. self.epsilon: 2.5 , action:  left , deadline: 6
annealing now. self.epsilon: 2.5 , action:  left , deadline: 5
annealing now. self.epsilon: 2.5 , action:  right , deadline: 4
annealing now. self.epsilon: 2.5 , action:  left , deadline: 3
annealing now. self.epsilon: 2.5 , action:  right , deadline: 2
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (8, 1), destination = (4, 4), deadline = 35
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 1.25 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.25 , action:  None , deadline: 35
annealing now. self.epsilon: 1.25 , action:  None , deadline: 34
annealing now. self.epsilon: 1.25 , action:  left , deadline: 33
annealing now. self.epsilon: 1.25 , action:  left , deadline: 32
annealing now. self.epsilon: 1.25 , action:  None , deadline: 31
annealing now. self.epsilon: 1.25 , action:  right , deadline: 30
annealing now. self.epsilon: 1.25 , action:  right , deadline: 29
annealing now. self.epsilon: 1.25 , action:  None , deadline: 28
annealing now. self.epsilon: 1.25 , action:  right , deadline: 27
annealing now. self.epsilon: 1.25 , action:  left , deadline: 26
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 25
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 24
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 23
annealing now. self.epsilon: 1.25 , action:  right , deadline: 22
annealing now. self.epsilon: 1.25 , action:  left , deadline: 21
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 20
annealing now. self.epsilon: 1.25 , action:  None , deadline: 19
annealing now. self.epsilon: 1.25 , action:  right , deadline: 18
annealing now. self.epsilon: 1.25 , action:  right , deadline: 17
annealing now. self.epsilon: 1.25 , action:  None , deadline: 16
annealing now. self.epsilon: 1.25 , action:  right , deadline: 15
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 14
annealing now. self.epsilon: 1.25 , action:  right , deadline: 13
annealing now. self.epsilon: 1.25 , action:  None , deadline: 12
annealing now. self.epsilon: 1.25 , action:  right , deadline: 11
annealing now. self.epsilon: 1.25 , action:  right , deadline: 10
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 9
annealing now. self.epsilon: 1.25 , action:  right , deadline: 8
annealing now. self.epsilon: 1.25 , action:  left , deadline: 7
annealing now. self.epsilon: 1.25 , action:  None , deadline: 6
annealing now. self.epsilon: 1.25 , action:  left , deadline: 5
annealing now. self.epsilon: 1.25 , action:  left , deadline: 4
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 3
annealing now. self.epsilon: 1.25 , action:  None , deadline: 2
success: 0 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (8, 2), destination = (3, 6), deadline = 45
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.833333333333 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 44
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 42
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 40
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 38
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 36
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 34
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 32
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 1 / 3
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (8, 6), destination = (4, 6), deadline = 20
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.625 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.625 , action:  None , deadline: 20
annealing now. self.epsilon: 0.625 , action:  left , deadline: 18
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.625 , action:  left , deadline: 14
annealing now. self.epsilon: 0.625 , action:  right , deadline: 12
annealing now. self.epsilon: 0.625 , action:  None , deadline: 10
Environment.act(): Primary agent has reached destination!
success: 2 / 4
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (4, 2), destination = (1, 3), deadline = 20
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.5 , action:  None , deadline: 18
annealing now. self.epsilon: 0.5 , action:  None , deadline: 16
annealing now. self.epsilon: 0.5 , action:  right , deadline: 14
annealing now. self.epsilon: 0.5 , action:  None , deadline: 12
annealing now. self.epsilon: 0.5 , action:  right , deadline: 10
annealing now. self.epsilon: 0.5 , action:  None , deadline: 8
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 6
Environment.act(): Primary agent has reached destination!
success: 3 / 5
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (3, 6), destination = (4, 1), deadline = 30
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.416666666667 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.416666666667 , action:  None , deadline: 30
annealing now. self.epsilon: 0.416666666667 , action:  forward , deadline: 27
annealing now. self.epsilon: 0.416666666667 , action:  left , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 4 / 6
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (2, 3), destination = (8, 3), deadline = 30
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.357142857143 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 30
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 27
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 24
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 21
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 18
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 15
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 5 / 7
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (6, 5), destination = (6, 1), deadline = 20
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.3125 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.3125 , action:  None , deadline: 20
annealing now. self.epsilon: 0.3125 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.3125 , action:  left , deadline: 12
annealing now. self.epsilon: 0.3125 , action:  left , deadline: 8
Environment.act(): Primary agent has reached destination!
success: 6 / 8
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (3, 4), destination = (8, 1), deadline = 40
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.277777777778 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.277777777778 , action:  left , deadline: 40
annealing now. self.epsilon: 0.277777777778 , action:  None , deadline: 36
annealing now. self.epsilon: 0.277777777778 , action:  right , deadline: 32
annealing now. self.epsilon: 0.277777777778 , action:  forward , deadline: 28
annealing now. self.epsilon: 0.277777777778 , action:  None , deadline: 24
annealing now. self.epsilon: 0.277777777778 , action:  None , deadline: 20
annealing now. self.epsilon: 0.277777777778 , action:  None , deadline: 16
annealing now. self.epsilon: 0.277777777778 , action:  left , deadline: 12
annealing now. self.epsilon: 0.277777777778 , action:  None , deadline: 8
Environment.act(): Primary agent has reached destination!
success: 7 / 9
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (2, 2), destination = (7, 6), deadline = 45
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  forward , deadline: 44
annealing now. self.epsilon: 0.25 , action:  right , deadline: 40
annealing now. self.epsilon: 0.25 , action:  None , deadline: 36
Environment.act(): Primary agent has reached destination!
success: 8 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (2, 4), destination = (7, 3), deadline = 30
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.227272727273 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.227272727273 , action:  right , deadline: 30
annealing now. self.epsilon: 0.227272727273 , action:  right , deadline: 25
annealing now. self.epsilon: 0.227272727273 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.227272727273 , action:  left , deadline: 15
annealing now. self.epsilon: 0.227272727273 , action:  forward , deadline: 10
Environment.act(): Primary agent has reached destination!
success: 9 / 11
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (8, 5), destination = (1, 2), deadline = 50
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.208333333333 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.208333333333 , action:  None , deadline: 50
annealing now. self.epsilon: 0.208333333333 , action:  left , deadline: 45
annealing now. self.epsilon: 0.208333333333 , action:  forward , deadline: 40
annealing now. self.epsilon: 0.208333333333 , action:  right , deadline: 35
annealing now. self.epsilon: 0.208333333333 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.208333333333 , action:  right , deadline: 25
annealing now. self.epsilon: 0.208333333333 , action:  None , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 10 / 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (6, 1), destination = (8, 6), deadline = 35
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.192307692308 , self.eps_freq:  6.0 

Environment.act(): Primary agent has reached destination!
success: 11 / 13
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (5, 6), destination = (1, 3), deadline = 35
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.178571428571 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.178571428571 , action:  right , deadline: 30
annealing now. self.epsilon: 0.178571428571 , action:  None , deadline: 24
annealing now. self.epsilon: 0.178571428571 , action:  right , deadline: 18
annealing now. self.epsilon: 0.178571428571 , action:  None , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 12 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (3, 5), destination = (7, 2), deadline = 35
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 30
annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 13 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (4, 1), destination = (2, 4), deadline = 25
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.15625 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.15625 , action:  left , deadline: 21
annealing now. self.epsilon: 0.15625 , action:  right , deadline: 14
success: 13 / 16
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (2, 5), destination = (5, 3), deadline = 25
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.147058823529 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.147058823529 , action:  left , deadline: 21
annealing now. self.epsilon: 0.147058823529 , action:  None , deadline: 14
Environment.act(): Primary agent has reached destination!
success: 14 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (5, 1), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.138888888889 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.138888888889 , action:  right , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 15 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (6, 1), destination = (5, 5), deadline = 25
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.131578947368 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.131578947368 , action:  left , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 16 / 19
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (1, 1), destination = (5, 2), deadline = 25
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  left , deadline: 24
annealing now. self.epsilon: 0.125 , action:  left , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 17 / 20
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (6, 1), destination = (3, 5), deadline = 35
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.119047619048 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.119047619048 , action:  right , deadline: 27
Environment.act(): Primary agent has reached destination!
success: 18 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (6, 1), destination = (7, 4), deadline = 20
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.113636363636 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.113636363636 , action:  None , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 19 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (4, 2), destination = (7, 4), deadline = 25
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.108695652174 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.108695652174 , action:  forward , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 20 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (3, 5), destination = (1, 3), deadline = 20
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.104166666667 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.104166666667 , action:  right , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 21 / 24
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (2, 2), destination = (6, 6), deadline = 40
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  forward , deadline: 40
annealing now. self.epsilon: 0.1 , action:  None , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 22 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (7, 2), destination = (4, 5), deadline = 30
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0961538461538 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0961538461538 , action:  left , deadline: 22
Environment.act(): Primary agent has reached destination!
success: 23 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (7, 4), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0925925925926 , self.eps_freq:  11.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (1, 6), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0892857142857 , self.eps_freq:  12.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (4, 6), destination = (6, 4), deadline = 20
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0862068965517 , self.eps_freq:  12.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (3, 4), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  right , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 27 / 30
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (1, 6), destination = (7, 4), deadline = 40
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0806451612903 , self.eps_freq:  13.0 

annealing now. self.epsilon: 0.0806451612903 , action:  None , deadline: 39
annealing now. self.epsilon: 0.0806451612903 , action:  left , deadline: 26
success: 27 / 31
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (4, 2), destination = (3, 6), deadline = 25
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.078125 , self.eps_freq:  13.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (5, 4), destination = (1, 4), deadline = 20
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0757575757576 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 33
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (4, 1), destination = (2, 4), deadline = 25
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0735294117647 , self.eps_freq:  14.0 

success: 29 / 34
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (8, 4), destination = (5, 6), deadline = 25
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 35
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (5, 2), destination = (7, 5), deadline = 25
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0694444444444 , self.eps_freq:  15.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 36
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (1, 2), destination = (3, 5), deadline = 25
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0675675675676 , self.eps_freq:  15.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 37
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (1, 1), destination = (8, 4), deadline = 50
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0657894736842 , self.eps_freq:  16.0 

annealing now. self.epsilon: 0.0657894736842 , action:  left , deadline: 48
annealing now. self.epsilon: 0.0657894736842 , action:  left , deadline: 32
Environment.act(): Primary agent has reached destination!
success: 33 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (8, 4), destination = (1, 3), deadline = 40
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0641025641026 , self.eps_freq:  16.0 

annealing now. self.epsilon: 0.0641025641026 , action:  None , deadline: 32
Environment.act(): Primary agent has reached destination!
success: 34 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (6, 2), destination = (5, 6), deadline = 25
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 35 / 40
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (5, 5), destination = (2, 1), deadline = 35
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0609756097561 , self.eps_freq:  17.0 

annealing now. self.epsilon: 0.0609756097561 , action:  forward , deadline: 34
Environment.act(): Primary agent has reached destination!
success: 36 / 41
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (1, 6), destination = (6, 4), deadline = 35
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0595238095238 , self.eps_freq:  17.0 

annealing now. self.epsilon: 0.0595238095238 , action:  right , deadline: 34
Environment.act(): Primary agent has reached destination!
success: 37 / 42
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (1, 4), destination = (5, 2), deadline = 30
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0581395348837 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (5, 1), destination = (8, 3), deadline = 25
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0568181818182 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 44
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (6, 1), destination = (4, 5), deadline = 30
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

success: 39 / 45
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (7, 5), destination = (4, 2), deadline = 30
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.054347826087 , self.eps_freq:  19.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 46
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (2, 5), destination = (6, 2), deadline = 35
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0531914893617 , self.eps_freq:  19.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 47
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (4, 4), destination = (1, 2), deadline = 25
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0520833333333 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (8, 2), destination = (1, 5), deadline = 50
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0510204081633 , self.eps_freq:  20.0 

annealing now. self.epsilon: 0.0510204081633 , action:  forward , deadline: 40
Environment.act(): Primary agent has reached destination!
success: 43 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (4, 4), destination = (3, 1), deadline = 20
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.05 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (6, 1), destination = (3, 3), deadline = 25
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0490196078431 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (4, 2), destination = (4, 6), deadline = 20
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0480769230769 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 52
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (3, 1), destination = (5, 6), deadline = 35
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0471698113208 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 47 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (6, 2), destination = (8, 5), deadline = 25
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0462962962963 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (1, 5), destination = (3, 2), deadline = 25
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (4, 3), destination = (5, 6), deadline = 20
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0446428571429 , self.eps_freq:  23.0 

success: 49 / 56
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (2, 1), destination = (6, 6), deadline = 45
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0438596491228 , self.eps_freq:  23.0 

success: 49 / 57
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (7, 6), destination = (5, 3), deadline = 25
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0431034482759 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 58
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (2, 3), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0423728813559 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (2, 5), destination = (1, 1), deadline = 25
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (1, 5), destination = (7, 5), deadline = 30
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0409836065574 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 53 / 61
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (1, 6), destination = (4, 4), deadline = 25
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0403225806452 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 54 / 62
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (4, 4), destination = (8, 5), deadline = 25
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0396825396825 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 55 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (3, 4), destination = (6, 5), deadline = 20
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0390625 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (8, 2), destination = (6, 4), deadline = 20
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 57 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (5, 4), destination = (7, 2), deadline = 20
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0378787878788 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 58 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (2, 4), destination = (8, 2), deadline = 40
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0373134328358 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 59 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (3, 1), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0367647058824 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 60 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (1, 1), destination = (7, 3), deadline = 40
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.036231884058 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 61 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (3, 4), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 62 / 70
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (5, 3), destination = (1, 1), deadline = 30
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0352112676056 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 63 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (2, 1), destination = (5, 5), deadline = 35
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0347222222222 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 64 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (6, 1), destination = (3, 2), deadline = 20
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0342465753425 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 65 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (2, 2), destination = (3, 6), deadline = 25
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0337837837838 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 66 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (8, 2), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 67 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (5, 2), destination = (8, 5), deadline = 30
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0328947368421 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 68 / 76
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (3, 4), destination = (7, 1), deadline = 35
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0324675324675 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 69 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (8, 6), destination = (2, 5), deadline = 35
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0320512820513 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 70 / 78
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (8, 5), destination = (5, 2), deadline = 30
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0316455696203 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 71 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (1, 6), destination = (3, 3), deadline = 25
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 72 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (3, 6), destination = (7, 3), deadline = 35
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0308641975309 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 73 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (8, 1), destination = (4, 3), deadline = 30
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.030487804878 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 74 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (1, 5), destination = (7, 3), deadline = 40
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0301204819277 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 75 / 83
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (6, 1), destination = (2, 5), deadline = 40
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0297619047619 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 76 / 84
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (7, 1), destination = (1, 4), deadline = 45
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 77 / 85
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (5, 6), destination = (4, 2), deadline = 25
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0290697674419 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 78 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (3, 5), destination = (8, 1), deadline = 45
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0287356321839 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 79 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (2, 2), destination = (8, 6), deadline = 50
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0284090909091 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 80 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (4, 6), destination = (6, 1), deadline = 35
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0280898876404 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 81 / 89
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (6, 6), destination = (8, 3), deadline = 25
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 82 / 90
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (3, 1), destination = (5, 6), deadline = 35
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0274725274725 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 83 / 91
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (8, 4), destination = (3, 3), deadline = 30
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0271739130435 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 84 / 92
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (4, 6), destination = (2, 1), deadline = 35
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0268817204301 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 85 / 93
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (3, 6), destination = (1, 2), deadline = 30
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0265957446809 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 86 / 94
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (5, 5), destination = (3, 1), deadline = 30
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 87 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (7, 1), destination = (7, 6), deadline = 25
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0260416666667 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 88 / 96
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (8, 5), destination = (4, 2), deadline = 35
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0257731958763 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 89 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (8, 6), destination = (1, 1), deadline = 60
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0255102040816 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 90 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (8, 6), destination = (8, 1), deadline = 25
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0252525252525 , self.eps_freq:  40.0 

success: 90 / 99
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (2, 6), destination = (8, 5), deadline = 35
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 91 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99937
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06173
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02564
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08158
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09419
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03463
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04167
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.78244
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00567
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.15066
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01064
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04020
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12293
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.34491
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.80308
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09369
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.90401
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08333
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02564
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01031
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.33333
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02041
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02326
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.32113
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.60238
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04968
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05263
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.40339
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99999
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01163
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03448
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02128
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01538
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08243
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.33518
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10196
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05000
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.20799
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02128
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.00059
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 3.84367
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.99877
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.50104
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.99868
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.50000
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50132
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50276
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.29639
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.06665
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 3.06736
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50333
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.27454
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50223
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.00072
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.50341
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.13084
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.99934
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.50145
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.51369
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 3.62344
--------------------------------------------------------------------------------
updated cells:  60 , self.total_cell_count: 2048 , updated_func_counter: 1665
self.alpha: 0.5 self.gamma: 0.005 , self.epsilon: 0.5 , success: 91  in steps:  14
________________________________________________________________________________
gma = 0.005
eps = 0.2
alp = 0.5
epsilon:  0.2
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (8, 2), destination = (7, 6), deadline = 25
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 1.0 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.0 , action:  left , deadline: 25
annealing now. self.epsilon: 1.0 , action:  right , deadline: 24
annealing now. self.epsilon: 1.0 , action:  right , deadline: 23
annealing now. self.epsilon: 1.0 , action:  right , deadline: 22
annealing now. self.epsilon: 1.0 , action:  None , deadline: 21
annealing now. self.epsilon: 1.0 , action:  None , deadline: 20
annealing now. self.epsilon: 1.0 , action:  right , deadline: 19
annealing now. self.epsilon: 1.0 , action:  right , deadline: 18
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 17
annealing now. self.epsilon: 1.0 , action:  right , deadline: 16
annealing now. self.epsilon: 1.0 , action:  right , deadline: 15
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 14
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 13
annealing now. self.epsilon: 1.0 , action:  right , deadline: 12
annealing now. self.epsilon: 1.0 , action:  right , deadline: 11
annealing now. self.epsilon: 1.0 , action:  None , deadline: 10
annealing now. self.epsilon: 1.0 , action:  right , deadline: 9
annealing now. self.epsilon: 1.0 , action:  None , deadline: 8
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 7
annealing now. self.epsilon: 1.0 , action:  right , deadline: 6
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 5
annealing now. self.epsilon: 1.0 , action:  left , deadline: 4
annealing now. self.epsilon: 1.0 , action:  left , deadline: 3
annealing now. self.epsilon: 1.0 , action:  left , deadline: 2
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (8, 2), destination = (1, 1), deadline = 40
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  None , deadline: 40
annealing now. self.epsilon: 0.5 , action:  left , deadline: 38
annealing now. self.epsilon: 0.5 , action:  left , deadline: 36
annealing now. self.epsilon: 0.5 , action:  left , deadline: 34
annealing now. self.epsilon: 0.5 , action:  left , deadline: 32
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.5 , action:  left , deadline: 28
annealing now. self.epsilon: 0.5 , action:  right , deadline: 26
annealing now. self.epsilon: 0.5 , action:  left , deadline: 24
annealing now. self.epsilon: 0.5 , action:  left , deadline: 22
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.5 , action:  None , deadline: 16
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 14
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 12
annealing now. self.epsilon: 0.5 , action:  left , deadline: 10
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 8
annealing now. self.epsilon: 0.5 , action:  right , deadline: 6
annealing now. self.epsilon: 0.5 , action:  right , deadline: 4
success: 0 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (8, 2), destination = (4, 3), deadline = 25
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.333333333333 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.333333333333 , action:  right , deadline: 24
annealing now. self.epsilon: 0.333333333333 , action:  None , deadline: 21
annealing now. self.epsilon: 0.333333333333 , action:  right , deadline: 18
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 15
annealing now. self.epsilon: 0.333333333333 , action:  None , deadline: 12
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 9
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 6
Environment.act(): Primary agent has reached destination!
success: 1 / 3
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (3, 3), destination = (6, 4), deadline = 20
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  left , deadline: 20
annealing now. self.epsilon: 0.25 , action:  right , deadline: 16
annealing now. self.epsilon: 0.25 , action:  left , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 2 / 4
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (8, 2), destination = (1, 6), deadline = 55
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.2 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.2 , action:  left , deadline: 55
annealing now. self.epsilon: 0.2 , action:  None , deadline: 50
annealing now. self.epsilon: 0.2 , action:  left , deadline: 45
annealing now. self.epsilon: 0.2 , action:  left , deadline: 40
annealing now. self.epsilon: 0.2 , action:  forward , deadline: 35
annealing now. self.epsilon: 0.2 , action:  None , deadline: 30
annealing now. self.epsilon: 0.2 , action:  right , deadline: 25
annealing now. self.epsilon: 0.2 , action:  right , deadline: 20
annealing now. self.epsilon: 0.2 , action:  None , deadline: 15
annealing now. self.epsilon: 0.2 , action:  left , deadline: 10
success: 2 / 5
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (3, 4), destination = (7, 2), deadline = 30
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  left , deadline: 30
annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 24
annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 18
annealing now. self.epsilon: 0.166666666667 , action:  left , deadline: 12
success: 2 / 6
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (5, 4), destination = (3, 1), deadline = 25
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.142857142857 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.142857142857 , action:  left , deadline: 21
annealing now. self.epsilon: 0.142857142857 , action:  None , deadline: 14
success: 2 / 7
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (4, 6), destination = (8, 4), deadline = 30
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  left , deadline: 24
annealing now. self.epsilon: 0.125 , action:  right , deadline: 16
success: 2 / 8
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (4, 6), destination = (7, 2), deadline = 35
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.111111111111 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.111111111111 , action:  forward , deadline: 27
annealing now. self.epsilon: 0.111111111111 , action:  None , deadline: 18
success: 2 / 9
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (1, 3), destination = (5, 5), deadline = 30
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.1 , action:  right , deadline: 20
success: 2 / 10
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (8, 2), destination = (1, 3), deadline = 40
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0909090909091 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0909090909091 , action:  forward , deadline: 33
annealing now. self.epsilon: 0.0909090909091 , action:  forward , deadline: 22
success: 2 / 11
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (1, 4), destination = (5, 5), deadline = 25
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  None , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 3 / 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (3, 2), destination = (6, 4), deadline = 25
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0769230769231 , self.eps_freq:  13.0 

Environment.act(): Primary agent has reached destination!
success: 4 / 13
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (1, 6), destination = (5, 4), deadline = 30
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0714285714286 , action:  right , deadline: 28
success: 4 / 14
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (5, 2), destination = (2, 3), deadline = 20
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0666666666667 , self.eps_freq:  15.0 

success: 4 / 15
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (7, 3), destination = (1, 6), deadline = 45
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

annealing now. self.epsilon: 0.0625 , action:  left , deadline: 32
success: 4 / 16
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (1, 2), destination = (4, 5), deadline = 30
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0588235294118 , self.eps_freq:  17.0 

Environment.act(): Primary agent has reached destination!
success: 5 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (7, 4), destination = (2, 4), deadline = 25
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 6 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (8, 3), destination = (1, 2), deadline = 40
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0526315789474 , self.eps_freq:  19.0 

annealing now. self.epsilon: 0.0526315789474 , action:  right , deadline: 38
success: 6 / 19
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (1, 5), destination = (4, 3), deadline = 25
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.05 , self.eps_freq:  20.0 

success: 6 / 20
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (3, 5), destination = (1, 2), deadline = 25
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.047619047619 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 7 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (2, 5), destination = (7, 1), deadline = 45
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

annealing now. self.epsilon: 0.0454545454545 , action:  right , deadline: 44
success: 7 / 22
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (8, 1), destination = (1, 3), deadline = 45
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0434782608696 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 8 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (5, 6), destination = (2, 1), deadline = 40
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 9 / 24
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (4, 3), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.04 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 10 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (6, 2), destination = (3, 4), deadline = 25
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

success: 10 / 26
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (5, 4), destination = (2, 5), deadline = 20
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.037037037037 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 11 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (3, 2), destination = (5, 5), deadline = 25
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

success: 11 / 28
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (2, 3), destination = (1, 6), deadline = 20
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0344827586207 , self.eps_freq:  29.0 

success: 11 / 29
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (8, 1), destination = (5, 4), deadline = 30
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

success: 11 / 30
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (1, 2), destination = (6, 3), deadline = 30
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0322580645161 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 12 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (7, 4), destination = (1, 3), deadline = 35
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 13 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (3, 1), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.030303030303 , self.eps_freq:  33.0 

success: 13 / 33
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (8, 1), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 14 / 34
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (1, 2), destination = (6, 5), deadline = 40
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0285714285714 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 15 / 35
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (5, 6), destination = (1, 6), deadline = 20
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

success: 15 / 36
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (4, 2), destination = (6, 6), deadline = 30
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.027027027027 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 16 / 37
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (1, 5), destination = (8, 3), deadline = 45
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

success: 16 / 38
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (3, 6), destination = (5, 3), deadline = 25
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.025641025641 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 17 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (5, 3), destination = (3, 6), deadline = 25
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.025 , self.eps_freq:  40.0 

success: 17 / 40
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (3, 1), destination = (7, 4), deadline = 35
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0243902439024 , self.eps_freq:  41.0 

success: 17 / 41
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (8, 6), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

Environment.act(): Primary agent has reached destination!
success: 18 / 42
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (3, 1), destination = (3, 6), deadline = 25
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0232558139535 , self.eps_freq:  43.0 

Environment.act(): Primary agent has reached destination!
success: 19 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (7, 5), destination = (2, 6), deadline = 30
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

success: 19 / 44
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (5, 6), destination = (7, 4), deadline = 20
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0222222222222 , self.eps_freq:  45.0 

Environment.act(): Primary agent has reached destination!
success: 20 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (2, 3), destination = (3, 6), deadline = 20
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

Environment.act(): Primary agent has reached destination!
success: 21 / 46
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (4, 4), destination = (2, 1), deadline = 25
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0212765957447 , self.eps_freq:  47.0 

Environment.act(): Primary agent has reached destination!
success: 22 / 47
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (7, 4), destination = (5, 2), deadline = 20
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

Environment.act(): Primary agent has reached destination!
success: 23 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (8, 3), destination = (4, 6), deadline = 35
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0204081632653 , self.eps_freq:  50.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (7, 1), destination = (1, 3), deadline = 40
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.02 , self.eps_freq:  50.0 

success: 24 / 50
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (2, 5), destination = (1, 2), deadline = 20
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0196078431373 , self.eps_freq:  51.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (8, 3), destination = (4, 5), deadline = 30
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

success: 25 / 52
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (1, 4), destination = (5, 1), deadline = 35
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0188679245283 , self.eps_freq:  53.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (6, 2), destination = (2, 3), deadline = 25
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

success: 26 / 54
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (8, 6), destination = (6, 1), deadline = 35
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0181818181818 , self.eps_freq:  55.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (7, 2), destination = (3, 4), deadline = 30
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

success: 27 / 56
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (5, 5), destination = (8, 2), deadline = 30
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0175438596491 , self.eps_freq:  57.0 

success: 27 / 57
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (4, 2), destination = (1, 4), deadline = 25
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

success: 27 / 58
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (7, 5), destination = (2, 6), deadline = 30
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0169491525424 , self.eps_freq:  59.0 

success: 27 / 59
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (2, 1), destination = (8, 1), deadline = 30
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (1, 4), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.016393442623 , self.eps_freq:  61.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 61
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (8, 5), destination = (4, 3), deadline = 30
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

success: 29 / 62
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (2, 3), destination = (7, 6), deadline = 40
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.015873015873 , self.eps_freq:  63.0 

success: 29 / 63
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (3, 3), destination = (1, 5), deadline = 20
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

success: 29 / 64
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (2, 6), destination = (5, 2), deadline = 35
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0153846153846 , self.eps_freq:  65.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (4, 2), destination = (7, 4), deadline = 25
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (5, 5), destination = (1, 4), deadline = 25
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0149253731343 , self.eps_freq:  67.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (6, 4), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (3, 3), destination = (8, 2), deadline = 30
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0144927536232 , self.eps_freq:  69.0 

success: 33 / 69
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (2, 4), destination = (8, 6), deadline = 40
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

success: 33 / 70
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (7, 4), destination = (1, 2), deadline = 40
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0140845070423 , self.eps_freq:  71.0 

success: 33 / 71
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (3, 5), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

success: 33 / 72
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (5, 1), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.013698630137 , self.eps_freq:  73.0 

success: 33 / 73
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (8, 2), destination = (3, 6), deadline = 45
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

success: 33 / 74
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (2, 3), destination = (4, 1), deadline = 20
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0133333333333 , self.eps_freq:  75.0 

success: 33 / 75
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (1, 2), destination = (1, 6), deadline = 20
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

success: 33 / 76
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (7, 5), destination = (4, 1), deadline = 35
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.012987012987 , self.eps_freq:  77.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (8, 5), destination = (4, 4), deadline = 25
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

Environment.act(): Primary agent has reached destination!
success: 35 / 78
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (4, 4), destination = (2, 1), deadline = 25
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0126582278481 , self.eps_freq:  79.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (3, 2), destination = (1, 5), deadline = 25
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

success: 36 / 80
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (8, 1), destination = (5, 2), deadline = 20
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0123456790123 , self.eps_freq:  81.0 

success: 36 / 81
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (2, 5), destination = (6, 2), deadline = 35
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 82
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (3, 1), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0120481927711 , self.eps_freq:  83.0 

success: 37 / 83
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (6, 2), destination = (1, 6), deadline = 45
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

success: 37 / 84
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (4, 4), destination = (7, 2), deadline = 25
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0117647058824 , self.eps_freq:  85.0 

success: 37 / 85
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (3, 5), destination = (7, 4), deadline = 25
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

success: 37 / 86
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (3, 6), destination = (8, 4), deadline = 35
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0114942528736 , self.eps_freq:  87.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (4, 2), destination = (4, 6), deadline = 20
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

success: 38 / 88
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (8, 3), destination = (2, 4), deadline = 35
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0112359550562 , self.eps_freq:  89.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 89
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (2, 2), destination = (8, 6), deadline = 50
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

success: 39 / 90
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (5, 4), destination = (1, 1), deadline = 35
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.010989010989 , self.eps_freq:  91.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 91
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (1, 3), destination = (8, 1), deadline = 45
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

success: 40 / 92
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (2, 3), destination = (7, 5), deadline = 35
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.010752688172 , self.eps_freq:  93.0 

success: 40 / 93
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (3, 2), destination = (6, 4), deadline = 25
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 94
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (6, 2), destination = (3, 1), deadline = 20
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0105263157895 , self.eps_freq:  95.0 

success: 41 / 95
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (2, 6), destination = (8, 4), deadline = 40
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

success: 41 / 96
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (1, 5), destination = (6, 6), deadline = 30
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0103092783505 , self.eps_freq:  97.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (1, 6), destination = (4, 3), deadline = 30
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (3, 3), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.010101010101 , self.eps_freq:  99.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (6, 4), destination = (3, 1), deadline = 30
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.01 , self.eps_freq:  100.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.33292
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01667
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01613
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02741
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.50556
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.72844
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.51215
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00313
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.26599
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10302
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10657
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04167
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.50690
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.32701
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00214
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03846
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08088
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02166
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.70061
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02909
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.66153
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01087
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.71684
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.29740
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05000
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.52336
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.34922
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03571
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.15952
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01053
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05318
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02000
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06250
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.21334
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05853
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03488
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00361
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.17324
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09526
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05368
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.33061
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01786
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07227
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05427
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.00063
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 3.12203
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.54868
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.50000
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.00019
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.50335
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50149
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.24969
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50209
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.04763
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 2.00000
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.06807
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.53273
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50081
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.50031
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.50292
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.50030
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.06302
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.99762
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.10079
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.30869
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.25016
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.87794
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.51185
--------------------------------------------------------------------------------
updated cells:  68 , self.total_cell_count: 2048 , updated_func_counter: 2532
self.alpha: 0.5 self.gamma: 0.005 , self.epsilon: 0.2 , success: 45  in steps:  12
________________________________________________________________________________
gma = 0.005
eps = 0.1
alp = 0.5
epsilon:  0.1
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (8, 5), destination = (4, 2), deadline = 35
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  right , deadline: 34
annealing now. self.epsilon: 0.5 , action:  left , deadline: 32
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.5 , action:  left , deadline: 28
annealing now. self.epsilon: 0.5 , action:  left , deadline: 26
annealing now. self.epsilon: 0.5 , action:  None , deadline: 24
annealing now. self.epsilon: 0.5 , action:  None , deadline: 22
annealing now. self.epsilon: 0.5 , action:  None , deadline: 20
annealing now. self.epsilon: 0.5 , action:  right , deadline: 18
annealing now. self.epsilon: 0.5 , action:  left , deadline: 16
annealing now. self.epsilon: 0.5 , action:  left , deadline: 14
annealing now. self.epsilon: 0.5 , action:  None , deadline: 12
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 10
annealing now. self.epsilon: 0.5 , action:  None , deadline: 8
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 6
annealing now. self.epsilon: 0.5 , action:  None , deadline: 4
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (3, 5), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  None , deadline: 20
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.25 , action:  None , deadline: 12
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 8
success: 0 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (4, 5), destination = (4, 1), deadline = 20
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 1 / 3
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (4, 4), destination = (2, 1), deadline = 25
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  left , deadline: 24
annealing now. self.epsilon: 0.125 , action:  left , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 2 / 4
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (6, 3), destination = (1, 4), deadline = 30
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  right , deadline: 30
annealing now. self.epsilon: 0.1 , action:  left , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 3 / 5
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (1, 6), destination = (6, 1), deadline = 50
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  None , deadline: 48
annealing now. self.epsilon: 0.0833333333333 , action:  right , deadline: 36
annealing now. self.epsilon: 0.0833333333333 , action:  left , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 4 / 6
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (3, 4), destination = (7, 5), deadline = 25
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 5 / 7
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (2, 5), destination = (3, 1), deadline = 25
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

success: 5 / 8
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (2, 2), destination = (3, 5), deadline = 20
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

success: 5 / 9
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (4, 1), destination = (5, 6), deadline = 30
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.05 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 6 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (8, 3), destination = (6, 1), deadline = 20
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 7 / 11
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (3, 1), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

success: 7 / 12
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (4, 5), destination = (8, 4), deadline = 25
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 8 / 13
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (7, 4), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 9 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (7, 4), destination = (3, 6), deadline = 30
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 10 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (2, 1), destination = (6, 1), deadline = 20
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 11 / 16
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (2, 3), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

success: 11 / 17
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (8, 3), destination = (2, 1), deadline = 40
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 12 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (2, 1), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

success: 12 / 19
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (7, 5), destination = (8, 2), deadline = 20
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.025 , self.eps_freq:  40.0 

success: 12 / 20
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (6, 4), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

Environment.act(): Primary agent has reached destination!
success: 13 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (4, 1), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

Environment.act(): Primary agent has reached destination!
success: 14 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (8, 2), destination = (2, 3), deadline = 35
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

Environment.act(): Primary agent has reached destination!
success: 15 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (8, 1), destination = (3, 2), deadline = 30
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

success: 15 / 24
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (1, 5), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.02 , self.eps_freq:  50.0 

success: 15 / 25
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (5, 1), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

success: 15 / 26
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (5, 5), destination = (3, 3), deadline = 20
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

Environment.act(): Primary agent has reached destination!
success: 16 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (8, 2), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

success: 16 / 28
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (1, 3), destination = (8, 2), deadline = 40
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

success: 16 / 29
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (1, 5), destination = (8, 4), deadline = 40
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

success: 16 / 30
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (5, 5), destination = (3, 2), deadline = 25
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

Environment.act(): Primary agent has reached destination!
success: 17 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (8, 1), destination = (1, 1), deadline = 35
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

Environment.act(): Primary agent has reached destination!
success: 18 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (2, 5), destination = (7, 6), deadline = 30
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

Environment.act(): Primary agent has reached destination!
success: 19 / 33
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (4, 1), destination = (3, 5), deadline = 25
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

success: 19 / 34
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (1, 6), destination = (8, 4), deadline = 45
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

success: 19 / 35
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (1, 1), destination = (3, 5), deadline = 30
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

success: 19 / 36
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (2, 4), destination = (8, 6), deadline = 40
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

Environment.act(): Primary agent has reached destination!
success: 20 / 37
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (1, 5), destination = (8, 6), deadline = 40
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

Environment.act(): Primary agent has reached destination!
success: 21 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (4, 5), destination = (3, 1), deadline = 25
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

success: 21 / 39
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (4, 2), destination = (2, 5), deadline = 25
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

Environment.act(): Primary agent has reached destination!
success: 22 / 40
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (7, 4), destination = (2, 2), deadline = 35
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

Environment.act(): Primary agent has reached destination!
success: 23 / 41
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (7, 3), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 42
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (2, 2), destination = (4, 6), deadline = 30
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

success: 24 / 43
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (5, 4), destination = (1, 6), deadline = 30
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

success: 24 / 44
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (8, 1), destination = (1, 4), deadline = 50
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

success: 24 / 45
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (5, 6), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

success: 24 / 46
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (4, 4), destination = (8, 3), deadline = 25
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

success: 24 / 47
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (3, 5), destination = (8, 4), deadline = 30
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

success: 24 / 48
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (7, 1), destination = (4, 3), deadline = 25
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

success: 24 / 49
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (8, 4), destination = (2, 4), deadline = 30
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.01 , self.eps_freq:  100.0 

success: 24 / 50
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (2, 2), destination = (6, 1), deadline = 25
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.00980392156863 , self.eps_freq:  102.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (4, 3), destination = (1, 2), deadline = 20
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.00961538461538 , self.eps_freq:  104.0 

success: 25 / 52
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (2, 5), destination = (6, 4), deadline = 25
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.00943396226415 , self.eps_freq:  106.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (2, 2), destination = (8, 1), deadline = 35
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00925925925926 , self.eps_freq:  108.0 

success: 26 / 54
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (4, 6), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.00909090909091 , self.eps_freq:  110.0 

success: 26 / 55
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (7, 5), destination = (1, 2), deadline = 45
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.00892857142857 , self.eps_freq:  112.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (2, 2), destination = (8, 4), deadline = 40
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.00877192982456 , self.eps_freq:  114.0 

success: 27 / 57
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (8, 5), destination = (4, 1), deadline = 40
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.00862068965517 , self.eps_freq:  116.0 

success: 27 / 58
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (5, 6), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.00847457627119 , self.eps_freq:  118.0 

success: 27 / 59
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (6, 5), destination = (8, 2), deadline = 25
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.00833333333333 , self.eps_freq:  120.0 

success: 27 / 60
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (5, 5), destination = (2, 6), deadline = 20
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.00819672131148 , self.eps_freq:  122.0 

success: 27 / 61
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (3, 1), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.00806451612903 , self.eps_freq:  124.0 

success: 27 / 62
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (2, 3), destination = (6, 1), deadline = 30
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.00793650793651 , self.eps_freq:  126.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (3, 2), destination = (8, 6), deadline = 45
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0078125 , self.eps_freq:  128.0 

success: 28 / 64
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (2, 3), destination = (7, 6), deadline = 40
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.00769230769231 , self.eps_freq:  130.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (7, 6), destination = (3, 3), deadline = 35
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.00757575757576 , self.eps_freq:  132.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (1, 3), destination = (7, 5), deadline = 40
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.00746268656716 , self.eps_freq:  134.0 

success: 30 / 67
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (2, 5), destination = (6, 2), deadline = 35
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.00735294117647 , self.eps_freq:  136.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (1, 1), destination = (7, 6), deadline = 55
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.00724637681159 , self.eps_freq:  138.0 

success: 31 / 69
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (3, 2), destination = (6, 6), deadline = 35
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.00714285714286 , self.eps_freq:  140.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 70
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (5, 2), destination = (7, 5), deadline = 25
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.00704225352113 , self.eps_freq:  142.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (1, 3), destination = (8, 4), deadline = 40
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.00694444444444 , self.eps_freq:  144.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (6, 6), destination = (4, 1), deadline = 35
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.00684931506849 , self.eps_freq:  146.0 

success: 34 / 73
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (6, 1), destination = (3, 4), deadline = 30
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.00675675675676 , self.eps_freq:  148.0 

success: 34 / 74
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (1, 5), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.00666666666667 , self.eps_freq:  150.0 

Environment.act(): Primary agent has reached destination!
success: 35 / 75
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (6, 1), destination = (2, 6), deadline = 45
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.00657894736842 , self.eps_freq:  152.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 76
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (8, 1), destination = (2, 5), deadline = 50
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.00649350649351 , self.eps_freq:  154.0 

success: 36 / 77
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (4, 4), destination = (7, 6), deadline = 25
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.00641025641026 , self.eps_freq:  156.0 

success: 36 / 78
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (8, 2), destination = (5, 1), deadline = 20
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.00632911392405 , self.eps_freq:  158.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (2, 6), destination = (8, 3), deadline = 45
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.00625 , self.eps_freq:  160.0 

success: 37 / 80
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (8, 5), destination = (1, 4), deadline = 40
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.00617283950617 , self.eps_freq:  162.0 

success: 37 / 81
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (4, 6), destination = (3, 1), deadline = 30
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.00609756097561 , self.eps_freq:  164.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (1, 5), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.00602409638554 , self.eps_freq:  166.0 

success: 38 / 83
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (6, 3), destination = (8, 1), deadline = 20
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00595238095238 , self.eps_freq:  168.0 

success: 38 / 84
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (2, 2), destination = (6, 4), deadline = 30
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.00588235294118 , self.eps_freq:  170.0 

success: 38 / 85
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (7, 3), destination = (3, 6), deadline = 35
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.00581395348837 , self.eps_freq:  172.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (6, 5), destination = (5, 2), deadline = 20
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.00574712643678 , self.eps_freq:  174.0 

success: 39 / 87
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (1, 2), destination = (6, 1), deadline = 30
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.00568181818182 , self.eps_freq:  176.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (2, 6), destination = (6, 3), deadline = 35
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.00561797752809 , self.eps_freq:  178.0 

success: 40 / 89
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (8, 3), destination = (4, 6), deadline = 35
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.00555555555556 , self.eps_freq:  180.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 90
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (5, 4), destination = (8, 1), deadline = 30
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00549450549451 , self.eps_freq:  182.0 

success: 41 / 91
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (3, 1), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0054347826087 , self.eps_freq:  184.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 92
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (5, 4), destination = (3, 2), deadline = 20
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.00537634408602 , self.eps_freq:  186.0 

success: 42 / 93
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (1, 5), destination = (4, 6), deadline = 20
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.00531914893617 , self.eps_freq:  188.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 94
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (6, 4), destination = (3, 6), deadline = 25
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.00526315789474 , self.eps_freq:  190.0 

success: 43 / 95
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (7, 2), destination = (1, 3), deadline = 35
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.00520833333333 , self.eps_freq:  192.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 96
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (4, 6), destination = (2, 4), deadline = 20
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.00515463917526 , self.eps_freq:  194.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (3, 2), destination = (6, 1), deadline = 20
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.00510204081633 , self.eps_freq:  197.0 

success: 45 / 98
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (1, 1), destination = (7, 1), deadline = 30
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.00505050505051 , self.eps_freq:  198.0 

success: 45 / 99
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (7, 1), destination = (5, 4), deadline = 25
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.005 , self.eps_freq:  200.0 

success: 45 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99875
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03125
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01000
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01852
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.18892
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.11111
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.19555
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05590
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.94191
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06478
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00188
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.18138
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04509
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.55503
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.82874
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06491
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.93123
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03333
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.14023
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00125
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06667
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03030
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03846
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05356
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09670
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00250
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08819
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02174
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02837
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.00002
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08644
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00125
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05796
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01923
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01613
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02273
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.13329
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.38672
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01923
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.11391
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.24204
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.13119
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07987
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01754
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03448
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.00000
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 3.07043
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.50125
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.49906
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.50141
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.08346
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.40256
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50000
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.10050
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.99984
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.50275
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.50000
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.33312
--------------------------------------------------------------------------------
updated cells:  58 , self.total_cell_count: 2048 , updated_func_counter: 2475
self.alpha: 0.5 self.gamma: 0.005 , self.epsilon: 0.1 , success: 45  in steps:  0
________________________________________________________________________________
Environment.reset(): Primary agent could not reach destination within deadline!
gma = 0.05
eps = 0.5
alp = 0.5
epsilon:  0.5
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (7, 1), destination = (6, 6), deadline = 30
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 2.5 , self.eps_freq:  1.0 

annealing now. self.epsilon: 2.5 , action:  right , deadline: 30
annealing now. self.epsilon: 2.5 , action:  right , deadline: 29
annealing now. self.epsilon: 2.5 , action:  right , deadline: 28
annealing now. self.epsilon: 2.5 , action:  left , deadline: 27
annealing now. self.epsilon: 2.5 , action:  right , deadline: 26
annealing now. self.epsilon: 2.5 , action:  right , deadline: 25
Environment.act(): Primary agent has reached destination!
success: 1 / 1
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (7, 1), destination = (3, 3), deadline = 30
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 1.25 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.25 , action:  None , deadline: 30
annealing now. self.epsilon: 1.25 , action:  left , deadline: 29
annealing now. self.epsilon: 1.25 , action:  right , deadline: 28
annealing now. self.epsilon: 1.25 , action:  left , deadline: 27
annealing now. self.epsilon: 1.25 , action:  right , deadline: 26
annealing now. self.epsilon: 1.25 , action:  right , deadline: 25
annealing now. self.epsilon: 1.25 , action:  None , deadline: 24
annealing now. self.epsilon: 1.25 , action:  left , deadline: 23
annealing now. self.epsilon: 1.25 , action:  None , deadline: 22
annealing now. self.epsilon: 1.25 , action:  left , deadline: 21
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 20
annealing now. self.epsilon: 1.25 , action:  right , deadline: 19
annealing now. self.epsilon: 1.25 , action:  None , deadline: 18
annealing now. self.epsilon: 1.25 , action:  left , deadline: 17
annealing now. self.epsilon: 1.25 , action:  right , deadline: 16
annealing now. self.epsilon: 1.25 , action:  right , deadline: 15
annealing now. self.epsilon: 1.25 , action:  None , deadline: 14
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 13
annealing now. self.epsilon: 1.25 , action:  None , deadline: 12
annealing now. self.epsilon: 1.25 , action:  right , deadline: 11
annealing now. self.epsilon: 1.25 , action:  right , deadline: 10
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 9
annealing now. self.epsilon: 1.25 , action:  left , deadline: 8
annealing now. self.epsilon: 1.25 , action:  right , deadline: 7
annealing now. self.epsilon: 1.25 , action:  right , deadline: 6
annealing now. self.epsilon: 1.25 , action:  None , deadline: 5
annealing now. self.epsilon: 1.25 , action:  left , deadline: 4
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 3
annealing now. self.epsilon: 1.25 , action:  left , deadline: 2
success: 1 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (1, 1), destination = (5, 2), deadline = 25
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.833333333333 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 24
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 22
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 20
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 18
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 16
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 14
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 12
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 10
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 8
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 6
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 4
success: 1 / 3
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (3, 6), destination = (5, 3), deadline = 25
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.625 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.625 , action:  None , deadline: 24
annealing now. self.epsilon: 0.625 , action:  left , deadline: 22
annealing now. self.epsilon: 0.625 , action:  None , deadline: 20
annealing now. self.epsilon: 0.625 , action:  None , deadline: 18
annealing now. self.epsilon: 0.625 , action:  None , deadline: 16
annealing now. self.epsilon: 0.625 , action:  right , deadline: 14
annealing now. self.epsilon: 0.625 , action:  None , deadline: 12
annealing now. self.epsilon: 0.625 , action:  None , deadline: 10
annealing now. self.epsilon: 0.625 , action:  right , deadline: 8
annealing now. self.epsilon: 0.625 , action:  None , deadline: 6
annealing now. self.epsilon: 0.625 , action:  left , deadline: 4
success: 1 / 4
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (8, 1), destination = (4, 2), deadline = 25
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  None , deadline: 24
annealing now. self.epsilon: 0.5 , action:  right , deadline: 22
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.5 , action:  right , deadline: 18
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.5 , action:  right , deadline: 14
annealing now. self.epsilon: 0.5 , action:  None , deadline: 12
annealing now. self.epsilon: 0.5 , action:  right , deadline: 10
annealing now. self.epsilon: 0.5 , action:  right , deadline: 8
annealing now. self.epsilon: 0.5 , action:  right , deadline: 6
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 4
success: 1 / 5
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (3, 1), destination = (5, 5), deadline = 30
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.416666666667 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.416666666667 , action:  left , deadline: 30
annealing now. self.epsilon: 0.416666666667 , action:  left , deadline: 27
annealing now. self.epsilon: 0.416666666667 , action:  None , deadline: 24
annealing now. self.epsilon: 0.416666666667 , action:  None , deadline: 21
annealing now. self.epsilon: 0.416666666667 , action:  right , deadline: 18
annealing now. self.epsilon: 0.416666666667 , action:  left , deadline: 15
annealing now. self.epsilon: 0.416666666667 , action:  left , deadline: 12
annealing now. self.epsilon: 0.416666666667 , action:  left , deadline: 9
annealing now. self.epsilon: 0.416666666667 , action:  None , deadline: 6
success: 1 / 6
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (8, 6), destination = (2, 2), deadline = 50
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.357142857143 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 48
annealing now. self.epsilon: 0.357142857143 , action:  forward , deadline: 45
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 42
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 39
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 36
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 33
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 30
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 27
annealing now. self.epsilon: 0.357142857143 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 21
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 18
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 15
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 12
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 9
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 6
success: 1 / 7
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (3, 5), destination = (8, 5), deadline = 25
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.3125 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.3125 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.3125 , action:  left , deadline: 20
annealing now. self.epsilon: 0.3125 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.3125 , action:  forward , deadline: 12
annealing now. self.epsilon: 0.3125 , action:  forward , deadline: 8
success: 1 / 8
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (4, 2), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.277777777778 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.277777777778 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.277777777778 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.277777777778 , action:  left , deadline: 16
annealing now. self.epsilon: 0.277777777778 , action:  None , deadline: 12
annealing now. self.epsilon: 0.277777777778 , action:  None , deadline: 8
success: 1 / 9
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (7, 3), destination = (4, 6), deadline = 30
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  forward , deadline: 28
annealing now. self.epsilon: 0.25 , action:  right , deadline: 24
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.25 , action:  right , deadline: 12
annealing now. self.epsilon: 0.25 , action:  left , deadline: 8
success: 1 / 10
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (8, 3), destination = (4, 4), deadline = 25
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.227272727273 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.227272727273 , action:  left , deadline: 25
annealing now. self.epsilon: 0.227272727273 , action:  None , deadline: 20
annealing now. self.epsilon: 0.227272727273 , action:  left , deadline: 15
Environment.act(): Primary agent has reached destination!
success: 2 / 11
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (8, 5), destination = (6, 1), deadline = 30
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.208333333333 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.208333333333 , action:  None , deadline: 30
annealing now. self.epsilon: 0.208333333333 , action:  right , deadline: 25
annealing now. self.epsilon: 0.208333333333 , action:  right , deadline: 20
annealing now. self.epsilon: 0.208333333333 , action:  left , deadline: 15
annealing now. self.epsilon: 0.208333333333 , action:  None , deadline: 10
success: 2 / 12
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (3, 6), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.192307692308 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.192307692308 , action:  left , deadline: 30
annealing now. self.epsilon: 0.192307692308 , action:  None , deadline: 24
annealing now. self.epsilon: 0.192307692308 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.192307692308 , action:  None , deadline: 12
success: 2 / 13
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (2, 6), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.178571428571 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.178571428571 , action:  left , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 3 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (2, 6), destination = (1, 1), deadline = 30
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  left , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 4 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (5, 2), destination = (7, 5), deadline = 25
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.15625 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.15625 , action:  forward , deadline: 21
annealing now. self.epsilon: 0.15625 , action:  forward , deadline: 14
Environment.act(): Primary agent has reached destination!
success: 5 / 16
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (3, 3), destination = (8, 1), deadline = 35
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.147058823529 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.147058823529 , action:  forward , deadline: 35
annealing now. self.epsilon: 0.147058823529 , action:  left , deadline: 28
annealing now. self.epsilon: 0.147058823529 , action:  forward , deadline: 21
annealing now. self.epsilon: 0.147058823529 , action:  None , deadline: 14
success: 5 / 17
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (3, 3), destination = (6, 6), deadline = 30
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.138888888889 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.138888888889 , action:  right , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 6 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (3, 3), destination = (8, 1), deadline = 35
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.131578947368 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.131578947368 , action:  left , deadline: 32
annealing now. self.epsilon: 0.131578947368 , action:  left , deadline: 24
annealing now. self.epsilon: 0.131578947368 , action:  None , deadline: 16
success: 6 / 19
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (5, 1), destination = (1, 6), deadline = 45
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  None , deadline: 40
Environment.act(): Primary agent has reached destination!
success: 7 / 20
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (8, 2), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.119047619048 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.119047619048 , action:  right , deadline: 18
success: 7 / 21
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (1, 5), destination = (6, 6), deadline = 30
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.113636363636 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.113636363636 , action:  None , deadline: 27
Environment.act(): Primary agent has reached destination!
success: 8 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (4, 2), destination = (8, 2), deadline = 20
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.108695652174 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.108695652174 , action:  forward , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 9 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (2, 1), destination = (7, 2), deadline = 30
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.104166666667 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.104166666667 , action:  right , deadline: 30
annealing now. self.epsilon: 0.104166666667 , action:  None , deadline: 20
success: 9 / 24
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (4, 3), destination = (7, 2), deadline = 20
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  forward , deadline: 20
success: 9 / 25
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (3, 6), destination = (6, 3), deadline = 30
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0961538461538 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0961538461538 , action:  forward , deadline: 22
Environment.act(): Primary agent has reached destination!
success: 10 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (2, 3), destination = (6, 1), deadline = 30
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0925925925926 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0925925925926 , action:  left , deadline: 22
Environment.act(): Primary agent has reached destination!
success: 11 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (5, 6), destination = (1, 6), deadline = 20
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0892857142857 , self.eps_freq:  12.0 

Environment.act(): Primary agent has reached destination!
success: 12 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (7, 5), destination = (2, 1), deadline = 45
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0862068965517 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0862068965517 , action:  None , deadline: 36
annealing now. self.epsilon: 0.0862068965517 , action:  forward , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 13 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (1, 2), destination = (8, 1), deadline = 40
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  right , deadline: 36
annealing now. self.epsilon: 0.0833333333333 , action:  forward , deadline: 24
success: 13 / 30
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (7, 1), destination = (8, 4), deadline = 20
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0806451612903 , self.eps_freq:  13.0 

Environment.act(): Primary agent has reached destination!
success: 14 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (1, 2), destination = (8, 4), deadline = 45
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.078125 , self.eps_freq:  13.0 

annealing now. self.epsilon: 0.078125 , action:  right , deadline: 39
annealing now. self.epsilon: 0.078125 , action:  left , deadline: 26
Environment.act(): Primary agent has reached destination!
success: 15 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (8, 2), destination = (5, 6), deadline = 35
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0757575757576 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0757575757576 , action:  left , deadline: 28
success: 15 / 33
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 2), deadline = 45
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0735294117647 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0735294117647 , action:  left , deadline: 42
annealing now. self.epsilon: 0.0735294117647 , action:  left , deadline: 28
Environment.act(): Primary agent has reached destination!
success: 16 / 34
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (7, 6), destination = (4, 2), deadline = 35
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0714285714286 , action:  None , deadline: 28
success: 16 / 35
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (1, 4), destination = (6, 1), deadline = 40
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0694444444444 , self.eps_freq:  15.0 

annealing now. self.epsilon: 0.0694444444444 , action:  left , deadline: 30
success: 16 / 36
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (6, 6), destination = (5, 1), deadline = 30
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0675675675676 , self.eps_freq:  15.0 

annealing now. self.epsilon: 0.0675675675676 , action:  right , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 17 / 37
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (1, 4), destination = (3, 2), deadline = 20
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0657894736842 , self.eps_freq:  16.0 

success: 17 / 38
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (7, 2), destination = (4, 4), deadline = 25
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0641025641026 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 18 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (5, 6), destination = (2, 3), deadline = 30
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 19 / 40
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (3, 2), destination = (1, 4), deadline = 20
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0609756097561 , self.eps_freq:  17.0 

success: 19 / 41
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (2, 3), destination = (6, 1), deadline = 30
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0595238095238 , self.eps_freq:  17.0 

success: 19 / 42
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (1, 1), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0581395348837 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 20 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (1, 3), destination = (8, 3), deadline = 35
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0568181818182 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 21 / 44
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (1, 1), destination = (6, 6), deadline = 50
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 22 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (1, 3), destination = (7, 4), deadline = 35
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.054347826087 , self.eps_freq:  19.0 

Environment.act(): Primary agent has reached destination!
success: 23 / 46
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (3, 4), destination = (8, 2), deadline = 35
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0531914893617 , self.eps_freq:  19.0 

success: 23 / 47
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (8, 5), destination = (3, 3), deadline = 35
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0520833333333 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (7, 2), destination = (8, 5), deadline = 20
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0510204081633 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (4, 3), destination = (7, 1), deadline = 25
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.05 , self.eps_freq:  20.0 

success: 25 / 50
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (5, 2), destination = (1, 5), deadline = 35
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0490196078431 , self.eps_freq:  21.0 

success: 25 / 51
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (8, 1), destination = (4, 5), deadline = 40
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0480769230769 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 52
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (4, 5), destination = (7, 1), deadline = 35
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0471698113208 , self.eps_freq:  22.0 

success: 26 / 53
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (3, 1), destination = (8, 3), deadline = 35
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0462962962963 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (2, 6), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (4, 3), destination = (7, 6), deadline = 30
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0446428571429 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (8, 1), destination = (2, 5), deadline = 50
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0438596491228 , self.eps_freq:  23.0 

annealing now. self.epsilon: 0.0438596491228 , action:  left , deadline: 46
Environment.act(): Primary agent has reached destination!
success: 30 / 57
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (4, 6), destination = (8, 3), deadline = 35
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0431034482759 , self.eps_freq:  24.0 

success: 30 / 58
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (8, 1), destination = (2, 3), deadline = 40
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0423728813559 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (5, 1), destination = (3, 4), deadline = 25
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (8, 2), destination = (5, 6), deadline = 35
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0409836065574 , self.eps_freq:  25.0 

success: 32 / 61
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (2, 1), destination = (4, 5), deadline = 30
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0403225806452 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 62
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (5, 3), destination = (3, 1), deadline = 20
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0396825396825 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (3, 4), destination = (8, 5), deadline = 30
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0390625 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 35 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (5, 5), destination = (8, 6), deadline = 20
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (1, 5), destination = (6, 4), deadline = 30
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0378787878788 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (8, 1), destination = (4, 1), deadline = 20
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0373134328358 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (7, 5), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0367647058824 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (2, 5), destination = (1, 2), deadline = 20
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.036231884058 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (8, 3), destination = (3, 2), deadline = 30
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 70
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (4, 6), destination = (1, 1), deadline = 40
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0352112676056 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (7, 5), destination = (8, 1), deadline = 25
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0347222222222 , self.eps_freq:  29.0 

success: 42 / 72
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (4, 5), destination = (1, 6), deadline = 20
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0342465753425 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (1, 1), destination = (4, 3), deadline = 25
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0337837837838 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (6, 3), destination = (3, 2), deadline = 20
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (8, 1), destination = (5, 4), deadline = 30
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0328947368421 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 76
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (2, 2), destination = (6, 1), deadline = 25
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0324675324675 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 47 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (7, 6), destination = (1, 5), deadline = 35
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0320512820513 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 78
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (8, 5), destination = (1, 6), deadline = 40
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0316455696203 , self.eps_freq:  32.0 

success: 48 / 79
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (5, 5), destination = (6, 1), deadline = 25
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

success: 48 / 80
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (5, 1), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0308641975309 , self.eps_freq:  33.0 

success: 48 / 81
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (8, 6), destination = (3, 2), deadline = 45
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.030487804878 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (1, 6), destination = (4, 4), deadline = 25
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0301204819277 , self.eps_freq:  34.0 

success: 49 / 83
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (7, 4), destination = (2, 3), deadline = 30
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0297619047619 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 84
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (7, 4), destination = (8, 1), deadline = 20
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

success: 50 / 85
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (1, 6), destination = (3, 2), deadline = 30
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0290697674419 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (1, 2), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0287356321839 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (2, 3), destination = (8, 1), deadline = 40
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0284090909091 , self.eps_freq:  36.0 

success: 52 / 88
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (6, 5), destination = (8, 1), deadline = 30
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0280898876404 , self.eps_freq:  36.0 

success: 52 / 89
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (1, 2), destination = (2, 5), deadline = 20
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 53 / 90
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (7, 2), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0274725274725 , self.eps_freq:  37.0 

success: 53 / 91
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (4, 1), destination = (3, 4), deadline = 20
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0271739130435 , self.eps_freq:  37.0 

success: 53 / 92
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (1, 2), destination = (7, 1), deadline = 35
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0268817204301 , self.eps_freq:  38.0 

success: 53 / 93
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (7, 2), destination = (1, 4), deadline = 40
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0265957446809 , self.eps_freq:  38.0 

success: 53 / 94
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (4, 1), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 54 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (8, 4), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0260416666667 , self.eps_freq:  39.0 

success: 54 / 96
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (5, 5), destination = (7, 1), deadline = 30
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0257731958763 , self.eps_freq:  39.0 

success: 54 / 97
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (8, 2), destination = (3, 5), deadline = 40
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0255102040816 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 55 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (7, 6), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0252525252525 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (5, 6), destination = (7, 2), deadline = 30
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.025 , self.eps_freq:  40.0 

success: 56 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99526
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02500
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02041
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08754
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01724
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02500
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04170
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.82407
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.03564
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.40916
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05734
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01754
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.32002
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.54480
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01493
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.11111
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.89342
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.98331
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.27262
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01064
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.53582
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03571
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07086
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09938
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.20014
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.67049
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.18209
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.25000
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08842
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08107
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.16611
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03030
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.64326
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.24968
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.20000
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08333
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01887
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07142
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.15981
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.20000
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.50000
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01000
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.89326
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 3.41403
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.81411
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.03387
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.04007
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.35953
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.03387
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50008
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.10482
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.33811
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.10271
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.25764
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.20400
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 2.03134
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.74215
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.53025
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.26577
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.98147
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.35724
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.14625
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.05223
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.01529
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.60220
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: -0.50000
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: -0.09988
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.52507
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.13498
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.25000
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.59614
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.99766
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.10698
--------------------------------------------------------------------------------
updated cells:  73 , self.total_cell_count: 2048 , updated_func_counter: 2078
self.alpha: 0.5 self.gamma: 0.05 , self.epsilon: 0.5 , success: 56  in steps:  0
________________________________________________________________________________
Environment.reset(): Primary agent could not reach destination within deadline!
gma = 0.05
eps = 0.2
alp = 0.5
epsilon:  0.2
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (6, 5), destination = (1, 4), deadline = 30
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 1.0 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.0 , action:  left , deadline: 30
annealing now. self.epsilon: 1.0 , action:  None , deadline: 29
annealing now. self.epsilon: 1.0 , action:  left , deadline: 28
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 27
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 26
annealing now. self.epsilon: 1.0 , action:  right , deadline: 25
annealing now. self.epsilon: 1.0 , action:  left , deadline: 24
annealing now. self.epsilon: 1.0 , action:  left , deadline: 23
annealing now. self.epsilon: 1.0 , action:  right , deadline: 22
annealing now. self.epsilon: 1.0 , action:  left , deadline: 21
annealing now. self.epsilon: 1.0 , action:  None , deadline: 20
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 19
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 18
annealing now. self.epsilon: 1.0 , action:  left , deadline: 17
annealing now. self.epsilon: 1.0 , action:  None , deadline: 16
annealing now. self.epsilon: 1.0 , action:  left , deadline: 15
annealing now. self.epsilon: 1.0 , action:  left , deadline: 14
annealing now. self.epsilon: 1.0 , action:  right , deadline: 13
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 12
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 11
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 10
annealing now. self.epsilon: 1.0 , action:  right , deadline: 9
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 8
annealing now. self.epsilon: 1.0 , action:  left , deadline: 7
annealing now. self.epsilon: 1.0 , action:  left , deadline: 6
annealing now. self.epsilon: 1.0 , action:  None , deadline: 5
annealing now. self.epsilon: 1.0 , action:  right , deadline: 4
annealing now. self.epsilon: 1.0 , action:  left , deadline: 3
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 2
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (1, 6), destination = (6, 1), deadline = 50
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  None , deadline: 50
annealing now. self.epsilon: 0.5 , action:  left , deadline: 48
annealing now. self.epsilon: 0.5 , action:  left , deadline: 46
annealing now. self.epsilon: 0.5 , action:  right , deadline: 44
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 42
annealing now. self.epsilon: 0.5 , action:  left , deadline: 40
annealing now. self.epsilon: 0.5 , action:  right , deadline: 38
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 36
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 34
Environment.act(): Primary agent has reached destination!
success: 1 / 2
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (5, 2), destination = (2, 1), deadline = 20
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.333333333333 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.333333333333 , action:  right , deadline: 18
annealing now. self.epsilon: 0.333333333333 , action:  None , deadline: 15
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 12
annealing now. self.epsilon: 0.333333333333 , action:  forward , deadline: 9
annealing now. self.epsilon: 0.333333333333 , action:  forward , deadline: 6
success: 1 / 3
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (6, 4), destination = (4, 6), deadline = 20
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  right , deadline: 20
annealing now. self.epsilon: 0.25 , action:  None , deadline: 16
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 2 / 4
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (2, 1), destination = (8, 3), deadline = 40
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.2 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.2 , action:  None , deadline: 40
annealing now. self.epsilon: 0.2 , action:  None , deadline: 35
annealing now. self.epsilon: 0.2 , action:  left , deadline: 30
annealing now. self.epsilon: 0.2 , action:  None , deadline: 25
annealing now. self.epsilon: 0.2 , action:  None , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 3 / 5
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (2, 2), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 4 / 6
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (2, 2), destination = (6, 6), deadline = 40
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.142857142857 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.142857142857 , action:  forward , deadline: 35
Environment.act(): Primary agent has reached destination!
success: 5 / 7
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (3, 5), destination = (7, 5), deadline = 20
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  right , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 6 / 8
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (3, 2), destination = (7, 2), deadline = 20
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.111111111111 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.111111111111 , action:  forward , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 7 / 9
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (1, 6), destination = (3, 3), deadline = 25
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  right , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 8 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (5, 6), destination = (7, 4), deadline = 20
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0909090909091 , self.eps_freq:  11.0 

Environment.act(): Primary agent has reached destination!
success: 9 / 11
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (3, 5), destination = (8, 4), deadline = 30
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  forward , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 10 / 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (3, 4), destination = (6, 5), deadline = 20
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0769230769231 , self.eps_freq:  13.0 

Environment.act(): Primary agent has reached destination!
success: 11 / 13
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (1, 3), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 12 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (2, 1), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0666666666667 , self.eps_freq:  15.0 

Environment.act(): Primary agent has reached destination!
success: 13 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (7, 1), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 14 / 16
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (3, 5), destination = (8, 5), deadline = 25
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0588235294118 , self.eps_freq:  17.0 

success: 14 / 17
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (1, 1), destination = (7, 2), deadline = 35
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 15 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (5, 5), destination = (8, 1), deadline = 35
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0526315789474 , self.eps_freq:  19.0 

Environment.act(): Primary agent has reached destination!
success: 16 / 19
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (1, 1), destination = (6, 1), deadline = 25
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.05 , self.eps_freq:  20.0 

success: 16 / 20
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (4, 2), destination = (1, 3), deadline = 20
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.047619047619 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 17 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (8, 2), destination = (3, 4), deadline = 35
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 18 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (3, 3), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0434782608696 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 19 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (8, 1), destination = (5, 5), deadline = 35
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 20 / 24
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (5, 1), destination = (1, 3), deadline = 30
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.04 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 21 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (4, 6), destination = (5, 1), deadline = 30
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 22 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (4, 3), destination = (7, 1), deadline = 25
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.037037037037 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 23 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (2, 6), destination = (8, 5), deadline = 35
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (2, 6), destination = (7, 4), deadline = 35
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0344827586207 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (7, 1), destination = (7, 6), deadline = 25
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

success: 25 / 30
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (4, 4), destination = (8, 6), deadline = 30
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0322580645161 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (1, 5), destination = (8, 4), deadline = 40
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (5, 1), destination = (8, 2), deadline = 20
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.030303030303 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 33
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (2, 3), destination = (7, 2), deadline = 30
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 34
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (1, 1), destination = (6, 4), deadline = 40
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0285714285714 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 35
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (7, 4), destination = (4, 2), deadline = 25
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 36
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (5, 2), destination = (1, 5), deadline = 35
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.027027027027 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 37
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (5, 2), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (1, 2), destination = (8, 5), deadline = 50
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.025641025641 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (4, 6), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 35 / 40
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (4, 4), destination = (8, 3), deadline = 25
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0243902439024 , self.eps_freq:  41.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 41
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (1, 6), destination = (2, 1), deadline = 30
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 42
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (1, 2), destination = (4, 1), deadline = 20
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0232558139535 , self.eps_freq:  43.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (6, 4), destination = (1, 2), deadline = 35
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 44
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (3, 6), destination = (8, 3), deadline = 40
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0222222222222 , self.eps_freq:  45.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (8, 5), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 46
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (2, 6), destination = (1, 1), deadline = 30
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0212765957447 , self.eps_freq:  47.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 47
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (3, 3), destination = (1, 1), deadline = 20
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (6, 4), destination = (3, 1), deadline = 30
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0204081632653 , self.eps_freq:  50.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (6, 5), destination = (4, 1), deadline = 30
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.02 , self.eps_freq:  50.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (3, 4), destination = (1, 1), deadline = 25
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0196078431373 , self.eps_freq:  51.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (2, 2), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

Environment.act(): Primary agent has reached destination!
success: 47 / 52
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (6, 4), destination = (2, 1), deadline = 35
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0188679245283 , self.eps_freq:  53.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (3, 2), destination = (7, 5), deadline = 35
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (1, 6), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0181818181818 , self.eps_freq:  55.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (3, 2), destination = (1, 4), deadline = 20
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (3, 1), destination = (8, 3), deadline = 35
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0175438596491 , self.eps_freq:  57.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 57
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (4, 1), destination = (8, 1), deadline = 20
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

Environment.act(): Primary agent has reached destination!
success: 53 / 58
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (4, 4), destination = (3, 1), deadline = 20
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0169491525424 , self.eps_freq:  59.0 

Environment.act(): Primary agent has reached destination!
success: 54 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (8, 5), destination = (2, 1), deadline = 50
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

Environment.act(): Primary agent has reached destination!
success: 55 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (5, 1), destination = (2, 5), deadline = 35
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.016393442623 , self.eps_freq:  61.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 61
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (3, 5), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

Environment.act(): Primary agent has reached destination!
success: 57 / 62
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (1, 5), destination = (6, 6), deadline = 30
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.015873015873 , self.eps_freq:  63.0 

Environment.act(): Primary agent has reached destination!
success: 58 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (5, 1), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

Environment.act(): Primary agent has reached destination!
success: 59 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (3, 3), destination = (7, 6), deadline = 35
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0153846153846 , self.eps_freq:  65.0 

Environment.act(): Primary agent has reached destination!
success: 60 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (8, 2), destination = (1, 4), deadline = 45
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

Environment.act(): Primary agent has reached destination!
success: 61 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (6, 4), destination = (7, 1), deadline = 20
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0149253731343 , self.eps_freq:  67.0 

Environment.act(): Primary agent has reached destination!
success: 62 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (7, 6), destination = (7, 1), deadline = 25
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

success: 62 / 68
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (7, 3), destination = (3, 1), deadline = 30
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0144927536232 , self.eps_freq:  69.0 

Environment.act(): Primary agent has reached destination!
success: 63 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (5, 4), destination = (2, 2), deadline = 25
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

Environment.act(): Primary agent has reached destination!
success: 64 / 70
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (7, 4), destination = (1, 2), deadline = 40
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0140845070423 , self.eps_freq:  71.0 

Environment.act(): Primary agent has reached destination!
success: 65 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (7, 1), destination = (8, 6), deadline = 30
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

Environment.act(): Primary agent has reached destination!
success: 66 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (4, 1), destination = (1, 2), deadline = 20
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.013698630137 , self.eps_freq:  73.0 

Environment.act(): Primary agent has reached destination!
success: 67 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (7, 2), destination = (1, 3), deadline = 35
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

Environment.act(): Primary agent has reached destination!
success: 68 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (5, 5), destination = (2, 1), deadline = 35
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0133333333333 , self.eps_freq:  75.0 

Environment.act(): Primary agent has reached destination!
success: 69 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (3, 4), destination = (7, 3), deadline = 25
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

Environment.act(): Primary agent has reached destination!
success: 70 / 76
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (5, 3), destination = (1, 4), deadline = 25
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.012987012987 , self.eps_freq:  77.0 

Environment.act(): Primary agent has reached destination!
success: 71 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (6, 5), destination = (4, 2), deadline = 25
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

Environment.act(): Primary agent has reached destination!
success: 72 / 78
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (1, 4), destination = (6, 5), deadline = 30
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0126582278481 , self.eps_freq:  79.0 

Environment.act(): Primary agent has reached destination!
success: 73 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (4, 3), destination = (2, 5), deadline = 20
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

Environment.act(): Primary agent has reached destination!
success: 74 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (2, 4), destination = (5, 2), deadline = 25
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0123456790123 , self.eps_freq:  81.0 

Environment.act(): Primary agent has reached destination!
success: 75 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (1, 1), destination = (7, 1), deadline = 30
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

Environment.act(): Primary agent has reached destination!
success: 76 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (7, 4), destination = (4, 2), deadline = 25
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0120481927711 , self.eps_freq:  83.0 

Environment.act(): Primary agent has reached destination!
success: 77 / 83
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (8, 1), destination = (3, 4), deadline = 40
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

Environment.act(): Primary agent has reached destination!
success: 78 / 84
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (6, 1), destination = (4, 4), deadline = 25
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0117647058824 , self.eps_freq:  85.0 

Environment.act(): Primary agent has reached destination!
success: 79 / 85
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (5, 5), destination = (8, 2), deadline = 30
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

Environment.act(): Primary agent has reached destination!
success: 80 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (6, 6), destination = (6, 1), deadline = 25
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0114942528736 , self.eps_freq:  87.0 

Environment.act(): Primary agent has reached destination!
success: 81 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (2, 6), destination = (1, 3), deadline = 20
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

Environment.act(): Primary agent has reached destination!
success: 82 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (5, 4), destination = (1, 4), deadline = 20
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0112359550562 , self.eps_freq:  89.0 

Environment.act(): Primary agent has reached destination!
success: 83 / 89
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (8, 2), destination = (4, 6), deadline = 40
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

Environment.act(): Primary agent has reached destination!
success: 84 / 90
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (2, 2), destination = (6, 4), deadline = 30
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.010989010989 , self.eps_freq:  91.0 

Environment.act(): Primary agent has reached destination!
success: 85 / 91
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (6, 2), destination = (8, 6), deadline = 30
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

Environment.act(): Primary agent has reached destination!
success: 86 / 92
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 1), deadline = 50
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.010752688172 , self.eps_freq:  93.0 

Environment.act(): Primary agent has reached destination!
success: 87 / 93
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (5, 4), destination = (1, 3), deadline = 25
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

success: 87 / 94
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (3, 3), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0105263157895 , self.eps_freq:  95.0 

Environment.act(): Primary agent has reached destination!
success: 88 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (1, 4), destination = (2, 1), deadline = 20
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

Environment.act(): Primary agent has reached destination!
success: 89 / 96
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (3, 6), destination = (2, 2), deadline = 25
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0103092783505 , self.eps_freq:  97.0 

Environment.act(): Primary agent has reached destination!
success: 90 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (2, 1), destination = (1, 4), deadline = 20
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

Environment.act(): Primary agent has reached destination!
success: 91 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (2, 6), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.010101010101 , self.eps_freq:  99.0 

Environment.act(): Primary agent has reached destination!
success: 92 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (4, 5), destination = (3, 1), deadline = 25
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.01 , self.eps_freq:  100.0 

Environment.act(): Primary agent has reached destination!
success: 93 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99020
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05263
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04104
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01020
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01075
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06250
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04325
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02632
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.81045
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.38134
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.33177
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04348
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08300
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.37555
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01639
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03827
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.84233
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01471
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.01218
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.55694
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.30590
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02778
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.80758
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.01114
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06107
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.88886
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.01083
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 4.06189
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.30584
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.46301
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.98696
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: -1.00000
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.51015
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.17102
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.24688
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.25312
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.25000
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.32380
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.50772
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.53646
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.17923
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.08964
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.01298
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.51799
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.01282
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: -0.33101
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.48718
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 4.38779
--------------------------------------------------------------------------------
updated cells:  48 , self.total_cell_count: 2048 , updated_func_counter: 1387
self.alpha: 0.5 self.gamma: 0.05 , self.epsilon: 0.2 , success: 93  in steps:  17
________________________________________________________________________________
gma = 0.05
eps = 0.1
alp = 0.5
epsilon:  0.1
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (4, 5), destination = (1, 4), deadline = 20
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  right , deadline: 20
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.5 , action:  left , deadline: 14
annealing now. self.epsilon: 0.5 , action:  left , deadline: 12
annealing now. self.epsilon: 0.5 , action:  right , deadline: 10
annealing now. self.epsilon: 0.5 , action:  right , deadline: 8
annealing now. self.epsilon: 0.5 , action:  left , deadline: 6
annealing now. self.epsilon: 0.5 , action:  left , deadline: 4
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (5, 4), destination = (2, 5), deadline = 20
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.25 , action:  right , deadline: 16
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 12
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 8
success: 0 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (5, 1), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 18
annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 12
success: 0 / 3
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (5, 4), destination = (3, 2), deadline = 20
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  forward , deadline: 16
success: 0 / 4
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (6, 6), destination = (8, 1), deadline = 35
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.1 , action:  forward , deadline: 20
success: 0 / 5
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (4, 5), destination = (7, 6), deadline = 20
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

success: 0 / 6
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (3, 3), destination = (8, 2), deadline = 30
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0714285714286 , action:  right , deadline: 28
success: 0 / 7
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (7, 4), destination = (1, 1), deadline = 45
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

annealing now. self.epsilon: 0.0625 , action:  None , deadline: 32
success: 0 / 8
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (1, 1), destination = (5, 6), deadline = 45
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

annealing now. self.epsilon: 0.0555555555556 , action:  None , deadline: 36
success: 0 / 9
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (6, 5), destination = (1, 4), deadline = 30
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.05 , self.eps_freq:  20.0 

success: 0 / 10
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (5, 6), destination = (1, 5), deadline = 25
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

success: 0 / 11
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (2, 4), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

success: 0 / 12
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (7, 5), destination = (3, 1), deadline = 40
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

success: 0 / 13
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (5, 4), destination = (3, 2), deadline = 20
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 1 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (3, 1), destination = (7, 3), deadline = 30
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

success: 1 / 15
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (7, 4), destination = (2, 1), deadline = 40
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

success: 1 / 16
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (5, 1), destination = (2, 4), deadline = 30
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

success: 1 / 17
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (1, 1), destination = (5, 1), deadline = 20
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

success: 1 / 18
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (8, 1), destination = (4, 5), deadline = 40
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

success: 1 / 19
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (8, 6), destination = (4, 1), deadline = 45
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.025 , self.eps_freq:  40.0 

success: 1 / 20
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (5, 4), destination = (6, 1), deadline = 20
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

success: 1 / 21
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (6, 2), destination = (3, 3), deadline = 20
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

success: 1 / 22
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (3, 5), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

success: 1 / 23
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (1, 2), destination = (4, 4), deadline = 25
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

success: 1 / 24
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (3, 1), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.02 , self.eps_freq:  50.0 

Environment.act(): Primary agent has reached destination!
success: 2 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (6, 2), destination = (2, 6), deadline = 40
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

success: 2 / 26
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (5, 2), destination = (3, 4), deadline = 20
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

success: 2 / 27
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (3, 2), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

success: 2 / 28
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (7, 3), destination = (3, 4), deadline = 25
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

success: 2 / 29
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (5, 5), destination = (8, 3), deadline = 25
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

success: 2 / 30
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (8, 2), destination = (6, 4), deadline = 20
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

success: 2 / 31
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (3, 4), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

success: 2 / 32
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (1, 3), destination = (5, 1), deadline = 30
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

success: 2 / 33
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (7, 4), destination = (1, 5), deadline = 35
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

success: 2 / 34
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (4, 2), destination = (8, 6), deadline = 40
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

success: 2 / 35
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (4, 2), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

success: 2 / 36
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (6, 4), destination = (3, 3), deadline = 20
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

success: 2 / 37
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (3, 2), destination = (8, 6), deadline = 45
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

success: 2 / 38
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (1, 1), destination = (4, 4), deadline = 30
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

success: 2 / 39
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (4, 4), destination = (8, 1), deadline = 35
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

success: 2 / 40
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (6, 2), destination = (2, 6), deadline = 40
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

success: 2 / 41
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (1, 6), destination = (3, 3), deadline = 25
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

success: 2 / 42
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (4, 3), destination = (6, 1), deadline = 20
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

success: 2 / 43
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (2, 3), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

success: 2 / 44
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (2, 4), destination = (4, 6), deadline = 20
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

success: 2 / 45
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (3, 6), destination = (8, 4), deadline = 35
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

success: 2 / 46
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (8, 2), destination = (1, 5), deadline = 50
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

success: 2 / 47
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (5, 6), destination = (1, 2), deadline = 40
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

success: 2 / 48
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (8, 2), destination = (2, 5), deadline = 45
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

success: 2 / 49
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (7, 6), destination = (2, 6), deadline = 25
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.01 , self.eps_freq:  100.0 

success: 2 / 50
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (1, 4), destination = (6, 4), deadline = 25
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.00980392156863 , self.eps_freq:  102.0 

success: 2 / 51
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (2, 5), destination = (6, 3), deadline = 30
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.00961538461538 , self.eps_freq:  104.0 

success: 2 / 52
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (1, 6), destination = (7, 2), deadline = 50
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.00943396226415 , self.eps_freq:  106.0 

success: 2 / 53
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (1, 5), destination = (6, 3), deadline = 35
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.00925925925926 , self.eps_freq:  108.0 

success: 2 / 54
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (2, 4), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.00909090909091 , self.eps_freq:  110.0 

success: 2 / 55
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (2, 2), destination = (8, 3), deadline = 35
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.00892857142857 , self.eps_freq:  112.0 

success: 2 / 56
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (1, 2), destination = (5, 4), deadline = 30
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.00877192982456 , self.eps_freq:  114.0 

Environment.act(): Primary agent has reached destination!
success: 3 / 57
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (8, 1), destination = (7, 6), deadline = 30
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.00862068965517 , self.eps_freq:  116.0 

success: 3 / 58
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (6, 3), destination = (8, 5), deadline = 20
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.00847457627119 , self.eps_freq:  118.0 

Environment.act(): Primary agent has reached destination!
success: 4 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (2, 2), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.00833333333333 , self.eps_freq:  120.0 

Environment.act(): Primary agent has reached destination!
success: 5 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (4, 5), destination = (1, 2), deadline = 30
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.00819672131148 , self.eps_freq:  122.0 

success: 5 / 61
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (5, 2), destination = (2, 4), deadline = 25
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.00806451612903 , self.eps_freq:  124.0 

success: 5 / 62
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (6, 5), destination = (7, 1), deadline = 25
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.00793650793651 , self.eps_freq:  126.0 

success: 5 / 63
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (8, 3), destination = (1, 1), deadline = 45
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0078125 , self.eps_freq:  128.0 

success: 5 / 64
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (4, 1), destination = (8, 1), deadline = 20
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00769230769231 , self.eps_freq:  130.0 

Environment.act(): Primary agent has reached destination!
success: 6 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (8, 6), destination = (7, 2), deadline = 25
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.00757575757576 , self.eps_freq:  132.0 

Environment.act(): Primary agent has reached destination!
success: 7 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (1, 4), destination = (5, 5), deadline = 25
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.00746268656716 , self.eps_freq:  134.0 

success: 7 / 67
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (3, 5), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.00735294117647 , self.eps_freq:  136.0 

success: 7 / 68
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (7, 5), destination = (3, 4), deadline = 25
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.00724637681159 , self.eps_freq:  138.0 

success: 7 / 69
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (5, 3), destination = (3, 1), deadline = 20
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.00714285714286 , self.eps_freq:  140.0 

success: 7 / 70
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (4, 4), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.00704225352113 , self.eps_freq:  142.0 

success: 7 / 71
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (1, 3), destination = (7, 6), deadline = 45
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.00694444444444 , self.eps_freq:  144.0 

success: 7 / 72
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (8, 1), destination = (8, 6), deadline = 25
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.00684931506849 , self.eps_freq:  146.0 

success: 7 / 73
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (7, 6), destination = (2, 5), deadline = 30
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.00675675675676 , self.eps_freq:  148.0 

success: 7 / 74
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (4, 5), destination = (8, 3), deadline = 30
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.00666666666667 , self.eps_freq:  150.0 

success: 7 / 75
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (3, 2), destination = (2, 5), deadline = 20
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.00657894736842 , self.eps_freq:  152.0 

success: 7 / 76
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (8, 5), destination = (5, 1), deadline = 35
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.00649350649351 , self.eps_freq:  154.0 

success: 7 / 77
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (3, 1), destination = (8, 6), deadline = 50
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.00641025641026 , self.eps_freq:  156.0 

success: 7 / 78
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (1, 6), destination = (8, 1), deadline = 60
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00632911392405 , self.eps_freq:  158.0 

success: 7 / 79
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (5, 5), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.00625 , self.eps_freq:  160.0 

success: 7 / 80
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (2, 1), destination = (5, 6), deadline = 40
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.00617283950617 , self.eps_freq:  162.0 

success: 7 / 81
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (7, 4), destination = (1, 3), deadline = 35
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.00609756097561 , self.eps_freq:  164.0 

success: 7 / 82
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 6), deadline = 35
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.00602409638554 , self.eps_freq:  166.0 

success: 7 / 83
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (2, 3), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.00595238095238 , self.eps_freq:  168.0 

success: 7 / 84
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (8, 1), destination = (3, 3), deadline = 35
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.00588235294118 , self.eps_freq:  170.0 

success: 7 / 85
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (2, 6), destination = (7, 5), deadline = 30
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.00581395348837 , self.eps_freq:  172.0 

success: 7 / 86
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (7, 6), destination = (4, 2), deadline = 35
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.00574712643678 , self.eps_freq:  174.0 

success: 7 / 87
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (1, 4), destination = (5, 2), deadline = 30
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.00568181818182 , self.eps_freq:  176.0 

success: 7 / 88
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (6, 5), destination = (1, 6), deadline = 30
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.00561797752809 , self.eps_freq:  178.0 

success: 7 / 89
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (1, 3), destination = (3, 1), deadline = 20
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.00555555555556 , self.eps_freq:  180.0 

Environment.act(): Primary agent has reached destination!
success: 8 / 90
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (2, 1), destination = (3, 5), deadline = 25
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.00549450549451 , self.eps_freq:  182.0 

success: 8 / 91
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (8, 3), destination = (3, 2), deadline = 30
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0054347826087 , self.eps_freq:  184.0 

success: 8 / 92
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (1, 5), destination = (6, 4), deadline = 30
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.00537634408602 , self.eps_freq:  186.0 

success: 8 / 93
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (6, 1), destination = (8, 5), deadline = 30
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.00531914893617 , self.eps_freq:  188.0 

success: 8 / 94
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (2, 3), destination = (6, 1), deadline = 30
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.00526315789474 , self.eps_freq:  190.0 

success: 8 / 95
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (2, 6), destination = (2, 1), deadline = 25
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.00520833333333 , self.eps_freq:  192.0 

Environment.act(): Primary agent has reached destination!
success: 9 / 96
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (5, 5), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.00515463917526 , self.eps_freq:  194.0 

Environment.act(): Primary agent has reached destination!
success: 10 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (2, 1), destination = (4, 5), deadline = 30
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.00510204081633 , self.eps_freq:  197.0 

success: 10 / 98
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (8, 4), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.00505050505051 , self.eps_freq:  198.0 

success: 10 / 99
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (8, 5), destination = (1, 6), deadline = 40
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.005 , self.eps_freq:  200.0 

success: 10 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04167
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.89091
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00000
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01923
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.87003
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.98750
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04103
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.31753
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99340
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.21846
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12397
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12440
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.26043
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01205
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07455
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.94680
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04720
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.01845
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.53759
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06351
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07692
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.18644
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.24758
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06423
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.20521
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10000
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.18307
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.00000
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 3.23800
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.52152
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.38281
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.32387
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50691
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.02276
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.02495
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.26266
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.07504
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.53781
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.00016
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.00000
--------------------------------------------------------------------------------
updated cells:  40 , self.total_cell_count: 2048 , updated_func_counter: 2930
self.alpha: 0.5 self.gamma: 0.05 , self.epsilon: 0.1 , success: 10  in steps:  0
________________________________________________________________________________
Environment.reset(): Primary agent could not reach destination within deadline!
gma = 0.1
eps = 0.5
alp = 0.5
epsilon:  0.5
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (4, 6), destination = (3, 2), deadline = 25
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 2.5 , self.eps_freq:  1.0 

annealing now. self.epsilon: 2.5 , action:  right , deadline: 25
annealing now. self.epsilon: 2.5 , action:  None , deadline: 24
annealing now. self.epsilon: 2.5 , action:  left , deadline: 23
annealing now. self.epsilon: 2.5 , action:  right , deadline: 22
annealing now. self.epsilon: 2.5 , action:  left , deadline: 21
Environment.act(): Primary agent has reached destination!
success: 1 / 1
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (8, 3), destination = (3, 5), deadline = 35
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 1.25 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.25 , action:  left , deadline: 35
annealing now. self.epsilon: 1.25 , action:  right , deadline: 34
annealing now. self.epsilon: 1.25 , action:  None , deadline: 33
annealing now. self.epsilon: 1.25 , action:  left , deadline: 32
annealing now. self.epsilon: 1.25 , action:  right , deadline: 31
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 30
annealing now. self.epsilon: 1.25 , action:  None , deadline: 29
annealing now. self.epsilon: 1.25 , action:  right , deadline: 28
annealing now. self.epsilon: 1.25 , action:  None , deadline: 27
annealing now. self.epsilon: 1.25 , action:  left , deadline: 26
annealing now. self.epsilon: 1.25 , action:  None , deadline: 25
annealing now. self.epsilon: 1.25 , action:  left , deadline: 24
annealing now. self.epsilon: 1.25 , action:  None , deadline: 23
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 22
annealing now. self.epsilon: 1.25 , action:  None , deadline: 21
annealing now. self.epsilon: 1.25 , action:  right , deadline: 20
annealing now. self.epsilon: 1.25 , action:  right , deadline: 19
annealing now. self.epsilon: 1.25 , action:  left , deadline: 18
annealing now. self.epsilon: 1.25 , action:  left , deadline: 17
annealing now. self.epsilon: 1.25 , action:  right , deadline: 16
annealing now. self.epsilon: 1.25 , action:  right , deadline: 15
annealing now. self.epsilon: 1.25 , action:  right , deadline: 14
annealing now. self.epsilon: 1.25 , action:  right , deadline: 13
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 12
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 11
annealing now. self.epsilon: 1.25 , action:  left , deadline: 10
annealing now. self.epsilon: 1.25 , action:  None , deadline: 9
annealing now. self.epsilon: 1.25 , action:  None , deadline: 8
annealing now. self.epsilon: 1.25 , action:  right , deadline: 7
annealing now. self.epsilon: 1.25 , action:  right , deadline: 6
annealing now. self.epsilon: 1.25 , action:  left , deadline: 5
annealing now. self.epsilon: 1.25 , action:  right , deadline: 4
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 3
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 2
success: 1 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (5, 1), destination = (8, 2), deadline = 20
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.833333333333 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 20
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 18
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 14
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 12
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 10
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 8
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 6
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 4
success: 1 / 3
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (7, 2), destination = (4, 1), deadline = 20
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.625 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.625 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.625 , action:  left , deadline: 18
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 14
annealing now. self.epsilon: 0.625 , action:  None , deadline: 12
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 10
annealing now. self.epsilon: 0.625 , action:  right , deadline: 8
annealing now. self.epsilon: 0.625 , action:  left , deadline: 6
annealing now. self.epsilon: 0.625 , action:  right , deadline: 4
success: 1 / 4
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (8, 5), destination = (3, 1), deadline = 45
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  right , deadline: 44
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 42
annealing now. self.epsilon: 0.5 , action:  right , deadline: 40
annealing now. self.epsilon: 0.5 , action:  None , deadline: 38
annealing now. self.epsilon: 0.5 , action:  None , deadline: 36
annealing now. self.epsilon: 0.5 , action:  None , deadline: 34
annealing now. self.epsilon: 0.5 , action:  left , deadline: 32
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 28
annealing now. self.epsilon: 0.5 , action:  right , deadline: 26
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.5 , action:  None , deadline: 22
annealing now. self.epsilon: 0.5 , action:  right , deadline: 20
annealing now. self.epsilon: 0.5 , action:  left , deadline: 18
annealing now. self.epsilon: 0.5 , action:  None , deadline: 16
annealing now. self.epsilon: 0.5 , action:  right , deadline: 14
annealing now. self.epsilon: 0.5 , action:  left , deadline: 12
annealing now. self.epsilon: 0.5 , action:  right , deadline: 10
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 8
Environment.act(): Primary agent has reached destination!
success: 2 / 5
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (1, 5), destination = (8, 1), deadline = 55
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.416666666667 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.416666666667 , action:  right , deadline: 54
annealing now. self.epsilon: 0.416666666667 , action:  forward , deadline: 51
annealing now. self.epsilon: 0.416666666667 , action:  left , deadline: 48
annealing now. self.epsilon: 0.416666666667 , action:  left , deadline: 45
annealing now. self.epsilon: 0.416666666667 , action:  None , deadline: 42
Environment.act(): Primary agent has reached destination!
success: 3 / 6
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (5, 2), destination = (1, 6), deadline = 40
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.357142857143 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 39
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 36
annealing now. self.epsilon: 0.357142857143 , action:  forward , deadline: 33
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 30
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 27
annealing now. self.epsilon: 0.357142857143 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.357142857143 , action:  forward , deadline: 21
Environment.act(): Primary agent has reached destination!
success: 4 / 7
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (3, 5), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.3125 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.3125 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.3125 , action:  forward , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 5 / 8
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (1, 2), destination = (7, 5), deadline = 45
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.277777777778 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.277777777778 , action:  left , deadline: 44
annealing now. self.epsilon: 0.277777777778 , action:  right , deadline: 40
annealing now. self.epsilon: 0.277777777778 , action:  left , deadline: 36
Environment.act(): Primary agent has reached destination!
success: 6 / 9
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (8, 1), destination = (1, 5), deadline = 55
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  forward , deadline: 52
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 48
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 44
annealing now. self.epsilon: 0.25 , action:  right , deadline: 40
Environment.act(): Primary agent has reached destination!
success: 7 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (8, 1), destination = (8, 6), deadline = 25
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.227272727273 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.227272727273 , action:  left , deadline: 25
Environment.act(): Primary agent has reached destination!
success: 8 / 11
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (1, 1), destination = (8, 1), deadline = 35
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.208333333333 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.208333333333 , action:  right , deadline: 35
annealing now. self.epsilon: 0.208333333333 , action:  right , deadline: 30
annealing now. self.epsilon: 0.208333333333 , action:  left , deadline: 25
annealing now. self.epsilon: 0.208333333333 , action:  left , deadline: 20
annealing now. self.epsilon: 0.208333333333 , action:  left , deadline: 15
annealing now. self.epsilon: 0.208333333333 , action:  right , deadline: 10
Environment.act(): Primary agent has reached destination!
success: 9 / 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (1, 4), destination = (8, 3), deadline = 40
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.192307692308 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.192307692308 , action:  right , deadline: 36
annealing now. self.epsilon: 0.192307692308 , action:  None , deadline: 30
annealing now. self.epsilon: 0.192307692308 , action:  right , deadline: 24
annealing now. self.epsilon: 0.192307692308 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.192307692308 , action:  None , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 10 / 13
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (8, 5), destination = (3, 2), deadline = 40
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.178571428571 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.178571428571 , action:  None , deadline: 36
annealing now. self.epsilon: 0.178571428571 , action:  left , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 11 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (5, 3), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.166666666667 , action:  forward , deadline: 12
success: 11 / 15
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (4, 2), destination = (6, 6), deadline = 30
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.15625 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.15625 , action:  None , deadline: 28
annealing now. self.epsilon: 0.15625 , action:  left , deadline: 21
annealing now. self.epsilon: 0.15625 , action:  forward , deadline: 14
Environment.act(): Primary agent has reached destination!
success: 12 / 16
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (4, 1), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.147058823529 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.147058823529 , action:  right , deadline: 14
Environment.act(): Primary agent has reached destination!
success: 13 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (6, 3), destination = (3, 2), deadline = 20
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.138888888889 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.138888888889 , action:  right , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 14 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (3, 1), destination = (2, 5), deadline = 25
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.131578947368 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.131578947368 , action:  left , deadline: 24
annealing now. self.epsilon: 0.131578947368 , action:  left , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 15 / 19
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (6, 2), destination = (8, 6), deadline = 30
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  left , deadline: 24
annealing now. self.epsilon: 0.125 , action:  left , deadline: 16
success: 15 / 20
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (3, 3), destination = (5, 6), deadline = 25
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.119047619048 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.119047619048 , action:  forward , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 16 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (8, 6), destination = (1, 6), deadline = 35
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.113636363636 , self.eps_freq:  9.0 

Environment.act(): Primary agent has reached destination!
success: 17 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (6, 3), destination = (2, 4), deadline = 25
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.108695652174 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.108695652174 , action:  left , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 18 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (6, 1), destination = (5, 6), deadline = 30
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.104166666667 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.104166666667 , action:  left , deadline: 30
annealing now. self.epsilon: 0.104166666667 , action:  left , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 19 / 24
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (6, 6), destination = (8, 1), deadline = 35
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  forward , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 20 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (7, 5), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0961538461538 , self.eps_freq:  11.0 

Environment.act(): Primary agent has reached destination!
success: 21 / 26
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (7, 4), destination = (2, 4), deadline = 25
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0925925925926 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0925925925926 , action:  None , deadline: 22
Environment.act(): Primary agent has reached destination!
success: 22 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (4, 1), destination = (2, 4), deadline = 25
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0892857142857 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0892857142857 , action:  None , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 23 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (6, 1), destination = (8, 3), deadline = 20
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0862068965517 , self.eps_freq:  12.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (3, 4), destination = (6, 1), deadline = 30
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 30
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (2, 1), destination = (2, 6), deadline = 25
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0806451612903 , self.eps_freq:  13.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (1, 6), destination = (4, 3), deadline = 30
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.078125 , self.eps_freq:  13.0 

annealing now. self.epsilon: 0.078125 , action:  right , deadline: 26
Environment.act(): Primary agent has reached destination!
success: 27 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (5, 2), destination = (5, 6), deadline = 20
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0757575757576 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 33
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (3, 5), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0735294117647 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 34
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (4, 5), destination = (6, 1), deadline = 30
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0714285714286 , action:  forward , deadline: 28
Environment.act(): Primary agent has reached destination!
success: 30 / 35
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (5, 4), destination = (8, 1), deadline = 30
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0694444444444 , self.eps_freq:  15.0 

annealing now. self.epsilon: 0.0694444444444 , action:  forward , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 31 / 36
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (2, 1), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0675675675676 , self.eps_freq:  15.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 37
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (6, 3), destination = (3, 5), deadline = 25
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0657894736842 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (1, 4), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0641025641026 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (3, 1), destination = (7, 1), deadline = 20
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 35 / 40
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (2, 1), destination = (8, 3), deadline = 40
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0609756097561 , self.eps_freq:  17.0 

annealing now. self.epsilon: 0.0609756097561 , action:  None , deadline: 34
Environment.act(): Primary agent has reached destination!
success: 36 / 41
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (6, 6), destination = (5, 1), deadline = 30
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0595238095238 , self.eps_freq:  17.0 

success: 36 / 42
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (7, 6), destination = (4, 1), deadline = 40
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0581395348837 , self.eps_freq:  18.0 

annealing now. self.epsilon: 0.0581395348837 , action:  forward , deadline: 36
Environment.act(): Primary agent has reached destination!
success: 37 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (5, 2), destination = (7, 4), deadline = 20
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0568181818182 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 44
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (5, 5), destination = (2, 2), deadline = 30
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (6, 3), destination = (2, 3), deadline = 20
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.054347826087 , self.eps_freq:  19.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 46
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (8, 5), destination = (3, 1), deadline = 45
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0531914893617 , self.eps_freq:  19.0 

annealing now. self.epsilon: 0.0531914893617 , action:  left , deadline: 38
Environment.act(): Primary agent has reached destination!
success: 41 / 47
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (7, 5), destination = (4, 1), deadline = 35
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0520833333333 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (7, 5), destination = (5, 2), deadline = 25
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0510204081633 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (5, 1), destination = (4, 6), deadline = 30
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.05 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (6, 4), destination = (3, 5), deadline = 20
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0490196078431 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (5, 4), destination = (1, 1), deadline = 35
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0480769230769 , self.eps_freq:  21.0 

success: 45 / 52
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (6, 5), destination = (1, 2), deadline = 40
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0471698113208 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (2, 4), destination = (8, 1), deadline = 45
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0462962962963 , self.eps_freq:  22.0 

annealing now. self.epsilon: 0.0462962962963 , action:  None , deadline: 44
Environment.act(): Primary agent has reached destination!
success: 47 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (2, 5), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (3, 4), destination = (4, 1), deadline = 20
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0446428571429 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (3, 4), destination = (2, 1), deadline = 20
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0438596491228 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 57
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (1, 4), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0431034482759 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 58
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (3, 3), destination = (8, 6), deadline = 40
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0423728813559 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (6, 1), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 53 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (8, 5), destination = (3, 4), deadline = 30
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0409836065574 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 54 / 61
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (5, 4), destination = (7, 6), deadline = 20
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0403225806452 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 55 / 62
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (2, 2), destination = (1, 6), deadline = 25
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0396825396825 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (6, 6), destination = (3, 3), deadline = 30
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0390625 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 57 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (1, 4), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 58 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (2, 6), destination = (8, 3), deadline = 45
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0378787878788 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 59 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (4, 5), destination = (8, 3), deadline = 30
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0373134328358 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 60 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (1, 1), destination = (4, 3), deadline = 25
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0367647058824 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 61 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (3, 1), destination = (5, 4), deadline = 25
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.036231884058 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 62 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (3, 6), destination = (3, 2), deadline = 20
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 63 / 70
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (3, 3), destination = (1, 6), deadline = 25
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0352112676056 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 64 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (1, 2), destination = (2, 5), deadline = 20
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0347222222222 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 65 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (4, 3), destination = (1, 2), deadline = 20
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0342465753425 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 66 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (3, 6), destination = (5, 1), deadline = 35
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0337837837838 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 67 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (6, 6), destination = (3, 3), deadline = 30
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 68 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (4, 2), destination = (1, 1), deadline = 20
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0328947368421 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 69 / 76
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (6, 4), destination = (1, 4), deadline = 25
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0324675324675 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 70 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (2, 2), destination = (7, 2), deadline = 25
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0320512820513 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 71 / 78
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (3, 5), destination = (7, 1), deadline = 40
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0316455696203 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 72 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (8, 4), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 73 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (3, 6), destination = (7, 2), deadline = 40
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0308641975309 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 74 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (8, 3), destination = (1, 3), deadline = 35
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.030487804878 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 75 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (7, 5), destination = (5, 1), deadline = 30
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0301204819277 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 76 / 83
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (4, 1), destination = (5, 6), deadline = 30
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0297619047619 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 77 / 84
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (3, 2), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 78 / 85
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (3, 5), destination = (8, 1), deadline = 45
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0290697674419 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 79 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (7, 5), destination = (2, 4), deadline = 30
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0287356321839 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 80 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (5, 6), destination = (2, 4), deadline = 25
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0284090909091 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 81 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (8, 4), destination = (6, 1), deadline = 25
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0280898876404 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 82 / 89
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (8, 1), destination = (3, 4), deadline = 40
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 83 / 90
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (5, 1), destination = (2, 5), deadline = 35
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0274725274725 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 84 / 91
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (1, 2), destination = (6, 4), deadline = 35
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0271739130435 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 85 / 92
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (2, 1), destination = (2, 5), deadline = 20
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0268817204301 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 86 / 93
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (3, 4), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0265957446809 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 87 / 94
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (4, 4), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 88 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (3, 5), destination = (5, 1), deadline = 30
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0260416666667 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 89 / 96
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (4, 6), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0257731958763 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 90 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (6, 5), destination = (7, 2), deadline = 20
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0255102040816 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 91 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (8, 1), destination = (6, 4), deadline = 25
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0252525252525 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 92 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (7, 3), destination = (2, 3), deadline = 25
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 93 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99699
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01163
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04729
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01724
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.26978
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01149
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.43203
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.06574
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07548
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05337
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.32535
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.18245
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.19025
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01493
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01852
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.61168
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.04770
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02306
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04926
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.34037
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08333
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.29273
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01136
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04349
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.65000
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01471
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.74386
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 4.08151
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.42674
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.89337
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: -0.33333
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.08024
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.56422
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.29736
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.45167
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.27252
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.49157
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.11851
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.11192
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.43221
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 1.21923
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.63214
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 1.19325
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.40367
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.29716
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.82517
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.32940
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.04432
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.02488
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.95817
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: -0.19498
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.52655
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.95455
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.56103
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 4.16524
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 1.03564
--------------------------------------------------------------------------------
updated cells:  56 , self.total_cell_count: 2048 , updated_func_counter: 1387
self.alpha: 0.5 self.gamma: 0.1 , self.epsilon: 0.5 , success: 93  in steps:  11
________________________________________________________________________________
gma = 0.1
eps = 0.2
alp = 0.5
epsilon:  0.2
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (5, 4), destination = (8, 1), deadline = 30
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 1.0 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.0 , action:  forward , deadline: 30
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 29
annealing now. self.epsilon: 1.0 , action:  left , deadline: 28
annealing now. self.epsilon: 1.0 , action:  right , deadline: 27
annealing now. self.epsilon: 1.0 , action:  None , deadline: 26
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 25
annealing now. self.epsilon: 1.0 , action:  right , deadline: 24
annealing now. self.epsilon: 1.0 , action:  right , deadline: 23
annealing now. self.epsilon: 1.0 , action:  right , deadline: 22
annealing now. self.epsilon: 1.0 , action:  None , deadline: 21
annealing now. self.epsilon: 1.0 , action:  left , deadline: 20
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 19
annealing now. self.epsilon: 1.0 , action:  left , deadline: 18
annealing now. self.epsilon: 1.0 , action:  right , deadline: 17
annealing now. self.epsilon: 1.0 , action:  right , deadline: 16
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 15
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 14
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 13
annealing now. self.epsilon: 1.0 , action:  None , deadline: 12
annealing now. self.epsilon: 1.0 , action:  None , deadline: 11
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 10
annealing now. self.epsilon: 1.0 , action:  right , deadline: 9
annealing now. self.epsilon: 1.0 , action:  left , deadline: 8
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 7
annealing now. self.epsilon: 1.0 , action:  None , deadline: 6
annealing now. self.epsilon: 1.0 , action:  right , deadline: 5
annealing now. self.epsilon: 1.0 , action:  right , deadline: 4
annealing now. self.epsilon: 1.0 , action:  right , deadline: 3
annealing now. self.epsilon: 1.0 , action:  right , deadline: 2
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (5, 6), destination = (2, 5), deadline = 20
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  right , deadline: 20
annealing now. self.epsilon: 0.5 , action:  left , deadline: 18
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 14
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 12
annealing now. self.epsilon: 0.5 , action:  right , deadline: 10
annealing now. self.epsilon: 0.5 , action:  None , deadline: 8
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 6
annealing now. self.epsilon: 0.5 , action:  left , deadline: 4
success: 0 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (3, 6), destination = (1, 1), deadline = 35
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.333333333333 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.333333333333 , action:  right , deadline: 33
annealing now. self.epsilon: 0.333333333333 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.333333333333 , action:  forward , deadline: 27
annealing now. self.epsilon: 0.333333333333 , action:  right , deadline: 24
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 21
annealing now. self.epsilon: 0.333333333333 , action:  right , deadline: 18
annealing now. self.epsilon: 0.333333333333 , action:  None , deadline: 15
annealing now. self.epsilon: 0.333333333333 , action:  right , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 1 / 3
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (6, 6), destination = (4, 2), deadline = 30
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  forward , deadline: 28
annealing now. self.epsilon: 0.25 , action:  right , deadline: 24
annealing now. self.epsilon: 0.25 , action:  right , deadline: 20
annealing now. self.epsilon: 0.25 , action:  None , deadline: 16
annealing now. self.epsilon: 0.25 , action:  right , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 2 / 4
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (8, 2), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.2 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.2 , action:  right , deadline: 20
annealing now. self.epsilon: 0.2 , action:  left , deadline: 15
Environment.act(): Primary agent has reached destination!
success: 3 / 5
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (3, 3), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 18
annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 4 / 6
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (7, 2), destination = (1, 1), deadline = 35
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.142857142857 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.142857142857 , action:  left , deadline: 35
annealing now. self.epsilon: 0.142857142857 , action:  None , deadline: 28
annealing now. self.epsilon: 0.142857142857 , action:  None , deadline: 21
annealing now. self.epsilon: 0.142857142857 , action:  forward , deadline: 14
Environment.act(): Primary agent has reached destination!
success: 5 / 7
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (4, 2), destination = (2, 4), deadline = 20
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  None , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 6 / 8
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (8, 6), destination = (3, 6), deadline = 25
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.111111111111 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.111111111111 , action:  right , deadline: 18
success: 6 / 9
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (7, 6), destination = (4, 2), deadline = 35
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  right , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 7 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (5, 2), destination = (1, 5), deadline = 35
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0909090909091 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0909090909091 , action:  None , deadline: 33
annealing now. self.epsilon: 0.0909090909091 , action:  right , deadline: 22
success: 7 / 11
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (6, 6), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

Environment.act(): Primary agent has reached destination!
success: 8 / 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (7, 5), destination = (8, 2), deadline = 20
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0769230769231 , self.eps_freq:  13.0 

success: 8 / 13
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (1, 1), destination = (4, 6), deadline = 40
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 9 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (8, 4), destination = (2, 1), deadline = 45
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0666666666667 , self.eps_freq:  15.0 

annealing now. self.epsilon: 0.0666666666667 , action:  None , deadline: 45
Environment.act(): Primary agent has reached destination!
success: 10 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (5, 2), destination = (1, 5), deadline = 35
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

annealing now. self.epsilon: 0.0625 , action:  None , deadline: 32
Environment.act(): Primary agent has reached destination!
success: 11 / 16
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (7, 4), destination = (3, 4), deadline = 20
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0588235294118 , self.eps_freq:  17.0 

Environment.act(): Primary agent has reached destination!
success: 12 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (7, 1), destination = (2, 5), deadline = 45
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

annealing now. self.epsilon: 0.0555555555556 , action:  right , deadline: 36
Environment.act(): Primary agent has reached destination!
success: 13 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (7, 1), destination = (1, 4), deadline = 45
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0526315789474 , self.eps_freq:  19.0 

annealing now. self.epsilon: 0.0526315789474 , action:  right , deadline: 38
Environment.act(): Primary agent has reached destination!
success: 14 / 19
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (1, 2), destination = (7, 2), deadline = 30
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.05 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 15 / 20
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (8, 6), destination = (6, 1), deadline = 35
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.047619047619 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 16 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (8, 1), destination = (3, 6), deadline = 50
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

annealing now. self.epsilon: 0.0454545454545 , action:  left , deadline: 44
Environment.act(): Primary agent has reached destination!
success: 17 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (4, 2), destination = (2, 5), deadline = 25
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0434782608696 , self.eps_freq:  23.0 

success: 17 / 23
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (5, 5), destination = (1, 2), deadline = 35
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 18 / 24
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (3, 4), destination = (5, 2), deadline = 20
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.04 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 19 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (3, 1), destination = (2, 5), deadline = 25
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 20 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (8, 5), destination = (2, 4), deadline = 35
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.037037037037 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 21 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (8, 2), destination = (4, 6), deadline = 40
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 22 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (5, 1), destination = (7, 4), deadline = 25
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0344827586207 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 23 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (6, 1), destination = (8, 4), deadline = 25
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 30
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (8, 4), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0322580645161 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (5, 2), destination = (3, 4), deadline = 20
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (8, 6), destination = (6, 2), deadline = 30
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.030303030303 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 33
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (4, 2), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 34
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (1, 4), destination = (2, 1), deadline = 20
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0285714285714 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 35
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (6, 4), destination = (7, 1), deadline = 20
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 36
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (8, 2), destination = (7, 6), deadline = 25
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.027027027027 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 37
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (7, 2), destination = (6, 5), deadline = 20
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (3, 4), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.025641025641 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (5, 1), destination = (8, 5), deadline = 35
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 40
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (8, 2), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0243902439024 , self.eps_freq:  41.0 

Environment.act(): Primary agent has reached destination!
success: 35 / 41
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (7, 2), destination = (1, 2), deadline = 30
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 42
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (4, 1), destination = (7, 2), deadline = 20
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0232558139535 , self.eps_freq:  43.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (5, 3), destination = (7, 5), deadline = 20
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

success: 37 / 44
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (7, 4), destination = (3, 5), deadline = 25
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0222222222222 , self.eps_freq:  45.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (2, 5), destination = (2, 1), deadline = 20
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 46
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (5, 5), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0212765957447 , self.eps_freq:  47.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 47
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (7, 4), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (1, 5), destination = (3, 1), deadline = 30
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0204081632653 , self.eps_freq:  50.0 

success: 41 / 49
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (7, 5), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.02 , self.eps_freq:  50.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (6, 2), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0196078431373 , self.eps_freq:  51.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (3, 4), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 52
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (6, 5), destination = (7, 2), deadline = 20
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0188679245283 , self.eps_freq:  53.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (6, 6), destination = (7, 1), deadline = 30
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (1, 2), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0181818181818 , self.eps_freq:  55.0 

Environment.act(): Primary agent has reached destination!
success: 47 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (1, 4), destination = (8, 1), deadline = 50
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (1, 3), destination = (6, 6), deadline = 40
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0175438596491 , self.eps_freq:  57.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 57
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (7, 6), destination = (1, 1), deadline = 55
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 58
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (2, 1), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0169491525424 , self.eps_freq:  59.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (7, 4), destination = (3, 6), deadline = 30
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (7, 6), destination = (1, 6), deadline = 30
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.016393442623 , self.eps_freq:  61.0 

Environment.act(): Primary agent has reached destination!
success: 53 / 61
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (1, 1), destination = (6, 1), deadline = 25
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

Environment.act(): Primary agent has reached destination!
success: 54 / 62
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (7, 1), destination = (5, 6), deadline = 35
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.015873015873 , self.eps_freq:  63.0 

Environment.act(): Primary agent has reached destination!
success: 55 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (1, 2), destination = (8, 2), deadline = 35
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

success: 55 / 64
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (7, 3), destination = (5, 6), deadline = 25
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0153846153846 , self.eps_freq:  65.0 

success: 55 / 65
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (6, 6), destination = (2, 5), deadline = 25
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (2, 4), destination = (7, 5), deadline = 30
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0149253731343 , self.eps_freq:  67.0 

Environment.act(): Primary agent has reached destination!
success: 57 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (8, 4), destination = (4, 3), deadline = 25
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

Environment.act(): Primary agent has reached destination!
success: 58 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (8, 6), destination = (5, 4), deadline = 25
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0144927536232 , self.eps_freq:  69.0 

Environment.act(): Primary agent has reached destination!
success: 59 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (2, 3), destination = (5, 6), deadline = 30
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

Environment.act(): Primary agent has reached destination!
success: 60 / 70
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (7, 4), destination = (3, 3), deadline = 25
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0140845070423 , self.eps_freq:  71.0 

Environment.act(): Primary agent has reached destination!
success: 61 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (7, 6), destination = (8, 2), deadline = 25
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

Environment.act(): Primary agent has reached destination!
success: 62 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (7, 3), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.013698630137 , self.eps_freq:  73.0 

Environment.act(): Primary agent has reached destination!
success: 63 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (7, 2), destination = (3, 3), deadline = 25
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

Environment.act(): Primary agent has reached destination!
success: 64 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (1, 6), destination = (5, 2), deadline = 40
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0133333333333 , self.eps_freq:  75.0 

Environment.act(): Primary agent has reached destination!
success: 65 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (5, 5), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

Environment.act(): Primary agent has reached destination!
success: 66 / 76
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (7, 6), destination = (3, 1), deadline = 45
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.012987012987 , self.eps_freq:  77.0 

Environment.act(): Primary agent has reached destination!
success: 67 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (2, 2), destination = (4, 6), deadline = 30
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

Environment.act(): Primary agent has reached destination!
success: 68 / 78
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (2, 3), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0126582278481 , self.eps_freq:  79.0 

Environment.act(): Primary agent has reached destination!
success: 69 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (2, 6), destination = (1, 3), deadline = 20
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

success: 69 / 80
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (2, 4), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0123456790123 , self.eps_freq:  81.0 

Environment.act(): Primary agent has reached destination!
success: 70 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (8, 4), destination = (3, 5), deadline = 30
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

Environment.act(): Primary agent has reached destination!
success: 71 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (2, 5), destination = (2, 1), deadline = 20
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0120481927711 , self.eps_freq:  83.0 

Environment.act(): Primary agent has reached destination!
success: 72 / 83
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (3, 6), destination = (5, 1), deadline = 35
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

Environment.act(): Primary agent has reached destination!
success: 73 / 84
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (1, 5), destination = (2, 1), deadline = 25
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0117647058824 , self.eps_freq:  85.0 

Environment.act(): Primary agent has reached destination!
success: 74 / 85
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (4, 2), destination = (1, 4), deadline = 25
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

success: 74 / 86
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (3, 1), destination = (3, 6), deadline = 25
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0114942528736 , self.eps_freq:  87.0 

Environment.act(): Primary agent has reached destination!
success: 75 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (2, 2), destination = (7, 5), deadline = 40
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

Environment.act(): Primary agent has reached destination!
success: 76 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (3, 1), destination = (7, 3), deadline = 30
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0112359550562 , self.eps_freq:  89.0 

Environment.act(): Primary agent has reached destination!
success: 77 / 89
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (6, 6), destination = (3, 5), deadline = 20
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

Environment.act(): Primary agent has reached destination!
success: 78 / 90
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (7, 1), destination = (3, 2), deadline = 25
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.010989010989 , self.eps_freq:  91.0 

Environment.act(): Primary agent has reached destination!
success: 79 / 91
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (7, 4), destination = (2, 1), deadline = 40
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

Environment.act(): Primary agent has reached destination!
success: 80 / 92
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (6, 2), destination = (8, 5), deadline = 25
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.010752688172 , self.eps_freq:  93.0 

Environment.act(): Primary agent has reached destination!
success: 81 / 93
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (2, 4), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

Environment.act(): Primary agent has reached destination!
success: 82 / 94
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (8, 5), destination = (3, 6), deadline = 30
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0105263157895 , self.eps_freq:  95.0 

Environment.act(): Primary agent has reached destination!
success: 83 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (5, 1), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

success: 83 / 96
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (4, 5), destination = (2, 2), deadline = 25
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0103092783505 , self.eps_freq:  97.0 

Environment.act(): Primary agent has reached destination!
success: 84 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (1, 1), destination = (6, 4), deadline = 40
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

Environment.act(): Primary agent has reached destination!
success: 85 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (7, 1), destination = (4, 6), deadline = 40
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.010101010101 , self.eps_freq:  99.0 

success: 85 / 99
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (1, 2), destination = (8, 1), deadline = 40
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.01 , self.eps_freq:  100.0 

Environment.act(): Primary agent has reached destination!
success: 86 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.40399
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05882
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01299
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03321
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.17022
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.59926
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03031
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03479
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08333
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12653
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.71420
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01053
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03030
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10297
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.05302
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.25982
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.22649
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.14286
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04762
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.16120
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.51624
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.20481
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10665
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12907
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.15959
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05086
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01282
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.52125
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.98719
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04545
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.50000
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01235
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.18649
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01639
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.18515
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.34930
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.24632
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06903
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.14818
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.58595
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09575
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10192
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08323
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.83138
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 4.33845
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.94826
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.55260
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.01506
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.55147
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.18831
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50909
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.16212
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.23365
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.34901
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.53262
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.56576
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.18418
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.00000
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.11063
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.54210
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.01694
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 2.80372
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.08992
--------------------------------------------------------------------------------
updated cells:  63 , self.total_cell_count: 2048 , updated_func_counter: 1627
self.alpha: 0.5 self.gamma: 0.1 , self.epsilon: 0.2 , success: 86  in steps:  29
________________________________________________________________________________
gma = 0.1
eps = 0.1
alp = 0.5
epsilon:  0.1
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (6, 6), destination = (8, 2), deadline = 30
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.5 , action:  right , deadline: 28
annealing now. self.epsilon: 0.5 , action:  left , deadline: 26
annealing now. self.epsilon: 0.5 , action:  left , deadline: 24
annealing now. self.epsilon: 0.5 , action:  right , deadline: 22
annealing now. self.epsilon: 0.5 , action:  left , deadline: 20
annealing now. self.epsilon: 0.5 , action:  None , deadline: 18
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.5 , action:  right , deadline: 14
annealing now. self.epsilon: 0.5 , action:  right , deadline: 12
annealing now. self.epsilon: 0.5 , action:  left , deadline: 10
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 8
annealing now. self.epsilon: 0.5 , action:  None , deadline: 6
annealing now. self.epsilon: 0.5 , action:  None , deadline: 4
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (7, 3), destination = (2, 3), deadline = 25
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  None , deadline: 24
annealing now. self.epsilon: 0.25 , action:  None , deadline: 20
annealing now. self.epsilon: 0.25 , action:  left , deadline: 16
annealing now. self.epsilon: 0.25 , action:  right , deadline: 12
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 8
success: 0 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (2, 3), destination = (8, 1), deadline = 40
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  left , deadline: 36
annealing now. self.epsilon: 0.166666666667 , action:  left , deadline: 30
annealing now. self.epsilon: 0.166666666667 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 18
annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 12
success: 0 / 3
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (6, 1), destination = (1, 5), deadline = 45
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  None , deadline: 40
annealing now. self.epsilon: 0.125 , action:  None , deadline: 32
annealing now. self.epsilon: 0.125 , action:  None , deadline: 24
annealing now. self.epsilon: 0.125 , action:  None , deadline: 16
success: 0 / 4
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (7, 1), destination = (3, 4), deadline = 35
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.1 , action:  right , deadline: 20
success: 0 / 5
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (8, 1), destination = (1, 2), deadline = 40
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  forward , deadline: 36
annealing now. self.epsilon: 0.0833333333333 , action:  right , deadline: 24
success: 0 / 6
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (6, 2), destination = (1, 1), deadline = 30
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0714285714286 , action:  left , deadline: 28
success: 0 / 7
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (1, 1), destination = (2, 5), deadline = 25
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

success: 0 / 8
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (2, 1), destination = (7, 1), deadline = 25
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

success: 0 / 9
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (4, 2), destination = (3, 5), deadline = 20
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.05 , self.eps_freq:  20.0 

success: 0 / 10
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (2, 4), destination = (7, 1), deadline = 40
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

success: 0 / 11
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (6, 1), destination = (1, 1), deadline = 25
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

success: 0 / 12
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 3), deadline = 40
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

success: 0 / 13
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (8, 1), destination = (4, 3), deadline = 30
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

success: 0 / 14
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (4, 6), destination = (6, 4), deadline = 20
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

success: 0 / 15
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (2, 4), destination = (8, 1), deadline = 45
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

success: 0 / 16
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (6, 5), destination = (3, 1), deadline = 35
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

success: 0 / 17
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (2, 4), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

success: 0 / 18
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (8, 2), destination = (1, 6), deadline = 55
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

success: 0 / 19
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (3, 3), destination = (6, 6), deadline = 30
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.025 , self.eps_freq:  40.0 

success: 0 / 20
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (5, 5), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

success: 0 / 21
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (7, 6), destination = (1, 6), deadline = 30
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

success: 0 / 22
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (5, 2), destination = (1, 2), deadline = 20
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

success: 0 / 23
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (5, 2), destination = (2, 3), deadline = 20
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

success: 0 / 24
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (4, 3), destination = (6, 5), deadline = 20
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.02 , self.eps_freq:  50.0 

success: 0 / 25
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (5, 1), destination = (1, 4), deadline = 35
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

success: 0 / 26
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (1, 1), destination = (8, 5), deadline = 55
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

success: 0 / 27
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (7, 2), destination = (2, 1), deadline = 30
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

success: 0 / 28
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (6, 6), destination = (1, 2), deadline = 45
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

success: 0 / 29
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (7, 2), destination = (1, 4), deadline = 40
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

success: 0 / 30
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (3, 5), destination = (8, 3), deadline = 35
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

success: 0 / 31
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (8, 1), destination = (5, 5), deadline = 35
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

success: 0 / 32
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (8, 2), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

success: 0 / 33
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (8, 6), destination = (6, 2), deadline = 30
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

success: 0 / 34
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (1, 2), destination = (7, 2), deadline = 30
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

success: 0 / 35
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (7, 4), destination = (3, 4), deadline = 20
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

success: 0 / 36
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (2, 4), destination = (7, 2), deadline = 35
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

success: 0 / 37
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (2, 3), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

success: 0 / 38
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (3, 4), destination = (8, 2), deadline = 35
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

success: 0 / 39
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (3, 1), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

success: 0 / 40
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (6, 2), destination = (7, 5), deadline = 20
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

success: 0 / 41
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (8, 3), destination = (1, 1), deadline = 45
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

success: 0 / 42
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (7, 4), destination = (4, 2), deadline = 25
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

success: 0 / 43
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (2, 2), destination = (6, 5), deadline = 35
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

success: 0 / 44
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (8, 2), destination = (2, 2), deadline = 30
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

success: 0 / 45
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (8, 3), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

success: 0 / 46
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (6, 3), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

success: 0 / 47
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (1, 4), destination = (7, 6), deadline = 40
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

success: 0 / 48
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (2, 6), destination = (7, 1), deadline = 50
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

success: 0 / 49
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (8, 1), destination = (7, 5), deadline = 25
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.01 , self.eps_freq:  100.0 

success: 0 / 50
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (2, 1), destination = (8, 4), deadline = 45
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.00980392156863 , self.eps_freq:  102.0 

success: 0 / 51
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (7, 6), destination = (5, 1), deadline = 35
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.00961538461538 , self.eps_freq:  104.0 

success: 0 / 52
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (1, 4), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.00943396226415 , self.eps_freq:  106.0 

success: 0 / 53
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (1, 5), destination = (5, 6), deadline = 25
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.00925925925926 , self.eps_freq:  108.0 

success: 0 / 54
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (4, 6), destination = (2, 1), deadline = 35
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.00909090909091 , self.eps_freq:  110.0 

success: 0 / 55
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (2, 6), destination = (8, 4), deadline = 40
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.00892857142857 , self.eps_freq:  112.0 

success: 0 / 56
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (1, 3), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.00877192982456 , self.eps_freq:  114.0 

success: 0 / 57
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (4, 4), destination = (8, 5), deadline = 25
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.00862068965517 , self.eps_freq:  116.0 

success: 0 / 58
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (4, 6), destination = (5, 2), deadline = 25
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.00847457627119 , self.eps_freq:  118.0 

success: 0 / 59
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (5, 6), destination = (1, 2), deadline = 40
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.00833333333333 , self.eps_freq:  120.0 

success: 0 / 60
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (1, 5), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.00819672131148 , self.eps_freq:  122.0 

success: 0 / 61
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (5, 1), destination = (7, 5), deadline = 30
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.00806451612903 , self.eps_freq:  124.0 

success: 0 / 62
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (6, 1), destination = (7, 6), deadline = 30
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.00793650793651 , self.eps_freq:  126.0 

Environment.act(): Primary agent has reached destination!
success: 1 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (5, 5), destination = (8, 1), deadline = 35
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0078125 , self.eps_freq:  128.0 

success: 1 / 64
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (3, 6), destination = (8, 1), deadline = 50
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00769230769231 , self.eps_freq:  130.0 

success: 1 / 65
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (6, 2), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.00757575757576 , self.eps_freq:  132.0 

success: 1 / 66
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (7, 3), destination = (3, 6), deadline = 35
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.00746268656716 , self.eps_freq:  134.0 

success: 1 / 67
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (7, 5), destination = (2, 5), deadline = 25
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.00735294117647 , self.eps_freq:  136.0 

success: 1 / 68
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (5, 5), destination = (2, 4), deadline = 20
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.00724637681159 , self.eps_freq:  138.0 

success: 1 / 69
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (3, 1), destination = (4, 6), deadline = 30
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.00714285714286 , self.eps_freq:  140.0 

success: 1 / 70
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (7, 2), destination = (3, 5), deadline = 35
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.00704225352113 , self.eps_freq:  142.0 

success: 1 / 71
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (8, 6), destination = (2, 2), deadline = 50
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.00694444444444 , self.eps_freq:  144.0 

success: 1 / 72
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (3, 2), destination = (1, 6), deadline = 30
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.00684931506849 , self.eps_freq:  146.0 

success: 1 / 73
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (1, 2), destination = (7, 5), deadline = 45
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.00675675675676 , self.eps_freq:  148.0 

success: 1 / 74
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (1, 2), destination = (7, 6), deadline = 50
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.00666666666667 , self.eps_freq:  150.0 

success: 1 / 75
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (2, 5), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.00657894736842 , self.eps_freq:  152.0 

success: 1 / 76
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (8, 5), destination = (3, 5), deadline = 25
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.00649350649351 , self.eps_freq:  154.0 

success: 1 / 77
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (2, 4), destination = (8, 1), deadline = 45
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00641025641026 , self.eps_freq:  156.0 

success: 1 / 78
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (1, 5), destination = (5, 2), deadline = 35
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.00632911392405 , self.eps_freq:  158.0 

success: 1 / 79
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (1, 1), destination = (6, 5), deadline = 45
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.00625 , self.eps_freq:  160.0 

success: 1 / 80
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (6, 4), destination = (2, 3), deadline = 25
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.00617283950617 , self.eps_freq:  162.0 

success: 1 / 81
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (4, 6), destination = (1, 3), deadline = 30
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.00609756097561 , self.eps_freq:  164.0 

success: 1 / 82
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (8, 6), destination = (8, 2), deadline = 20
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.00602409638554 , self.eps_freq:  166.0 

success: 1 / 83
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (8, 1), destination = (3, 1), deadline = 25
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.00595238095238 , self.eps_freq:  168.0 

success: 1 / 84
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (5, 1), destination = (2, 3), deadline = 25
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.00588235294118 , self.eps_freq:  170.0 

success: 1 / 85
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (6, 5), destination = (1, 4), deadline = 30
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.00581395348837 , self.eps_freq:  172.0 

success: 1 / 86
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (1, 6), destination = (5, 4), deadline = 30
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.00574712643678 , self.eps_freq:  174.0 

success: 1 / 87
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (3, 6), destination = (8, 2), deadline = 45
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.00568181818182 , self.eps_freq:  176.0 

success: 1 / 88
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (8, 4), destination = (1, 4), deadline = 35
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.00561797752809 , self.eps_freq:  178.0 

success: 1 / 89
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (1, 1), destination = (4, 4), deadline = 30
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.00555555555556 , self.eps_freq:  180.0 

success: 1 / 90
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (7, 4), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.00549450549451 , self.eps_freq:  182.0 

success: 1 / 91
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (2, 4), destination = (7, 2), deadline = 35
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0054347826087 , self.eps_freq:  184.0 

success: 1 / 92
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (1, 1), destination = (1, 6), deadline = 25
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.00537634408602 , self.eps_freq:  186.0 

success: 1 / 93
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (2, 4), destination = (5, 1), deadline = 30
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.00531914893617 , self.eps_freq:  188.0 

success: 1 / 94
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (7, 4), destination = (8, 1), deadline = 20
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00526315789474 , self.eps_freq:  190.0 

success: 1 / 95
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (7, 2), destination = (3, 1), deadline = 25
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.00520833333333 , self.eps_freq:  192.0 

success: 1 / 96
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (6, 5), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.00515463917526 , self.eps_freq:  194.0 

success: 1 / 97
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (8, 2), destination = (4, 5), deadline = 35
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.00510204081633 , self.eps_freq:  197.0 

success: 1 / 98
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (2, 2), destination = (5, 5), deadline = 30
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.00505050505051 , self.eps_freq:  198.0 

success: 1 / 99
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (1, 5), destination = (1, 1), deadline = 20
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.005 , self.eps_freq:  200.0 

success: 1 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01031
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01639
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.03461
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07132
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08333
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00127
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01695
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.53831
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04820
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.00000
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.20000
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.02500
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00471
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02381
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09822
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03731
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03871
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.19907
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.13427
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.24898
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02326
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.33705
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.34397
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02632
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.05775
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.23470
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.16667
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.33445
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.77300
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.31506
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02083
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07179
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.13214
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.94803
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.51250
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.57688
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.48718
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: -0.33333
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.16824
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.52617
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.27532
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.03612
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.16567
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.40100
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.08412
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.54648
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.32896
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.08436
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.97437
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.55197
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.55069
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.32894
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 1.00000
--------------------------------------------------------------------------------
updated cells:  53 , self.total_cell_count: 2048 , updated_func_counter: 3205
self.alpha: 0.5 self.gamma: 0.1 , self.epsilon: 0.1 , success: 1  in steps:  0
________________________________________________________________________________
Environment.reset(): Primary agent could not reach destination within deadline!
gma = 0.005
eps = 0.5
alp = 0.3
epsilon:  0.5
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (6, 1), destination = (6, 5), deadline = 20
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 2.5 , self.eps_freq:  1.0 

annealing now. self.epsilon: 2.5 , action:  left , deadline: 20
annealing now. self.epsilon: 2.5 , action:  None , deadline: 19
annealing now. self.epsilon: 2.5 , action:  left , deadline: 18
annealing now. self.epsilon: 2.5 , action:  right , deadline: 17
annealing now. self.epsilon: 2.5 , action:  left , deadline: 16
annealing now. self.epsilon: 2.5 , action:  right , deadline: 15
annealing now. self.epsilon: 2.5 , action:  left , deadline: 14
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 13
annealing now. self.epsilon: 2.5 , action:  None , deadline: 12
annealing now. self.epsilon: 2.5 , action:  right , deadline: 11
annealing now. self.epsilon: 2.5 , action:  right , deadline: 10
annealing now. self.epsilon: 2.5 , action:  right , deadline: 9
annealing now. self.epsilon: 2.5 , action:  None , deadline: 8
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 7
annealing now. self.epsilon: 2.5 , action:  left , deadline: 6
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 5
annealing now. self.epsilon: 2.5 , action:  None , deadline: 4
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 3
annealing now. self.epsilon: 2.5 , action:  None , deadline: 2
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (6, 4), destination = (2, 1), deadline = 35
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 1.25 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.25 , action:  None , deadline: 35
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 34
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 33
annealing now. self.epsilon: 1.25 , action:  right , deadline: 32
annealing now. self.epsilon: 1.25 , action:  right , deadline: 31
annealing now. self.epsilon: 1.25 , action:  right , deadline: 30
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 29
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 28
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 27
annealing now. self.epsilon: 1.25 , action:  right , deadline: 26
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 25
annealing now. self.epsilon: 1.25 , action:  left , deadline: 24
annealing now. self.epsilon: 1.25 , action:  None , deadline: 23
annealing now. self.epsilon: 1.25 , action:  left , deadline: 22
annealing now. self.epsilon: 1.25 , action:  None , deadline: 21
annealing now. self.epsilon: 1.25 , action:  None , deadline: 20
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 19
annealing now. self.epsilon: 1.25 , action:  left , deadline: 18
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 17
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 16
annealing now. self.epsilon: 1.25 , action:  left , deadline: 15
annealing now. self.epsilon: 1.25 , action:  left , deadline: 14
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 13
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 12
annealing now. self.epsilon: 1.25 , action:  left , deadline: 11
annealing now. self.epsilon: 1.25 , action:  right , deadline: 10
annealing now. self.epsilon: 1.25 , action:  None , deadline: 9
annealing now. self.epsilon: 1.25 , action:  right , deadline: 8
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 7
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 6
annealing now. self.epsilon: 1.25 , action:  None , deadline: 5
annealing now. self.epsilon: 1.25 , action:  None , deadline: 4
annealing now. self.epsilon: 1.25 , action:  left , deadline: 3
annealing now. self.epsilon: 1.25 , action:  left , deadline: 2
success: 0 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (4, 6), destination = (6, 2), deadline = 30
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.833333333333 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 28
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 26
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 24
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 22
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 20
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 18
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 16
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 14
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 12
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 10
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 8
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 6
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 4
Environment.act(): Primary agent has reached destination!
success: 1 / 3
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (3, 2), destination = (7, 6), deadline = 40
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.625 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.625 , action:  right , deadline: 40
annealing now. self.epsilon: 0.625 , action:  None , deadline: 38
annealing now. self.epsilon: 0.625 , action:  None , deadline: 36
annealing now. self.epsilon: 0.625 , action:  left , deadline: 34
annealing now. self.epsilon: 0.625 , action:  left , deadline: 32
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 2 / 4
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (8, 4), destination = (3, 1), deadline = 40
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  None , deadline: 40
annealing now. self.epsilon: 0.5 , action:  None , deadline: 38
annealing now. self.epsilon: 0.5 , action:  left , deadline: 36
annealing now. self.epsilon: 0.5 , action:  right , deadline: 34
annealing now. self.epsilon: 0.5 , action:  None , deadline: 32
annealing now. self.epsilon: 0.5 , action:  right , deadline: 30
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 28
annealing now. self.epsilon: 0.5 , action:  None , deadline: 26
annealing now. self.epsilon: 0.5 , action:  right , deadline: 24
annealing now. self.epsilon: 0.5 , action:  left , deadline: 22
annealing now. self.epsilon: 0.5 , action:  right , deadline: 20
annealing now. self.epsilon: 0.5 , action:  right , deadline: 18
annealing now. self.epsilon: 0.5 , action:  right , deadline: 16
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 14
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 12
annealing now. self.epsilon: 0.5 , action:  right , deadline: 10
annealing now. self.epsilon: 0.5 , action:  right , deadline: 8
annealing now. self.epsilon: 0.5 , action:  right , deadline: 6
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 4
success: 2 / 5
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (1, 6), destination = (5, 2), deadline = 40
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.416666666667 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.416666666667 , action:  None , deadline: 39
annealing now. self.epsilon: 0.416666666667 , action:  forward , deadline: 36
annealing now. self.epsilon: 0.416666666667 , action:  left , deadline: 33
annealing now. self.epsilon: 0.416666666667 , action:  left , deadline: 30
annealing now. self.epsilon: 0.416666666667 , action:  forward , deadline: 27
annealing now. self.epsilon: 0.416666666667 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.416666666667 , action:  forward , deadline: 21
annealing now. self.epsilon: 0.416666666667 , action:  None , deadline: 18
annealing now. self.epsilon: 0.416666666667 , action:  forward , deadline: 15
annealing now. self.epsilon: 0.416666666667 , action:  right , deadline: 12
annealing now. self.epsilon: 0.416666666667 , action:  forward , deadline: 9
annealing now. self.epsilon: 0.416666666667 , action:  None , deadline: 6
success: 2 / 6
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (7, 4), destination = (2, 4), deadline = 25
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.357142857143 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 24
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 21
annealing now. self.epsilon: 0.357142857143 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.357142857143 , action:  forward , deadline: 15
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 12
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 9
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 6
success: 2 / 7
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (7, 1), destination = (1, 6), deadline = 55
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.3125 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.3125 , action:  forward , deadline: 52
annealing now. self.epsilon: 0.3125 , action:  right , deadline: 48
annealing now. self.epsilon: 0.3125 , action:  None , deadline: 44
annealing now. self.epsilon: 0.3125 , action:  left , deadline: 40
Environment.act(): Primary agent has reached destination!
success: 3 / 8
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (6, 6), destination = (7, 3), deadline = 20
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.277777777778 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.277777777778 , action:  right , deadline: 20
annealing now. self.epsilon: 0.277777777778 , action:  right , deadline: 16
annealing now. self.epsilon: 0.277777777778 , action:  None , deadline: 12
annealing now. self.epsilon: 0.277777777778 , action:  left , deadline: 8
Environment.act(): Primary agent has reached destination!
success: 4 / 9
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (3, 1), destination = (7, 2), deadline = 25
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  None , deadline: 24
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 5 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (7, 5), destination = (1, 6), deadline = 35
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.227272727273 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.227272727273 , action:  right , deadline: 35
annealing now. self.epsilon: 0.227272727273 , action:  None , deadline: 30
annealing now. self.epsilon: 0.227272727273 , action:  left , deadline: 25
Environment.act(): Primary agent has reached destination!
success: 6 / 11
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (1, 2), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.208333333333 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.208333333333 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.208333333333 , action:  None , deadline: 15
annealing now. self.epsilon: 0.208333333333 , action:  left , deadline: 10
Environment.act(): Primary agent has reached destination!
success: 7 / 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (2, 5), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.192307692308 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.192307692308 , action:  None , deadline: 18
annealing now. self.epsilon: 0.192307692308 , action:  None , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 8 / 13
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (1, 3), destination = (6, 4), deadline = 30
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.178571428571 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.178571428571 , action:  right , deadline: 30
annealing now. self.epsilon: 0.178571428571 , action:  left , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 9 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (5, 6), destination = (7, 2), deadline = 30
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 30
annealing now. self.epsilon: 0.166666666667 , action:  left , deadline: 24
annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 10 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (8, 6), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.15625 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.15625 , action:  forward , deadline: 21
annealing now. self.epsilon: 0.15625 , action:  None , deadline: 14
Environment.act(): Primary agent has reached destination!
success: 11 / 16
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (7, 6), destination = (1, 4), deadline = 40
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.147058823529 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.147058823529 , action:  None , deadline: 35
annealing now. self.epsilon: 0.147058823529 , action:  right , deadline: 28
Environment.act(): Primary agent has reached destination!
success: 12 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (6, 1), destination = (5, 5), deadline = 25
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.138888888889 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.138888888889 , action:  None , deadline: 24
annealing now. self.epsilon: 0.138888888889 , action:  left , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 13 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (4, 1), destination = (1, 5), deadline = 35
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.131578947368 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.131578947368 , action:  right , deadline: 32
annealing now. self.epsilon: 0.131578947368 , action:  forward , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 14 / 19
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (3, 1), destination = (8, 3), deadline = 35
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  None , deadline: 32
annealing now. self.epsilon: 0.125 , action:  right , deadline: 24
annealing now. self.epsilon: 0.125 , action:  right , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 15 / 20
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 5), deadline = 30
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.119047619048 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.119047619048 , action:  left , deadline: 27
annealing now. self.epsilon: 0.119047619048 , action:  None , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 16 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (5, 1), destination = (2, 6), deadline = 40
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.113636363636 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.113636363636 , action:  right , deadline: 36
Environment.act(): Primary agent has reached destination!
success: 17 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 5), deadline = 30
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.108695652174 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.108695652174 , action:  None , deadline: 30
annealing now. self.epsilon: 0.108695652174 , action:  left , deadline: 20
success: 17 / 23
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (4, 3), destination = (3, 6), deadline = 20
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.104166666667 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.104166666667 , action:  right , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 18 / 24
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (6, 1), destination = (8, 5), deadline = 30
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  forward , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 19 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (8, 2), destination = (2, 1), deadline = 35
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0961538461538 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0961538461538 , action:  None , deadline: 33
Environment.act(): Primary agent has reached destination!
success: 20 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (6, 5), destination = (7, 1), deadline = 25
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0925925925926 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0925925925926 , action:  forward , deadline: 22
Environment.act(): Primary agent has reached destination!
success: 21 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (8, 4), destination = (5, 6), deadline = 25
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0892857142857 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0892857142857 , action:  forward , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 22 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (8, 4), destination = (5, 1), deadline = 30
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0862068965517 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0862068965517 , action:  forward , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 23 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (5, 3), destination = (3, 1), deadline = 20
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 30
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (4, 4), destination = (6, 6), deadline = 20
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0806451612903 , self.eps_freq:  13.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (6, 6), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.078125 , self.eps_freq:  13.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (2, 1), destination = (6, 4), deadline = 35
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0757575757576 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0757575757576 , action:  left , deadline: 28
Environment.act(): Primary agent has reached destination!
success: 27 / 33
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (4, 6), destination = (8, 3), deadline = 35
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0735294117647 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0735294117647 , action:  left , deadline: 28
Environment.act(): Primary agent has reached destination!
success: 28 / 34
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (3, 3), destination = (5, 1), deadline = 20
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 35
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (4, 5), destination = (8, 1), deadline = 40
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0694444444444 , self.eps_freq:  15.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 36
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (6, 6), destination = (4, 2), deadline = 30
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0675675675676 , self.eps_freq:  15.0 

annealing now. self.epsilon: 0.0675675675676 , action:  right , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 31 / 37
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (7, 6), destination = (8, 3), deadline = 20
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0657894736842 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (7, 4), destination = (1, 6), deadline = 40
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0641025641026 , self.eps_freq:  16.0 

annealing now. self.epsilon: 0.0641025641026 , action:  forward , deadline: 32
success: 32 / 39
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (4, 6), destination = (7, 2), deadline = 35
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

annealing now. self.epsilon: 0.0625 , action:  left , deadline: 32
Environment.act(): Primary agent has reached destination!
success: 33 / 40
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (8, 1), destination = (2, 6), deadline = 55
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0609756097561 , self.eps_freq:  17.0 

annealing now. self.epsilon: 0.0609756097561 , action:  left , deadline: 51
annealing now. self.epsilon: 0.0609756097561 , action:  left , deadline: 34
Environment.act(): Primary agent has reached destination!
success: 34 / 41
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (6, 5), destination = (2, 1), deadline = 40
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0595238095238 , self.eps_freq:  17.0 

annealing now. self.epsilon: 0.0595238095238 , action:  forward , deadline: 34
Environment.act(): Primary agent has reached destination!
success: 35 / 42
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (2, 4), destination = (6, 1), deadline = 35
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0581395348837 , self.eps_freq:  18.0 

success: 35 / 43
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (1, 6), destination = (7, 4), deadline = 40
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0568181818182 , self.eps_freq:  18.0 

annealing now. self.epsilon: 0.0568181818182 , action:  right , deadline: 36
Environment.act(): Primary agent has reached destination!
success: 36 / 44
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (2, 4), destination = (7, 1), deadline = 40
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

annealing now. self.epsilon: 0.0555555555556 , action:  None , deadline: 36
success: 36 / 45
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (3, 2), destination = (3, 6), deadline = 20
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.054347826087 , self.eps_freq:  19.0 

success: 36 / 46
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (6, 4), destination = (8, 1), deadline = 25
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0531914893617 , self.eps_freq:  19.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 47
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (8, 6), destination = (2, 2), deadline = 50
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0520833333333 , self.eps_freq:  20.0 

annealing now. self.epsilon: 0.0520833333333 , action:  left , deadline: 40
Environment.act(): Primary agent has reached destination!
success: 38 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (4, 1), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0510204081633 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (8, 5), destination = (4, 4), deadline = 25
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.05 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (7, 6), destination = (4, 2), deadline = 35
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0490196078431 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (6, 6), destination = (6, 1), deadline = 25
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0480769230769 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 52
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (4, 2), destination = (1, 1), deadline = 20
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0471698113208 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (7, 4), destination = (3, 6), deadline = 30
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0462962962963 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (2, 4), destination = (1, 1), deadline = 20
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (2, 2), destination = (5, 5), deadline = 30
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0446428571429 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (4, 4), destination = (1, 5), deadline = 20
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0438596491228 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 47 / 57
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (5, 2), destination = (8, 3), deadline = 20
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0431034482759 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 58
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (4, 1), destination = (3, 6), deadline = 30
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0423728813559 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (5, 2), destination = (1, 5), deadline = 35
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (8, 2), destination = (1, 2), deadline = 35
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0409836065574 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 61
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (4, 5), destination = (1, 4), deadline = 20
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0403225806452 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 62
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (2, 6), destination = (1, 1), deadline = 30
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0396825396825 , self.eps_freq:  26.0 

success: 52 / 63
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (3, 4), destination = (8, 6), deadline = 35
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0390625 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 53 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (3, 2), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 54 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (3, 6), destination = (7, 5), deadline = 25
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0378787878788 , self.eps_freq:  27.0 

success: 54 / 66
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (5, 1), destination = (1, 6), deadline = 45
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0373134328358 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 55 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (5, 3), destination = (2, 1), deadline = 25
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0367647058824 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (2, 1), destination = (7, 4), deadline = 40
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.036231884058 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 57 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (7, 6), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 58 / 70
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (2, 2), destination = (8, 5), deadline = 45
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0352112676056 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 59 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (1, 3), destination = (8, 6), deadline = 50
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0347222222222 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 60 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (4, 2), destination = (2, 6), deadline = 30
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0342465753425 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 61 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (8, 5), destination = (3, 6), deadline = 30
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0337837837838 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 62 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (2, 6), destination = (8, 4), deadline = 40
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 63 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (7, 2), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0328947368421 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 64 / 76
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (1, 3), destination = (8, 1), deadline = 45
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0324675324675 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 65 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (6, 5), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0320512820513 , self.eps_freq:  32.0 

success: 65 / 78
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (4, 4), destination = (8, 4), deadline = 20
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0316455696203 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 66 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (7, 4), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 67 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (5, 5), destination = (3, 3), deadline = 20
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0308641975309 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 68 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (4, 3), destination = (7, 2), deadline = 20
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.030487804878 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 69 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (1, 6), destination = (8, 3), deadline = 50
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0301204819277 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 70 / 83
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 4), deadline = 35
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0297619047619 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 71 / 84
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (3, 5), destination = (2, 1), deadline = 25
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 72 / 85
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (4, 1), destination = (1, 2), deadline = 20
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0290697674419 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 73 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (7, 1), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0287356321839 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 74 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (7, 4), destination = (2, 6), deadline = 35
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0284090909091 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 75 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (5, 2), destination = (3, 5), deadline = 25
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0280898876404 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 76 / 89
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (7, 6), destination = (6, 1), deadline = 30
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 77 / 90
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (1, 3), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0274725274725 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 78 / 91
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (6, 6), destination = (6, 1), deadline = 25
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0271739130435 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 79 / 92
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (1, 2), destination = (3, 6), deadline = 30
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0268817204301 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 80 / 93
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (1, 6), destination = (2, 1), deadline = 30
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0265957446809 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 81 / 94
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (2, 6), destination = (6, 1), deadline = 45
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 82 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (2, 6), destination = (3, 3), deadline = 20
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0260416666667 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 83 / 96
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (6, 2), destination = (3, 4), deadline = 25
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0257731958763 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 84 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (5, 4), destination = (2, 1), deadline = 30
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0255102040816 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 85 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (2, 1), destination = (6, 4), deadline = 35
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0252525252525 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 86 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (1, 6), destination = (5, 3), deadline = 35
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 87 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99945
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06680
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04762
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.16943
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02439
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.87062
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00421
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05095
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.22424
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05534
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12931
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01471
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.86810
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.11100
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.11100
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00166
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.50125
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.00125
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.66914
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.29324
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.37578
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.00000
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99938
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04167
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.16667
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04838
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.20138
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.15655
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.95423
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: -0.14286
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: -0.02564
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 3.89497
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.99874
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.50126
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.25342
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.00087
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.11718
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.34097
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.34232
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.02517
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 3.05683
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 2.00250
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.23450
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50295
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.34271
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.82948
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.50251
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.99832
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: -1.00000
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.43742
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.00012
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 3.07202
--------------------------------------------------------------------------------
updated cells:  52 , self.total_cell_count: 2048 , updated_func_counter: 1627
self.alpha: 0.3 self.gamma: 0.005 , self.epsilon: 0.5 , success: 87  in steps:  15
________________________________________________________________________________
gma = 0.005
eps = 0.2
alp = 0.3
epsilon:  0.2
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (8, 2), destination = (2, 6), deadline = 50
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 1.0 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.0 , action:  right , deadline: 50
annealing now. self.epsilon: 1.0 , action:  left , deadline: 49
annealing now. self.epsilon: 1.0 , action:  right , deadline: 48
annealing now. self.epsilon: 1.0 , action:  right , deadline: 47
annealing now. self.epsilon: 1.0 , action:  None , deadline: 46
annealing now. self.epsilon: 1.0 , action:  left , deadline: 45
annealing now. self.epsilon: 1.0 , action:  None , deadline: 44
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 43
annealing now. self.epsilon: 1.0 , action:  right , deadline: 42
annealing now. self.epsilon: 1.0 , action:  right , deadline: 41
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 40
annealing now. self.epsilon: 1.0 , action:  None , deadline: 39
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 38
annealing now. self.epsilon: 1.0 , action:  left , deadline: 37
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 36
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 35
annealing now. self.epsilon: 1.0 , action:  right , deadline: 34
annealing now. self.epsilon: 1.0 , action:  right , deadline: 33
annealing now. self.epsilon: 1.0 , action:  left , deadline: 32
annealing now. self.epsilon: 1.0 , action:  right , deadline: 31
annealing now. self.epsilon: 1.0 , action:  None , deadline: 30
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 29
annealing now. self.epsilon: 1.0 , action:  right , deadline: 28
annealing now. self.epsilon: 1.0 , action:  None , deadline: 27
annealing now. self.epsilon: 1.0 , action:  right , deadline: 26
annealing now. self.epsilon: 1.0 , action:  right , deadline: 25
annealing now. self.epsilon: 1.0 , action:  None , deadline: 24
annealing now. self.epsilon: 1.0 , action:  left , deadline: 23
annealing now. self.epsilon: 1.0 , action:  None , deadline: 22
annealing now. self.epsilon: 1.0 , action:  None , deadline: 21
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 20
annealing now. self.epsilon: 1.0 , action:  None , deadline: 19
annealing now. self.epsilon: 1.0 , action:  None , deadline: 18
annealing now. self.epsilon: 1.0 , action:  right , deadline: 17
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 16
annealing now. self.epsilon: 1.0 , action:  left , deadline: 15
annealing now. self.epsilon: 1.0 , action:  right , deadline: 14
annealing now. self.epsilon: 1.0 , action:  right , deadline: 13
annealing now. self.epsilon: 1.0 , action:  left , deadline: 12
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 11
annealing now. self.epsilon: 1.0 , action:  None , deadline: 10
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 9
annealing now. self.epsilon: 1.0 , action:  None , deadline: 8
annealing now. self.epsilon: 1.0 , action:  left , deadline: 7
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 6
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 5
annealing now. self.epsilon: 1.0 , action:  left , deadline: 4
annealing now. self.epsilon: 1.0 , action:  right , deadline: 3
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 2
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (6, 6), destination = (4, 2), deadline = 30
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  None , deadline: 30
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 28
annealing now. self.epsilon: 0.5 , action:  left , deadline: 26
annealing now. self.epsilon: 0.5 , action:  right , deadline: 24
annealing now. self.epsilon: 0.5 , action:  None , deadline: 22
annealing now. self.epsilon: 0.5 , action:  right , deadline: 20
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.5 , action:  None , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 1 / 2
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (7, 1), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.333333333333 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.333333333333 , action:  None , deadline: 18
annealing now. self.epsilon: 0.333333333333 , action:  forward , deadline: 15
Environment.act(): Primary agent has reached destination!
success: 2 / 3
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (6, 1), destination = (1, 6), deadline = 50
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  forward , deadline: 48
annealing now. self.epsilon: 0.25 , action:  left , deadline: 44
annealing now. self.epsilon: 0.25 , action:  right , deadline: 40
Environment.act(): Primary agent has reached destination!
success: 3 / 4
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (4, 2), destination = (1, 3), deadline = 20
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.2 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.2 , action:  right , deadline: 20
annealing now. self.epsilon: 0.2 , action:  right , deadline: 15
Environment.act(): Primary agent has reached destination!
success: 4 / 5
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (6, 4), destination = (2, 4), deadline = 20
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 5 / 6
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (6, 2), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.142857142857 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.142857142857 , action:  None , deadline: 21
Environment.act(): Primary agent has reached destination!
success: 6 / 7
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (1, 4), destination = (8, 6), deadline = 45
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  forward , deadline: 40
annealing now. self.epsilon: 0.125 , action:  right , deadline: 32
annealing now. self.epsilon: 0.125 , action:  left , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 7 / 8
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (3, 4), destination = (8, 6), deadline = 35
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.111111111111 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.111111111111 , action:  left , deadline: 27
annealing now. self.epsilon: 0.111111111111 , action:  forward , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 8 / 9
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (7, 3), destination = (1, 2), deadline = 35
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  right , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 9 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (7, 5), destination = (3, 6), deadline = 25
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0909090909091 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0909090909091 , action:  left , deadline: 22
Environment.act(): Primary agent has reached destination!
success: 10 / 11
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (7, 1), destination = (2, 3), deadline = 35
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  right , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 11 / 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (6, 1), destination = (2, 2), deadline = 25
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0769230769231 , self.eps_freq:  13.0 

Environment.act(): Primary agent has reached destination!
success: 12 / 13
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (1, 4), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 13 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (2, 2), destination = (8, 6), deadline = 50
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0666666666667 , self.eps_freq:  15.0 

annealing now. self.epsilon: 0.0666666666667 , action:  left , deadline: 45
annealing now. self.epsilon: 0.0666666666667 , action:  right , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 14 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (8, 5), destination = (3, 6), deadline = 30
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 15 / 16
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (7, 4), destination = (3, 4), deadline = 20
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0588235294118 , self.eps_freq:  17.0 

Environment.act(): Primary agent has reached destination!
success: 16 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (3, 3), destination = (1, 6), deadline = 25
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 17 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (7, 5), destination = (8, 1), deadline = 25
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0526315789474 , self.eps_freq:  19.0 

Environment.act(): Primary agent has reached destination!
success: 18 / 19
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (1, 3), destination = (5, 1), deadline = 30
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.05 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 19 / 20
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (4, 1), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.047619047619 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 20 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (4, 4), destination = (1, 6), deadline = 25
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 21 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (7, 3), destination = (2, 2), deadline = 30
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0434782608696 , self.eps_freq:  23.0 

success: 21 / 23
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (6, 3), destination = (2, 2), deadline = 25
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 22 / 24
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (3, 2), destination = (5, 6), deadline = 30
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.04 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 23 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (5, 2), destination = (7, 4), deadline = 20
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (4, 5), destination = (2, 3), deadline = 20
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.037037037037 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (4, 6), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (8, 3), destination = (3, 6), deadline = 40
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0344827586207 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (5, 6), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 30
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (5, 5), destination = (1, 5), deadline = 20
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0322580645161 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (5, 2), destination = (1, 4), deadline = 30
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (3, 3), destination = (2, 6), deadline = 20
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.030303030303 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 33
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (6, 4), destination = (3, 5), deadline = 20
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 34
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (3, 3), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0285714285714 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 35
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (3, 2), destination = (1, 6), deadline = 30
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 36
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (3, 1), destination = (5, 4), deadline = 25
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.027027027027 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 35 / 37
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (8, 1), destination = (4, 1), deadline = 20
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (3, 6), destination = (1, 1), deadline = 35
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.025641025641 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (7, 4), destination = (8, 1), deadline = 20
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 40
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (4, 4), destination = (1, 6), deadline = 25
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0243902439024 , self.eps_freq:  41.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 41
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (4, 4), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 42
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (7, 1), destination = (3, 3), deadline = 30
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0232558139535 , self.eps_freq:  43.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (4, 3), destination = (2, 1), deadline = 20
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

success: 41 / 44
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (1, 6), destination = (3, 4), deadline = 20
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0222222222222 , self.eps_freq:  45.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (4, 4), destination = (1, 1), deadline = 30
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 46
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (2, 2), destination = (8, 2), deadline = 30
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0212765957447 , self.eps_freq:  47.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 47
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (4, 1), destination = (6, 4), deadline = 25
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (4, 1), destination = (8, 1), deadline = 20
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0204081632653 , self.eps_freq:  50.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (5, 1), destination = (3, 6), deadline = 35
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.02 , self.eps_freq:  50.0 

Environment.act(): Primary agent has reached destination!
success: 47 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (3, 1), destination = (6, 5), deadline = 35
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0196078431373 , self.eps_freq:  51.0 

success: 47 / 51
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (5, 3), destination = (8, 6), deadline = 30
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

success: 47 / 52
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (3, 6), destination = (8, 6), deadline = 25
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0188679245283 , self.eps_freq:  53.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (5, 2), destination = (2, 6), deadline = 35
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (3, 5), destination = (7, 5), deadline = 20
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0181818181818 , self.eps_freq:  55.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (2, 1), destination = (5, 2), deadline = 20
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (8, 4), destination = (3, 4), deadline = 25
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0175438596491 , self.eps_freq:  57.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 57
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (7, 1), destination = (8, 6), deadline = 30
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

Environment.act(): Primary agent has reached destination!
success: 53 / 58
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (5, 1), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0169491525424 , self.eps_freq:  59.0 

Environment.act(): Primary agent has reached destination!
success: 54 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (4, 5), destination = (8, 2), deadline = 35
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

Environment.act(): Primary agent has reached destination!
success: 55 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (5, 4), destination = (3, 6), deadline = 20
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.016393442623 , self.eps_freq:  61.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 61
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (3, 2), destination = (1, 5), deadline = 25
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

Environment.act(): Primary agent has reached destination!
success: 57 / 62
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (7, 6), destination = (1, 2), deadline = 50
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.015873015873 , self.eps_freq:  63.0 

Environment.act(): Primary agent has reached destination!
success: 58 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (1, 5), destination = (8, 3), deadline = 45
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

Environment.act(): Primary agent has reached destination!
success: 59 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (6, 1), destination = (2, 6), deadline = 45
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0153846153846 , self.eps_freq:  65.0 

Environment.act(): Primary agent has reached destination!
success: 60 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (2, 5), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

Environment.act(): Primary agent has reached destination!
success: 61 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (4, 3), destination = (1, 2), deadline = 20
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0149253731343 , self.eps_freq:  67.0 

Environment.act(): Primary agent has reached destination!
success: 62 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (5, 1), destination = (5, 6), deadline = 25
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

success: 62 / 68
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (8, 5), destination = (4, 3), deadline = 30
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0144927536232 , self.eps_freq:  69.0 

Environment.act(): Primary agent has reached destination!
success: 63 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (4, 6), destination = (8, 2), deadline = 40
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

Environment.act(): Primary agent has reached destination!
success: 64 / 70
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (7, 3), destination = (1, 2), deadline = 35
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0140845070423 , self.eps_freq:  71.0 

Environment.act(): Primary agent has reached destination!
success: 65 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (7, 2), destination = (3, 1), deadline = 25
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

Environment.act(): Primary agent has reached destination!
success: 66 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (7, 4), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.013698630137 , self.eps_freq:  73.0 

Environment.act(): Primary agent has reached destination!
success: 67 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (2, 3), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

Environment.act(): Primary agent has reached destination!
success: 68 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (8, 2), destination = (2, 3), deadline = 35
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0133333333333 , self.eps_freq:  75.0 

Environment.act(): Primary agent has reached destination!
success: 69 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (7, 5), destination = (1, 3), deadline = 40
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

Environment.act(): Primary agent has reached destination!
success: 70 / 76
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (8, 6), destination = (1, 4), deadline = 45
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.012987012987 , self.eps_freq:  77.0 

Environment.act(): Primary agent has reached destination!
success: 71 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (6, 5), destination = (6, 1), deadline = 20
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

Environment.act(): Primary agent has reached destination!
success: 72 / 78
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (6, 6), destination = (5, 1), deadline = 30
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0126582278481 , self.eps_freq:  79.0 

Environment.act(): Primary agent has reached destination!
success: 73 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (7, 6), destination = (3, 5), deadline = 25
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

Environment.act(): Primary agent has reached destination!
success: 74 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (1, 5), destination = (5, 1), deadline = 40
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0123456790123 , self.eps_freq:  81.0 

Environment.act(): Primary agent has reached destination!
success: 75 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (2, 2), destination = (7, 5), deadline = 40
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

Environment.act(): Primary agent has reached destination!
success: 76 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (4, 2), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0120481927711 , self.eps_freq:  83.0 

Environment.act(): Primary agent has reached destination!
success: 77 / 83
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (2, 5), destination = (7, 1), deadline = 45
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

Environment.act(): Primary agent has reached destination!
success: 78 / 84
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (2, 4), destination = (7, 5), deadline = 30
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0117647058824 , self.eps_freq:  85.0 

Environment.act(): Primary agent has reached destination!
success: 79 / 85
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (1, 4), destination = (5, 5), deadline = 25
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

Environment.act(): Primary agent has reached destination!
success: 80 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (2, 6), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0114942528736 , self.eps_freq:  87.0 

Environment.act(): Primary agent has reached destination!
success: 81 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 6), deadline = 35
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

Environment.act(): Primary agent has reached destination!
success: 82 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (5, 6), destination = (3, 3), deadline = 25
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0112359550562 , self.eps_freq:  89.0 

Environment.act(): Primary agent has reached destination!
success: 83 / 89
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (7, 6), destination = (8, 3), deadline = 20
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

Environment.act(): Primary agent has reached destination!
success: 84 / 90
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (6, 6), destination = (4, 2), deadline = 30
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.010989010989 , self.eps_freq:  91.0 

Environment.act(): Primary agent has reached destination!
success: 85 / 91
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (7, 1), destination = (1, 3), deadline = 40
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

Environment.act(): Primary agent has reached destination!
success: 86 / 92
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (4, 3), destination = (8, 2), deadline = 25
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.010752688172 , self.eps_freq:  93.0 

Environment.act(): Primary agent has reached destination!
success: 87 / 93
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (8, 6), destination = (1, 3), deadline = 50
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

Environment.act(): Primary agent has reached destination!
success: 88 / 94
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (1, 2), destination = (5, 5), deadline = 35
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0105263157895 , self.eps_freq:  95.0 

Environment.act(): Primary agent has reached destination!
success: 89 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (4, 3), destination = (7, 6), deadline = 30
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

Environment.act(): Primary agent has reached destination!
success: 90 / 96
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (5, 6), destination = (2, 4), deadline = 25
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0103092783505 , self.eps_freq:  97.0 

Environment.act(): Primary agent has reached destination!
success: 91 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (8, 6), destination = (2, 1), deadline = 55
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

Environment.act(): Primary agent has reached destination!
success: 92 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (1, 1), destination = (6, 3), deadline = 35
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.010101010101 , self.eps_freq:  99.0 

Environment.act(): Primary agent has reached destination!
success: 93 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (5, 5), destination = (1, 4), deadline = 25
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.01 , self.eps_freq:  100.0 

Environment.act(): Primary agent has reached destination!
success: 94 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99938
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01587
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.11012
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01190
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01190
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01587
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.13539
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12500
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.71883
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00522
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.32030
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.18940
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07058
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.27211
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01136
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06526
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.74084
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04348
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00251
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03993
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01562
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04110
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01136
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.23440
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01010
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.16289
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00439
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04123
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.20989
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01282
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.18734
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.14330
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12500
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.50156
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10949
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02210
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.00062
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 3.75381
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.99749
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.50188
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50455
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50061
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.50351
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.77764
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.64995
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 1.05077
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.50000
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50188
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.99937
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.50405
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.99874
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 3.73647
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 2.00438
--------------------------------------------------------------------------------
updated cells:  53 , self.total_cell_count: 2048 , updated_func_counter: 1422
self.alpha: 0.3 self.gamma: 0.005 , self.epsilon: 0.2 , success: 94  in steps:  15
________________________________________________________________________________
gma = 0.005
eps = 0.1
alp = 0.3
epsilon:  0.1
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (7, 5), destination = (4, 2), deadline = 30
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  None , deadline: 30
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 28
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 26
annealing now. self.epsilon: 0.5 , action:  None , deadline: 24
annealing now. self.epsilon: 0.5 , action:  left , deadline: 22
annealing now. self.epsilon: 0.5 , action:  None , deadline: 20
annealing now. self.epsilon: 0.5 , action:  left , deadline: 18
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 14
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 12
annealing now. self.epsilon: 0.5 , action:  right , deadline: 10
annealing now. self.epsilon: 0.5 , action:  left , deadline: 8
annealing now. self.epsilon: 0.5 , action:  None , deadline: 6
annealing now. self.epsilon: 0.5 , action:  None , deadline: 4
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (2, 4), destination = (7, 2), deadline = 35
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  forward , deadline: 32
annealing now. self.epsilon: 0.25 , action:  right , deadline: 28
annealing now. self.epsilon: 0.25 , action:  None , deadline: 24
annealing now. self.epsilon: 0.25 , action:  left , deadline: 20
annealing now. self.epsilon: 0.25 , action:  left , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 1 / 2
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (2, 6), destination = (5, 2), deadline = 35
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 30
annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 24
annealing now. self.epsilon: 0.166666666667 , action:  left , deadline: 18
annealing now. self.epsilon: 0.166666666667 , action:  forward , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 2 / 3
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (5, 3), destination = (3, 6), deadline = 25
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  right , deadline: 24
annealing now. self.epsilon: 0.125 , action:  right , deadline: 16
success: 2 / 4
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (1, 6), destination = (7, 2), deadline = 50
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  right , deadline: 50
annealing now. self.epsilon: 0.1 , action:  None , deadline: 40
annealing now. self.epsilon: 0.1 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.1 , action:  forward , deadline: 20
success: 2 / 5
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (3, 4), destination = (8, 5), deadline = 30
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  None , deadline: 24
success: 2 / 6
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (3, 5), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

success: 2 / 7
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (7, 2), destination = (4, 6), deadline = 35
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

annealing now. self.epsilon: 0.0625 , action:  None , deadline: 32
Environment.act(): Primary agent has reached destination!
success: 3 / 8
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (3, 6), destination = (6, 2), deadline = 35
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 4 / 9
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (3, 6), destination = (7, 3), deadline = 35
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.05 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 5 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (1, 1), destination = (7, 1), deadline = 30
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

success: 5 / 11
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (8, 5), destination = (2, 5), deadline = 30
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

success: 5 / 12
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (7, 1), destination = (1, 4), deadline = 45
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 6 / 13
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (6, 2), destination = (3, 6), deadline = 35
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 7 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (1, 5), destination = (4, 2), deadline = 30
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 8 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (4, 3), destination = (2, 5), deadline = 20
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

success: 8 / 16
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (1, 1), destination = (5, 5), deadline = 40
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 9 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (7, 1), destination = (5, 6), deadline = 35
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 10 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (7, 2), destination = (3, 5), deadline = 35
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 11 / 19
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (6, 6), destination = (1, 5), deadline = 30
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.025 , self.eps_freq:  40.0 

success: 11 / 20
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (3, 5), destination = (2, 1), deadline = 25
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

success: 11 / 21
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (6, 3), destination = (1, 2), deadline = 30
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

success: 11 / 22
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (6, 6), destination = (5, 1), deadline = 30
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

Environment.act(): Primary agent has reached destination!
success: 12 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (6, 2), destination = (5, 6), deadline = 25
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

success: 12 / 24
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (8, 1), destination = (3, 3), deadline = 35
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.02 , self.eps_freq:  50.0 

Environment.act(): Primary agent has reached destination!
success: 13 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (3, 2), destination = (7, 5), deadline = 35
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

Environment.act(): Primary agent has reached destination!
success: 14 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (8, 2), destination = (4, 5), deadline = 35
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

Environment.act(): Primary agent has reached destination!
success: 15 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (6, 3), destination = (1, 5), deadline = 35
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

Environment.act(): Primary agent has reached destination!
success: 16 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (8, 4), destination = (3, 2), deadline = 35
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

success: 16 / 29
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (1, 4), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

Environment.act(): Primary agent has reached destination!
success: 17 / 30
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (5, 1), destination = (4, 6), deadline = 30
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

success: 17 / 31
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (5, 6), destination = (1, 2), deadline = 40
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

Environment.act(): Primary agent has reached destination!
success: 18 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (7, 1), destination = (1, 5), deadline = 50
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

success: 18 / 33
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (2, 5), destination = (5, 3), deadline = 25
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

success: 18 / 34
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (5, 2), destination = (5, 6), deadline = 20
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

success: 18 / 35
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (2, 2), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

success: 18 / 36
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (6, 3), destination = (1, 3), deadline = 25
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

success: 18 / 37
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (2, 3), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

success: 18 / 38
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (6, 6), destination = (2, 5), deadline = 25
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

success: 18 / 39
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (1, 4), destination = (7, 3), deadline = 35
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

success: 18 / 40
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (1, 2), destination = (6, 5), deadline = 40
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

Environment.act(): Primary agent has reached destination!
success: 19 / 41
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (7, 5), destination = (2, 2), deadline = 40
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

Environment.act(): Primary agent has reached destination!
success: 20 / 42
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (5, 5), destination = (8, 4), deadline = 20
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

success: 20 / 43
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (8, 2), destination = (5, 5), deadline = 30
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

success: 20 / 44
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (4, 5), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

success: 20 / 45
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (2, 4), destination = (4, 6), deadline = 20
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

success: 20 / 46
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (3, 1), destination = (8, 4), deadline = 40
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

success: 20 / 47
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (2, 6), destination = (8, 3), deadline = 45
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

success: 20 / 48
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (5, 5), destination = (2, 3), deadline = 25
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

Environment.act(): Primary agent has reached destination!
success: 21 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (6, 4), destination = (3, 3), deadline = 20
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.01 , self.eps_freq:  100.0 

success: 21 / 50
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (7, 4), destination = (1, 1), deadline = 45
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.00980392156863 , self.eps_freq:  102.0 

success: 21 / 51
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (8, 1), destination = (5, 5), deadline = 35
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.00961538461538 , self.eps_freq:  104.0 

Environment.act(): Primary agent has reached destination!
success: 22 / 52
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (3, 2), destination = (7, 3), deadline = 25
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.00943396226415 , self.eps_freq:  106.0 

Environment.act(): Primary agent has reached destination!
success: 23 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (4, 4), destination = (1, 2), deadline = 25
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.00925925925926 , self.eps_freq:  108.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (6, 2), destination = (3, 3), deadline = 20
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.00909090909091 , self.eps_freq:  110.0 

success: 24 / 55
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (8, 5), destination = (2, 5), deadline = 30
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.00892857142857 , self.eps_freq:  112.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (5, 2), destination = (1, 1), deadline = 25
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.00877192982456 , self.eps_freq:  114.0 

success: 25 / 57
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (2, 1), destination = (1, 5), deadline = 25
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.00862068965517 , self.eps_freq:  116.0 

success: 25 / 58
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (3, 1), destination = (6, 5), deadline = 35
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.00847457627119 , self.eps_freq:  118.0 

success: 25 / 59
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (6, 2), destination = (4, 6), deadline = 30
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.00833333333333 , self.eps_freq:  120.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (4, 2), destination = (1, 5), deadline = 30
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.00819672131148 , self.eps_freq:  122.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 61
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (1, 1), destination = (4, 5), deadline = 35
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.00806451612903 , self.eps_freq:  124.0 

success: 27 / 62
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (1, 6), destination = (6, 1), deadline = 50
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.00793650793651 , self.eps_freq:  126.0 

success: 27 / 63
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (7, 3), destination = (1, 1), deadline = 40
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0078125 , self.eps_freq:  128.0 

success: 27 / 64
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (1, 2), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.00769230769231 , self.eps_freq:  130.0 

success: 27 / 65
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (7, 6), destination = (1, 2), deadline = 50
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.00757575757576 , self.eps_freq:  132.0 

success: 27 / 66
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (5, 6), destination = (3, 1), deadline = 35
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.00746268656716 , self.eps_freq:  134.0 

success: 27 / 67
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (5, 4), destination = (2, 5), deadline = 20
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.00735294117647 , self.eps_freq:  136.0 

success: 27 / 68
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (8, 2), destination = (1, 6), deadline = 55
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.00724637681159 , self.eps_freq:  138.0 

success: 27 / 69
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (3, 5), destination = (8, 1), deadline = 45
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00714285714286 , self.eps_freq:  140.0 

success: 27 / 70
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (5, 2), destination = (2, 4), deadline = 25
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.00704225352113 , self.eps_freq:  142.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (3, 2), destination = (2, 5), deadline = 20
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.00694444444444 , self.eps_freq:  144.0 

success: 28 / 72
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (7, 3), destination = (1, 4), deadline = 35
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.00684931506849 , self.eps_freq:  146.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (5, 6), destination = (4, 1), deadline = 30
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.00675675675676 , self.eps_freq:  148.0 

success: 29 / 74
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (4, 4), destination = (2, 6), deadline = 20
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.00666666666667 , self.eps_freq:  150.0 

success: 29 / 75
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (8, 3), destination = (3, 4), deadline = 30
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.00657894736842 , self.eps_freq:  152.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 76
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (7, 4), destination = (6, 1), deadline = 20
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.00649350649351 , self.eps_freq:  154.0 

success: 30 / 77
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (2, 1), destination = (8, 1), deadline = 30
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00641025641026 , self.eps_freq:  156.0 

success: 30 / 78
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (3, 3), destination = (8, 1), deadline = 35
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00632911392405 , self.eps_freq:  158.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (6, 4), destination = (1, 5), deadline = 30
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.00625 , self.eps_freq:  160.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (8, 5), destination = (6, 1), deadline = 30
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.00617283950617 , self.eps_freq:  162.0 

success: 32 / 81
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (6, 5), destination = (3, 3), deadline = 25
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.00609756097561 , self.eps_freq:  164.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (4, 2), destination = (1, 5), deadline = 30
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.00602409638554 , self.eps_freq:  166.0 

success: 33 / 83
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (3, 6), destination = (2, 1), deadline = 30
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.00595238095238 , self.eps_freq:  168.0 

success: 33 / 84
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (3, 6), destination = (8, 4), deadline = 35
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.00588235294118 , self.eps_freq:  170.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 85
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (5, 5), destination = (2, 1), deadline = 35
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.00581395348837 , self.eps_freq:  172.0 

Environment.act(): Primary agent has reached destination!
success: 35 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (6, 3), destination = (7, 6), deadline = 20
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.00574712643678 , self.eps_freq:  174.0 

success: 35 / 87
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (2, 1), destination = (5, 5), deadline = 35
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.00568181818182 , self.eps_freq:  176.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (7, 6), destination = (1, 4), deadline = 40
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.00561797752809 , self.eps_freq:  178.0 

success: 36 / 89
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (7, 4), destination = (6, 1), deadline = 20
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.00555555555556 , self.eps_freq:  180.0 

success: 36 / 90
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (1, 6), destination = (8, 3), deadline = 50
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.00549450549451 , self.eps_freq:  182.0 

success: 36 / 91
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (5, 5), destination = (1, 5), deadline = 20
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0054347826087 , self.eps_freq:  184.0 

success: 36 / 92
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (3, 6), destination = (6, 2), deadline = 35
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.00537634408602 , self.eps_freq:  186.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 93
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (5, 6), destination = (1, 2), deadline = 40
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.00531914893617 , self.eps_freq:  188.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 94
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (3, 6), destination = (8, 5), deadline = 30
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.00526315789474 , self.eps_freq:  190.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (1, 5), destination = (2, 1), deadline = 25
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.00520833333333 , self.eps_freq:  192.0 

success: 39 / 96
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (8, 6), destination = (4, 2), deadline = 40
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.00515463917526 , self.eps_freq:  194.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (1, 1), destination = (3, 3), deadline = 20
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.00510204081633 , self.eps_freq:  197.0 

success: 40 / 98
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (3, 4), destination = (1, 6), deadline = 20
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.00505050505051 , self.eps_freq:  198.0 

success: 40 / 99
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (2, 2), destination = (8, 4), deadline = 40
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.005 , self.eps_freq:  200.0 

success: 40 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00000
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08017
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.34833
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05539
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.00015
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.39459
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07692
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.72744
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.12508
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.65624
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06985
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02186
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.34222
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.47536
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02969
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.86472
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01515
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00245
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02303
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.23334
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02857
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08507
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06884
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.89192
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02703
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00267
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04494
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02941
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06183
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.16999
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.13462
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.86748
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12803
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99904
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03382
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.00002
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.25013
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05854
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.41449
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00375
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.11824
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02941
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.19651
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06105
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03018
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01124
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.00000
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 2.00016
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.19925
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.30063
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.99875
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.49993
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50238
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.83624
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50050
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.23383
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.33440
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.00125
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 2.37961
--------------------------------------------------------------------------------
updated cells:  59 , self.total_cell_count: 2048 , updated_func_counter: 2681
self.alpha: 0.3 self.gamma: 0.005 , self.epsilon: 0.1 , success: 40  in steps:  0
________________________________________________________________________________
Environment.reset(): Primary agent could not reach destination within deadline!
gma = 0.05
eps = 0.5
alp = 0.3
epsilon:  0.5
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (3, 2), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 2.5 , self.eps_freq:  1.0 

annealing now. self.epsilon: 2.5 , action:  right , deadline: 20
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 19
annealing now. self.epsilon: 2.5 , action:  left , deadline: 18
annealing now. self.epsilon: 2.5 , action:  left , deadline: 17
annealing now. self.epsilon: 2.5 , action:  left , deadline: 16
annealing now. self.epsilon: 2.5 , action:  left , deadline: 15
annealing now. self.epsilon: 2.5 , action:  right , deadline: 14
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 13
annealing now. self.epsilon: 2.5 , action:  left , deadline: 12
annealing now. self.epsilon: 2.5 , action:  right , deadline: 11
annealing now. self.epsilon: 2.5 , action:  right , deadline: 10
annealing now. self.epsilon: 2.5 , action:  right , deadline: 9
annealing now. self.epsilon: 2.5 , action:  left , deadline: 8
annealing now. self.epsilon: 2.5 , action:  None , deadline: 7
annealing now. self.epsilon: 2.5 , action:  None , deadline: 6
annealing now. self.epsilon: 2.5 , action:  None , deadline: 5
annealing now. self.epsilon: 2.5 , action:  None , deadline: 4
annealing now. self.epsilon: 2.5 , action:  left , deadline: 3
annealing now. self.epsilon: 2.5 , action:  left , deadline: 2
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (1, 4), destination = (2, 1), deadline = 20
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 1.25 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.25 , action:  left , deadline: 20
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 19
annealing now. self.epsilon: 1.25 , action:  None , deadline: 18
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 17
annealing now. self.epsilon: 1.25 , action:  None , deadline: 16
annealing now. self.epsilon: 1.25 , action:  right , deadline: 15
annealing now. self.epsilon: 1.25 , action:  right , deadline: 14
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 13
annealing now. self.epsilon: 1.25 , action:  left , deadline: 12
annealing now. self.epsilon: 1.25 , action:  None , deadline: 11
annealing now. self.epsilon: 1.25 , action:  None , deadline: 10
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 9
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 8
annealing now. self.epsilon: 1.25 , action:  left , deadline: 7
annealing now. self.epsilon: 1.25 , action:  left , deadline: 6
annealing now. self.epsilon: 1.25 , action:  right , deadline: 5
annealing now. self.epsilon: 1.25 , action:  right , deadline: 4
annealing now. self.epsilon: 1.25 , action:  None , deadline: 3
annealing now. self.epsilon: 1.25 , action:  left , deadline: 2
success: 0 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (2, 3), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.833333333333 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 30
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 28
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 26
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 24
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 22
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 20
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.833333333333 , action:  left , deadline: 16
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 14
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 12
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 10
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 8
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 6
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 4
Environment.act(): Primary agent has reached destination!
success: 1 / 3
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (6, 2), destination = (5, 6), deadline = 25
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.625 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.625 , action:  left , deadline: 24
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 22
Environment.act(): Primary agent has reached destination!
success: 2 / 4
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (4, 1), destination = (8, 1), deadline = 20
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  None , deadline: 20
annealing now. self.epsilon: 0.5 , action:  left , deadline: 18
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.5 , action:  left , deadline: 14
annealing now. self.epsilon: 0.5 , action:  None , deadline: 12
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 10
annealing now. self.epsilon: 0.5 , action:  None , deadline: 8
annealing now. self.epsilon: 0.5 , action:  None , deadline: 6
annealing now. self.epsilon: 0.5 , action:  None , deadline: 4
success: 2 / 5
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (2, 5), destination = (1, 2), deadline = 20
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.416666666667 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.416666666667 , action:  left , deadline: 18
annealing now. self.epsilon: 0.416666666667 , action:  forward , deadline: 15
annealing now. self.epsilon: 0.416666666667 , action:  forward , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 3 / 6
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (3, 6), destination = (8, 3), deadline = 40
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.357142857143 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 39
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 36
annealing now. self.epsilon: 0.357142857143 , action:  forward , deadline: 33
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 30
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 27
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 4 / 7
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (8, 4), destination = (3, 4), deadline = 25
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.3125 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.3125 , action:  None , deadline: 24
annealing now. self.epsilon: 0.3125 , action:  None , deadline: 20
annealing now. self.epsilon: 0.3125 , action:  forward , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 5 / 8
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (2, 1), destination = (7, 2), deadline = 30
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.277777777778 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.277777777778 , action:  left , deadline: 28
annealing now. self.epsilon: 0.277777777778 , action:  None , deadline: 24
annealing now. self.epsilon: 0.277777777778 , action:  forward , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 6 / 9
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (2, 6), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  left , deadline: 20
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.25 , action:  left , deadline: 12
annealing now. self.epsilon: 0.25 , action:  None , deadline: 8
Environment.act(): Primary agent has reached destination!
success: 7 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (6, 6), destination = (5, 1), deadline = 30
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.227272727273 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.227272727273 , action:  None , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 8 / 11
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (5, 3), destination = (1, 3), deadline = 20
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.208333333333 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.208333333333 , action:  left , deadline: 20
annealing now. self.epsilon: 0.208333333333 , action:  right , deadline: 15
annealing now. self.epsilon: 0.208333333333 , action:  right , deadline: 10
Environment.act(): Primary agent has reached destination!
success: 9 / 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (8, 1), destination = (3, 3), deadline = 35
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.192307692308 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.192307692308 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.192307692308 , action:  None , deadline: 24
annealing now. self.epsilon: 0.192307692308 , action:  forward , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 10 / 13
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (3, 1), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.178571428571 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.178571428571 , action:  left , deadline: 18
annealing now. self.epsilon: 0.178571428571 , action:  left , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 11 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (6, 1), destination = (3, 2), deadline = 20
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 12 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (2, 4), destination = (7, 2), deadline = 35
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.15625 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.15625 , action:  forward , deadline: 35
annealing now. self.epsilon: 0.15625 , action:  left , deadline: 28
annealing now. self.epsilon: 0.15625 , action:  left , deadline: 21
Environment.act(): Primary agent has reached destination!
success: 13 / 16
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (4, 2), destination = (8, 3), deadline = 25
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.147058823529 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.147058823529 , action:  forward , deadline: 21
Environment.act(): Primary agent has reached destination!
success: 14 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (3, 2), destination = (8, 3), deadline = 30
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.138888888889 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.138888888889 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.138888888889 , action:  left , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 15 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (4, 2), destination = (5, 6), deadline = 25
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.131578947368 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.131578947368 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.131578947368 , action:  left , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 16 / 19
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (8, 3), destination = (1, 4), deadline = 40
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  right , deadline: 40
Environment.act(): Primary agent has reached destination!
success: 17 / 20
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (1, 5), destination = (6, 2), deadline = 40
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.119047619048 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.119047619048 , action:  right , deadline: 36
annealing now. self.epsilon: 0.119047619048 , action:  forward , deadline: 27
Environment.act(): Primary agent has reached destination!
success: 18 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (5, 3), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.113636363636 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.113636363636 , action:  forward , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 19 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (3, 3), destination = (4, 6), deadline = 20
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.108695652174 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.108695652174 , action:  None , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 20 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (4, 5), destination = (2, 3), deadline = 20
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.104166666667 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.104166666667 , action:  right , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 21 / 24
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (1, 3), destination = (8, 2), deadline = 40
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  right , deadline: 40
annealing now. self.epsilon: 0.1 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.1 , action:  right , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 22 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (1, 6), destination = (7, 5), deadline = 35
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0961538461538 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0961538461538 , action:  right , deadline: 33
annealing now. self.epsilon: 0.0961538461538 , action:  right , deadline: 22
Environment.act(): Primary agent has reached destination!
success: 23 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (8, 5), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0925925925926 , self.eps_freq:  11.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (6, 3), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0892857142857 , self.eps_freq:  12.0 

success: 24 / 28
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (8, 5), destination = (4, 2), deadline = 35
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0862068965517 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0862068965517 , action:  right , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 25 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (1, 3), destination = (8, 5), deadline = 45
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  left , deadline: 36
annealing now. self.epsilon: 0.0833333333333 , action:  None , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 26 / 30
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (1, 3), destination = (8, 1), deadline = 45
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0806451612903 , self.eps_freq:  13.0 

annealing now. self.epsilon: 0.0806451612903 , action:  right , deadline: 39
annealing now. self.epsilon: 0.0806451612903 , action:  right , deadline: 26
Environment.act(): Primary agent has reached destination!
success: 27 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (1, 6), destination = (8, 6), deadline = 35
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.078125 , self.eps_freq:  13.0 

annealing now. self.epsilon: 0.078125 , action:  None , deadline: 26
Environment.act(): Primary agent has reached destination!
success: 28 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (3, 5), destination = (2, 1), deadline = 25
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0757575757576 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 33
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (2, 5), destination = (6, 4), deadline = 25
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0735294117647 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 34
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (2, 3), destination = (7, 5), deadline = 35
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0714285714286 , action:  left , deadline: 28
Environment.act(): Primary agent has reached destination!
success: 31 / 35
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (3, 1), destination = (5, 6), deadline = 35
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0694444444444 , self.eps_freq:  15.0 

annealing now. self.epsilon: 0.0694444444444 , action:  right , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 32 / 36
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (8, 4), destination = (3, 3), deadline = 30
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0675675675676 , self.eps_freq:  15.0 

annealing now. self.epsilon: 0.0675675675676 , action:  left , deadline: 30
success: 32 / 37
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (8, 6), destination = (2, 6), deadline = 30
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0657894736842 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (1, 2), destination = (2, 5), deadline = 20
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0641025641026 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (4, 3), destination = (1, 2), deadline = 20
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 35 / 40
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (3, 6), destination = (8, 1), deadline = 50
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0609756097561 , self.eps_freq:  17.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 41
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (5, 6), destination = (8, 3), deadline = 30
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0595238095238 , self.eps_freq:  17.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 42
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (3, 6), destination = (7, 2), deadline = 40
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0581395348837 , self.eps_freq:  18.0 

annealing now. self.epsilon: 0.0581395348837 , action:  forward , deadline: 36
Environment.act(): Primary agent has reached destination!
success: 38 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (2, 1), destination = (6, 6), deadline = 45
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0568181818182 , self.eps_freq:  18.0 

annealing now. self.epsilon: 0.0568181818182 , action:  left , deadline: 36
Environment.act(): Primary agent has reached destination!
success: 39 / 44
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (1, 2), destination = (4, 5), deadline = 30
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (8, 6), destination = (4, 2), deadline = 40
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.054347826087 , self.eps_freq:  19.0 

annealing now. self.epsilon: 0.054347826087 , action:  forward , deadline: 38
Environment.act(): Primary agent has reached destination!
success: 41 / 46
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (2, 3), destination = (7, 2), deadline = 30
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0531914893617 , self.eps_freq:  19.0 

success: 41 / 47
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (1, 2), destination = (5, 4), deadline = 30
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0520833333333 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (8, 1), destination = (7, 5), deadline = 25
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0510204081633 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (8, 5), destination = (5, 3), deadline = 25
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.05 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (5, 4), destination = (8, 2), deadline = 25
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0490196078431 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (4, 4), destination = (7, 2), deadline = 25
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0480769230769 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 52
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (6, 6), destination = (3, 2), deadline = 35
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0471698113208 , self.eps_freq:  22.0 

success: 46 / 53
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (4, 2), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0462962962963 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 47 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (8, 6), destination = (2, 1), deadline = 55
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

annealing now. self.epsilon: 0.0454545454545 , action:  forward , deadline: 44
Environment.act(): Primary agent has reached destination!
success: 48 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (4, 6), destination = (7, 3), deadline = 30
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0446428571429 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (5, 1), destination = (1, 3), deadline = 30
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0438596491228 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 57
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (7, 5), destination = (8, 1), deadline = 25
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0431034482759 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 58
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (8, 1), destination = (4, 4), deadline = 35
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0423728813559 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (5, 6), destination = (7, 2), deadline = 30
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 53 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (7, 2), destination = (3, 5), deadline = 35
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0409836065574 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 54 / 61
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (6, 3), destination = (5, 6), deadline = 20
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0403225806452 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 55 / 62
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (4, 2), destination = (2, 6), deadline = 30
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0396825396825 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (2, 4), destination = (8, 6), deadline = 40
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0390625 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 57 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (5, 6), destination = (3, 1), deadline = 35
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 58 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 5), deadline = 30
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0378787878788 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 59 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (8, 1), destination = (3, 4), deadline = 40
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0373134328358 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 60 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (4, 3), destination = (7, 4), deadline = 20
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0367647058824 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 61 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (6, 4), destination = (1, 6), deadline = 35
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.036231884058 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 62 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (8, 4), destination = (4, 1), deadline = 35
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 63 / 70
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (6, 3), destination = (1, 6), deadline = 40
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0352112676056 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 64 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (1, 6), destination = (8, 4), deadline = 45
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0347222222222 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 65 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (8, 5), destination = (4, 1), deadline = 40
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0342465753425 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 66 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (6, 2), destination = (3, 6), deadline = 35
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0337837837838 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 67 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (3, 5), destination = (7, 5), deadline = 20
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 68 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (6, 6), destination = (3, 4), deadline = 25
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0328947368421 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 69 / 76
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (6, 6), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0324675324675 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 70 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (7, 4), destination = (1, 5), deadline = 35
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0320512820513 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 71 / 78
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (7, 1), destination = (2, 5), deadline = 45
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0316455696203 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 72 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (4, 5), destination = (1, 6), deadline = 20
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 73 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (3, 3), destination = (7, 1), deadline = 30
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0308641975309 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 74 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (8, 4), destination = (1, 5), deadline = 40
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.030487804878 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 75 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (3, 2), destination = (5, 6), deadline = 30
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0301204819277 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 76 / 83
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (7, 6), destination = (3, 1), deadline = 45
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0297619047619 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 77 / 84
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (6, 4), destination = (4, 6), deadline = 20
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 78 / 85
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (5, 3), destination = (1, 3), deadline = 20
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0290697674419 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 79 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (7, 5), destination = (3, 2), deadline = 35
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0287356321839 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 80 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (4, 5), destination = (8, 3), deadline = 30
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0284090909091 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 81 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (7, 2), destination = (3, 5), deadline = 35
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0280898876404 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 82 / 89
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (6, 1), destination = (1, 2), deadline = 30
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 83 / 90
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (6, 3), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0274725274725 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 84 / 91
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (4, 5), destination = (1, 1), deadline = 35
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0271739130435 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 85 / 92
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (8, 5), destination = (5, 2), deadline = 30
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0268817204301 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 86 / 93
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (4, 1), destination = (1, 4), deadline = 30
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0265957446809 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 87 / 94
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (5, 6), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 88 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (3, 1), destination = (8, 6), deadline = 50
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0260416666667 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 89 / 96
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (4, 2), destination = (1, 3), deadline = 20
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0257731958763 , self.eps_freq:  39.0 

success: 89 / 97
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (2, 1), destination = (8, 4), deadline = 45
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0255102040816 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 90 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (8, 5), destination = (4, 1), deadline = 40
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0252525252525 , self.eps_freq:  40.0 

success: 90 / 99
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (5, 6), destination = (4, 2), deadline = 25
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 91 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99511
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06183
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01408
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01818
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.50993
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01020
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.28901
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.43817
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.87485
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01010
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.02619
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.38900
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03297
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07766
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.20359
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12524
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.86551
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03980
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02010
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.57100
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.33333
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.02415
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07140
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05797
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01124
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03704
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.19876
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08246
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.15134
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.78474
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 3.91522
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.15357
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.39586
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: -0.50000
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 1.81807
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.04778
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.48734
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.40116
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.51191
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.04473
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.51190
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.31741
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.53734
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.50475
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.00306
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: -0.07136
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.53929
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.45315
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: -0.50313
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.52357
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.00817
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 3.84491
--------------------------------------------------------------------------------
updated cells:  52 , self.total_cell_count: 2048 , updated_func_counter: 1575
self.alpha: 0.3 self.gamma: 0.05 , self.epsilon: 0.5 , success: 91  in steps:  16
________________________________________________________________________________
gma = 0.05
eps = 0.2
alp = 0.3
epsilon:  0.2
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (6, 5), destination = (8, 3), deadline = 20
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 1.0 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.0 , action:  None , deadline: 20
annealing now. self.epsilon: 1.0 , action:  left , deadline: 19
annealing now. self.epsilon: 1.0 , action:  left , deadline: 18
annealing now. self.epsilon: 1.0 , action:  None , deadline: 17
annealing now. self.epsilon: 1.0 , action:  right , deadline: 16
annealing now. self.epsilon: 1.0 , action:  None , deadline: 15
annealing now. self.epsilon: 1.0 , action:  None , deadline: 14
annealing now. self.epsilon: 1.0 , action:  right , deadline: 13
annealing now. self.epsilon: 1.0 , action:  left , deadline: 12
annealing now. self.epsilon: 1.0 , action:  None , deadline: 11
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 10
annealing now. self.epsilon: 1.0 , action:  left , deadline: 9
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 8
annealing now. self.epsilon: 1.0 , action:  right , deadline: 7
annealing now. self.epsilon: 1.0 , action:  right , deadline: 6
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 5
annealing now. self.epsilon: 1.0 , action:  left , deadline: 4
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 3
annealing now. self.epsilon: 1.0 , action:  right , deadline: 2
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (7, 6), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.5 , action:  None , deadline: 16
annealing now. self.epsilon: 0.5 , action:  right , deadline: 14
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 12
annealing now. self.epsilon: 0.5 , action:  None , deadline: 10
annealing now. self.epsilon: 0.5 , action:  left , deadline: 8
annealing now. self.epsilon: 0.5 , action:  right , deadline: 6
annealing now. self.epsilon: 0.5 , action:  None , deadline: 4
success: 0 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (8, 4), destination = (3, 6), deadline = 35
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.333333333333 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.333333333333 , action:  forward , deadline: 33
annealing now. self.epsilon: 0.333333333333 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 27
annealing now. self.epsilon: 0.333333333333 , action:  None , deadline: 24
annealing now. self.epsilon: 0.333333333333 , action:  None , deadline: 21
annealing now. self.epsilon: 0.333333333333 , action:  right , deadline: 18
annealing now. self.epsilon: 0.333333333333 , action:  None , deadline: 15
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 12
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 9
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 6
success: 0 / 3
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (7, 6), destination = (8, 2), deadline = 25
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.25 , action:  None , deadline: 16
annealing now. self.epsilon: 0.25 , action:  left , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 1 / 4
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (6, 6), destination = (5, 1), deadline = 30
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.2 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.2 , action:  None , deadline: 30
annealing now. self.epsilon: 0.2 , action:  left , deadline: 25
Environment.act(): Primary agent has reached destination!
success: 2 / 5
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (4, 5), destination = (5, 2), deadline = 20
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 18
annealing now. self.epsilon: 0.166666666667 , action:  left , deadline: 12
success: 2 / 6
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (6, 4), destination = (2, 6), deadline = 30
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.142857142857 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.142857142857 , action:  left , deadline: 28
annealing now. self.epsilon: 0.142857142857 , action:  forward , deadline: 21
annealing now. self.epsilon: 0.142857142857 , action:  left , deadline: 14
success: 2 / 7
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (5, 3), destination = (1, 6), deadline = 35
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  forward , deadline: 32
annealing now. self.epsilon: 0.125 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.125 , action:  right , deadline: 16
success: 2 / 8
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (6, 2), destination = (2, 5), deadline = 35
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.111111111111 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.111111111111 , action:  right , deadline: 27
Environment.act(): Primary agent has reached destination!
success: 3 / 9
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (1, 2), destination = (5, 4), deadline = 30
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  left , deadline: 30
annealing now. self.epsilon: 0.1 , action:  left , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 4 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (6, 6), destination = (2, 3), deadline = 35
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0909090909091 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0909090909091 , action:  forward , deadline: 33
annealing now. self.epsilon: 0.0909090909091 , action:  left , deadline: 22
Environment.act(): Primary agent has reached destination!
success: 5 / 11
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (8, 6), destination = (7, 1), deadline = 30
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  forward , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 6 / 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (4, 3), destination = (2, 6), deadline = 25
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0769230769231 , self.eps_freq:  13.0 

Environment.act(): Primary agent has reached destination!
success: 7 / 13
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (1, 5), destination = (8, 1), deadline = 55
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0714285714286 , action:  forward , deadline: 42
annealing now. self.epsilon: 0.0714285714286 , action:  left , deadline: 28
Environment.act(): Primary agent has reached destination!
success: 8 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (2, 2), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0666666666667 , self.eps_freq:  15.0 

Environment.act(): Primary agent has reached destination!
success: 9 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (7, 1), destination = (4, 6), deadline = 40
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

annealing now. self.epsilon: 0.0625 , action:  None , deadline: 32
Environment.act(): Primary agent has reached destination!
success: 10 / 16
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (1, 1), destination = (3, 4), deadline = 25
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0588235294118 , self.eps_freq:  17.0 

success: 10 / 17
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (1, 2), destination = (6, 6), deadline = 45
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

annealing now. self.epsilon: 0.0555555555556 , action:  None , deadline: 36
Environment.act(): Primary agent has reached destination!
success: 11 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (2, 2), destination = (4, 6), deadline = 30
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0526315789474 , self.eps_freq:  19.0 

success: 11 / 19
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (6, 1), destination = (8, 4), deadline = 25
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.05 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 12 / 20
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (1, 5), destination = (3, 2), deadline = 25
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.047619047619 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 13 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (1, 4), destination = (5, 3), deadline = 25
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 14 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (3, 1), destination = (3, 5), deadline = 20
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0434782608696 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 15 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (8, 3), destination = (1, 2), deadline = 40
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

success: 15 / 24
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (7, 2), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.04 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 16 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (3, 1), destination = (7, 2), deadline = 25
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 17 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (3, 5), destination = (8, 3), deadline = 35
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.037037037037 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 18 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (3, 5), destination = (7, 4), deadline = 25
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 19 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (7, 6), destination = (1, 3), deadline = 45
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0344827586207 , self.eps_freq:  29.0 

success: 19 / 29
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (7, 5), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 20 / 30
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (3, 1), destination = (6, 6), deadline = 40
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0322580645161 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 21 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (8, 2), destination = (3, 4), deadline = 35
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 22 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (5, 3), destination = (1, 5), deadline = 30
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.030303030303 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 23 / 33
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (3, 3), destination = (7, 2), deadline = 25
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

success: 23 / 34
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (8, 5), destination = (2, 6), deadline = 35
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0285714285714 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 35
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (2, 1), destination = (4, 5), deadline = 30
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 36
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (2, 6), destination = (7, 5), deadline = 30
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.027027027027 , self.eps_freq:  37.0 

success: 25 / 37
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (3, 2), destination = (7, 5), deadline = 35
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (8, 2), destination = (1, 5), deadline = 50
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.025641025641 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (7, 2), destination = (3, 4), deadline = 30
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 40
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (4, 4), destination = (8, 4), deadline = 20
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0243902439024 , self.eps_freq:  41.0 

success: 28 / 41
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (6, 4), destination = (8, 2), deadline = 20
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 42
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (6, 4), destination = (3, 1), deadline = 30
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0232558139535 , self.eps_freq:  43.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (6, 5), destination = (8, 1), deadline = 30
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 44
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (2, 6), destination = (5, 3), deadline = 30
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0222222222222 , self.eps_freq:  45.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (6, 3), destination = (1, 4), deadline = 30
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

success: 32 / 46
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (2, 1), destination = (4, 4), deadline = 25
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0212765957447 , self.eps_freq:  47.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 47
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (2, 3), destination = (7, 1), deadline = 35
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (3, 3), destination = (8, 3), deadline = 25
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0204081632653 , self.eps_freq:  50.0 

Environment.act(): Primary agent has reached destination!
success: 35 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (7, 5), destination = (2, 1), deadline = 45
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.02 , self.eps_freq:  50.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (3, 1), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0196078431373 , self.eps_freq:  51.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (2, 2), destination = (8, 2), deadline = 30
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 52
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (8, 5), destination = (4, 3), deadline = 30
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0188679245283 , self.eps_freq:  53.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (3, 4), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

success: 39 / 54
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (3, 5), destination = (7, 2), deadline = 35
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0181818181818 , self.eps_freq:  55.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (5, 6), destination = (3, 1), deadline = 35
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (4, 1), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0175438596491 , self.eps_freq:  57.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 57
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (1, 5), destination = (7, 4), deadline = 35
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 58
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (7, 2), destination = (3, 6), deadline = 40
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0169491525424 , self.eps_freq:  59.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (3, 4), destination = (5, 2), deadline = 20
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (1, 1), destination = (1, 6), deadline = 25
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.016393442623 , self.eps_freq:  61.0 

success: 45 / 61
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (1, 2), destination = (8, 3), deadline = 40
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

success: 45 / 62
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (8, 1), destination = (2, 6), deadline = 55
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.015873015873 , self.eps_freq:  63.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (8, 4), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

Environment.act(): Primary agent has reached destination!
success: 47 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (2, 6), destination = (3, 2), deadline = 25
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0153846153846 , self.eps_freq:  65.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (7, 4), destination = (1, 1), deadline = 45
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

success: 48 / 66
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (2, 2), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0149253731343 , self.eps_freq:  67.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (1, 6), destination = (6, 4), deadline = 35
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (4, 3), destination = (6, 5), deadline = 20
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0144927536232 , self.eps_freq:  69.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (7, 4), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 70
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (2, 3), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0140845070423 , self.eps_freq:  71.0 

success: 52 / 71
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (6, 3), destination = (7, 6), deadline = 20
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

success: 52 / 72
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (5, 4), destination = (1, 1), deadline = 35
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.013698630137 , self.eps_freq:  73.0 

Environment.act(): Primary agent has reached destination!
success: 53 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (4, 2), destination = (7, 4), deadline = 25
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

Environment.act(): Primary agent has reached destination!
success: 54 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (4, 6), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0133333333333 , self.eps_freq:  75.0 

Environment.act(): Primary agent has reached destination!
success: 55 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (7, 5), destination = (1, 4), deadline = 35
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 76
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (4, 1), destination = (5, 5), deadline = 25
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.012987012987 , self.eps_freq:  77.0 

Environment.act(): Primary agent has reached destination!
success: 57 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (6, 1), destination = (8, 4), deadline = 25
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

Environment.act(): Primary agent has reached destination!
success: 58 / 78
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (2, 4), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0126582278481 , self.eps_freq:  79.0 

success: 58 / 79
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (5, 1), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

Environment.act(): Primary agent has reached destination!
success: 59 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (4, 5), destination = (7, 3), deadline = 25
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0123456790123 , self.eps_freq:  81.0 

Environment.act(): Primary agent has reached destination!
success: 60 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (5, 3), destination = (8, 4), deadline = 20
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

success: 60 / 82
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 3), deadline = 40
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0120481927711 , self.eps_freq:  83.0 

Environment.act(): Primary agent has reached destination!
success: 61 / 83
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (7, 2), destination = (8, 6), deadline = 25
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

success: 61 / 84
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (5, 4), destination = (1, 1), deadline = 35
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0117647058824 , self.eps_freq:  85.0 

Environment.act(): Primary agent has reached destination!
success: 62 / 85
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (8, 1), destination = (7, 6), deadline = 30
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

Environment.act(): Primary agent has reached destination!
success: 63 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (2, 6), destination = (3, 2), deadline = 25
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0114942528736 , self.eps_freq:  87.0 

Environment.act(): Primary agent has reached destination!
success: 64 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (1, 3), destination = (7, 4), deadline = 35
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

Environment.act(): Primary agent has reached destination!
success: 65 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (4, 5), destination = (6, 1), deadline = 30
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0112359550562 , self.eps_freq:  89.0 

success: 65 / 89
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (1, 3), destination = (3, 5), deadline = 20
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

success: 65 / 90
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (7, 1), destination = (7, 6), deadline = 25
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.010989010989 , self.eps_freq:  91.0 

Environment.act(): Primary agent has reached destination!
success: 66 / 91
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (6, 1), destination = (2, 4), deadline = 35
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

Environment.act(): Primary agent has reached destination!
success: 67 / 92
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (8, 4), destination = (3, 4), deadline = 25
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.010752688172 , self.eps_freq:  93.0 

Environment.act(): Primary agent has reached destination!
success: 68 / 93
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (1, 4), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

success: 68 / 94
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (4, 1), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0105263157895 , self.eps_freq:  95.0 

Environment.act(): Primary agent has reached destination!
success: 69 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (8, 2), destination = (7, 5), deadline = 20
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

Environment.act(): Primary agent has reached destination!
success: 70 / 96
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (3, 6), destination = (7, 6), deadline = 20
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0103092783505 , self.eps_freq:  97.0 

success: 70 / 97
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (4, 1), destination = (3, 6), deadline = 30
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

Environment.act(): Primary agent has reached destination!
success: 71 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (3, 4), destination = (8, 3), deadline = 30
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.010101010101 , self.eps_freq:  99.0 

Environment.act(): Primary agent has reached destination!
success: 72 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (4, 6), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.01 , self.eps_freq:  100.0 

Environment.act(): Primary agent has reached destination!
success: 73 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99910
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.14063
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01111
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07143
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06136
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01010
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.13424
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.64257
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01124
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.06306
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.20706
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08653
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09873
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04372
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.38129
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03704
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.15136
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.62421
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01124
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01124
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00664
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01923
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01515
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07258
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01587
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01724
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.29143
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.74399
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.03567
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.16146
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.29345
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.20414
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.11225
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.32453
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01205
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.77347
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00342
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01124
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.25000
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01695
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.03084
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.50000
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03334
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.00003
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.16724
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.28571
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.98384
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.53855
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.24838
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.22121
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.84800
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.87097
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.51418
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.29346
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.07143
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: -0.14286
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.54185
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.97917
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.54312
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.99595
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 4.49222
--------------------------------------------------------------------------------
updated cells:  61 , self.total_cell_count: 2048 , updated_func_counter: 2001
self.alpha: 0.3 self.gamma: 0.05 , self.epsilon: 0.2 , success: 73  in steps:  14
________________________________________________________________________________
gma = 0.05
eps = 0.1
alp = 0.3
epsilon:  0.1
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (4, 1), destination = (1, 6), deadline = 40
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  None , deadline: 40
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 38
annealing now. self.epsilon: 0.5 , action:  left , deadline: 36
annealing now. self.epsilon: 0.5 , action:  None , deadline: 34
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 32
annealing now. self.epsilon: 0.5 , action:  right , deadline: 30
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 28
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 26
annealing now. self.epsilon: 0.5 , action:  right , deadline: 24
annealing now. self.epsilon: 0.5 , action:  right , deadline: 22
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.5 , action:  right , deadline: 18
annealing now. self.epsilon: 0.5 , action:  right , deadline: 16
annealing now. self.epsilon: 0.5 , action:  right , deadline: 14
annealing now. self.epsilon: 0.5 , action:  right , deadline: 12
annealing now. self.epsilon: 0.5 , action:  right , deadline: 10
annealing now. self.epsilon: 0.5 , action:  None , deadline: 8
annealing now. self.epsilon: 0.5 , action:  right , deadline: 6
annealing now. self.epsilon: 0.5 , action:  None , deadline: 4
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (7, 4), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  None , deadline: 20
annealing now. self.epsilon: 0.25 , action:  left , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 1 / 2
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (5, 3), destination = (1, 5), deadline = 30
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 30
annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 24
annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 18
annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 12
success: 1 / 3
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (3, 4), destination = (5, 6), deadline = 20
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  left , deadline: 16
success: 1 / 4
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (2, 5), destination = (4, 1), deadline = 30
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  None , deadline: 30
annealing now. self.epsilon: 0.1 , action:  forward , deadline: 20
success: 1 / 5
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (8, 5), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

Environment.act(): Primary agent has reached destination!
success: 2 / 6
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (5, 3), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 3 / 7
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (3, 3), destination = (1, 5), deadline = 20
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

success: 3 / 8
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (5, 4), destination = (2, 5), deadline = 20
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 4 / 9
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (8, 5), destination = (5, 3), deadline = 25
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.05 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 5 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (6, 6), destination = (8, 1), deadline = 35
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

success: 5 / 11
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (8, 6), destination = (4, 2), deadline = 40
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

success: 5 / 12
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (3, 1), destination = (2, 6), deadline = 30
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

success: 5 / 13
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (6, 5), destination = (3, 4), deadline = 20
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 6 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (6, 6), destination = (5, 1), deadline = 30
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 7 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (1, 6), destination = (2, 2), deadline = 25
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

success: 7 / 16
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (6, 3), destination = (2, 6), deadline = 35
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 8 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (7, 1), destination = (7, 6), deadline = 25
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 9 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (5, 3), destination = (8, 4), deadline = 20
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 10 / 19
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (4, 2), destination = (7, 1), deadline = 20
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.025 , self.eps_freq:  40.0 

success: 10 / 20
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (4, 5), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

Environment.act(): Primary agent has reached destination!
success: 11 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (6, 1), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

success: 11 / 22
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (4, 3), destination = (1, 1), deadline = 25
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

Environment.act(): Primary agent has reached destination!
success: 12 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (4, 1), destination = (3, 4), deadline = 20
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

success: 12 / 24
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (5, 4), destination = (2, 3), deadline = 20
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.02 , self.eps_freq:  50.0 

Environment.act(): Primary agent has reached destination!
success: 13 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (1, 4), destination = (8, 1), deadline = 50
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

success: 13 / 26
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (8, 4), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

success: 13 / 27
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (3, 4), destination = (7, 3), deadline = 25
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

Environment.act(): Primary agent has reached destination!
success: 14 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (3, 1), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

Environment.act(): Primary agent has reached destination!
success: 15 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (7, 1), destination = (3, 5), deadline = 40
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

success: 15 / 30
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (4, 6), destination = (8, 6), deadline = 20
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

Environment.act(): Primary agent has reached destination!
success: 16 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (7, 6), destination = (4, 3), deadline = 30
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

success: 16 / 32
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (4, 6), destination = (8, 3), deadline = 35
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

success: 16 / 33
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (3, 4), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

Environment.act(): Primary agent has reached destination!
success: 17 / 34
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (6, 6), destination = (7, 2), deadline = 25
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

success: 17 / 35
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (1, 4), destination = (5, 6), deadline = 30
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

Environment.act(): Primary agent has reached destination!
success: 18 / 36
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (1, 3), destination = (3, 6), deadline = 25
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

Environment.act(): Primary agent has reached destination!
success: 19 / 37
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (4, 1), destination = (8, 5), deadline = 40
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

Environment.act(): Primary agent has reached destination!
success: 20 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (1, 2), destination = (6, 6), deadline = 45
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

success: 20 / 39
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (8, 3), destination = (5, 6), deadline = 30
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

success: 20 / 40
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (8, 6), destination = (1, 3), deadline = 50
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

Environment.act(): Primary agent has reached destination!
success: 21 / 41
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (2, 1), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

success: 21 / 42
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (2, 2), destination = (8, 3), deadline = 35
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

success: 21 / 43
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (4, 5), destination = (8, 5), deadline = 20
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

Environment.act(): Primary agent has reached destination!
success: 22 / 44
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (5, 3), destination = (3, 5), deadline = 20
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

success: 22 / 45
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (1, 5), destination = (8, 6), deadline = 40
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

success: 22 / 46
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (8, 2), destination = (4, 5), deadline = 35
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

Environment.act(): Primary agent has reached destination!
success: 23 / 47
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (1, 3), destination = (8, 6), deadline = 50
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (5, 4), destination = (2, 1), deadline = 30
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

success: 24 / 49
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (3, 3), destination = (7, 4), deadline = 25
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.01 , self.eps_freq:  100.0 

success: 24 / 50
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (7, 4), destination = (1, 1), deadline = 45
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.00980392156863 , self.eps_freq:  102.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (1, 4), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.00961538461538 , self.eps_freq:  104.0 

success: 25 / 52
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (3, 6), destination = (6, 3), deadline = 30
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.00943396226415 , self.eps_freq:  106.0 

success: 25 / 53
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (3, 5), destination = (3, 1), deadline = 20
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.00925925925926 , self.eps_freq:  108.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (7, 3), destination = (3, 3), deadline = 20
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.00909090909091 , self.eps_freq:  110.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (4, 4), destination = (7, 5), deadline = 20
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.00892857142857 , self.eps_freq:  112.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (7, 5), destination = (5, 1), deadline = 30
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.00877192982456 , self.eps_freq:  114.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 57
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (4, 2), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.00862068965517 , self.eps_freq:  116.0 

success: 29 / 58
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (7, 6), destination = (1, 2), deadline = 50
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.00847457627119 , self.eps_freq:  118.0 

success: 29 / 59
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (7, 6), destination = (2, 5), deadline = 30
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.00833333333333 , self.eps_freq:  120.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (8, 6), destination = (2, 6), deadline = 30
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.00819672131148 , self.eps_freq:  122.0 

success: 30 / 61
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (4, 1), destination = (1, 4), deadline = 30
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.00806451612903 , self.eps_freq:  124.0 

success: 30 / 62
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (1, 2), destination = (4, 6), deadline = 35
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.00793650793651 , self.eps_freq:  126.0 

success: 30 / 63
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (3, 1), destination = (7, 1), deadline = 20
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0078125 , self.eps_freq:  128.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (5, 2), destination = (1, 6), deadline = 40
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.00769230769231 , self.eps_freq:  130.0 

success: 31 / 65
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (2, 5), destination = (7, 6), deadline = 30
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.00757575757576 , self.eps_freq:  132.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (2, 4), destination = (7, 1), deadline = 40
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.00746268656716 , self.eps_freq:  134.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (8, 6), destination = (3, 6), deadline = 25
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.00735294117647 , self.eps_freq:  136.0 

success: 33 / 68
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (4, 2), destination = (8, 1), deadline = 25
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00724637681159 , self.eps_freq:  138.0 

success: 33 / 69
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (4, 1), destination = (7, 6), deadline = 40
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.00714285714286 , self.eps_freq:  140.0 

success: 33 / 70
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (5, 6), destination = (1, 6), deadline = 20
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.00704225352113 , self.eps_freq:  142.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (8, 2), destination = (3, 3), deadline = 30
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.00694444444444 , self.eps_freq:  144.0 

Environment.act(): Primary agent has reached destination!
success: 35 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (2, 2), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.00684931506849 , self.eps_freq:  146.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (2, 3), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.00675675675676 , self.eps_freq:  148.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (4, 6), destination = (1, 5), deadline = 20
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.00666666666667 , self.eps_freq:  150.0 

success: 37 / 75
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (2, 4), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.00657894736842 , self.eps_freq:  152.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 76
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (4, 4), destination = (8, 6), deadline = 30
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.00649350649351 , self.eps_freq:  154.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (4, 1), destination = (2, 4), deadline = 25
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.00641025641026 , self.eps_freq:  156.0 

success: 39 / 78
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (7, 5), destination = (8, 2), deadline = 20
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.00632911392405 , self.eps_freq:  158.0 

success: 39 / 79
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (4, 4), destination = (8, 1), deadline = 35
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00625 , self.eps_freq:  160.0 

success: 39 / 80
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (6, 4), destination = (3, 3), deadline = 20
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.00617283950617 , self.eps_freq:  162.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (5, 3), destination = (8, 4), deadline = 20
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.00609756097561 , self.eps_freq:  164.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (8, 6), destination = (4, 1), deadline = 45
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.00602409638554 , self.eps_freq:  166.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 83
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (7, 1), destination = (3, 4), deadline = 35
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.00595238095238 , self.eps_freq:  168.0 

success: 42 / 84
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (8, 6), destination = (3, 5), deadline = 30
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.00588235294118 , self.eps_freq:  170.0 

success: 42 / 85
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (6, 2), destination = (2, 6), deadline = 40
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.00581395348837 , self.eps_freq:  172.0 

success: 42 / 86
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (5, 3), destination = (6, 6), deadline = 20
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.00574712643678 , self.eps_freq:  174.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (1, 3), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.00568181818182 , self.eps_freq:  176.0 

success: 43 / 88
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (8, 6), destination = (6, 4), deadline = 20
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.00561797752809 , self.eps_freq:  178.0 

success: 43 / 89
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (2, 5), destination = (6, 1), deadline = 40
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.00555555555556 , self.eps_freq:  180.0 

success: 43 / 90
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (3, 4), destination = (8, 3), deadline = 30
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.00549450549451 , self.eps_freq:  182.0 

success: 43 / 91
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (7, 2), destination = (3, 6), deadline = 40
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0054347826087 , self.eps_freq:  184.0 

success: 43 / 92
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (5, 2), destination = (2, 1), deadline = 20
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.00537634408602 , self.eps_freq:  186.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 93
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (1, 3), destination = (7, 1), deadline = 40
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.00531914893617 , self.eps_freq:  188.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 94
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (7, 5), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.00526315789474 , self.eps_freq:  190.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (3, 6), destination = (6, 1), deadline = 40
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.00520833333333 , self.eps_freq:  192.0 

success: 46 / 96
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (6, 5), destination = (3, 6), deadline = 20
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.00515463917526 , self.eps_freq:  194.0 

Environment.act(): Primary agent has reached destination!
success: 47 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (8, 4), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.00510204081633 , self.eps_freq:  197.0 

success: 47 / 98
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (8, 5), destination = (3, 2), deadline = 40
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.00505050505051 , self.eps_freq:  198.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (6, 3), destination = (1, 4), deadline = 30
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.005 , self.eps_freq:  200.0 

success: 48 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.01291
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02555
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01562
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.20045
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10688
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03794
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.71041
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01587
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03800
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.02516
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.21815
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.18922
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.72110
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10850
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.18708
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05173
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01515
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.75471
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00842
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04167
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.00000
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.21148
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.75027
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.05079
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06557
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.14936
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03738
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01515
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.26252
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01149
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03333
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.65276
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.01620
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01124
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.34445
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.33333
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07686
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05813
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10437
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08333
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08639
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.47050
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08189
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.89793
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.31372
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02312
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 1.00350
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01124
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04545
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02456
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 3.30553
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.99984
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.50000
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.51585
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.51057
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.50038
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.42036
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.59464
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.52500
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.49047
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.50000
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.24517
--------------------------------------------------------------------------------
updated cells:  62 , self.total_cell_count: 2048 , updated_func_counter: 2271
self.alpha: 0.3 self.gamma: 0.05 , self.epsilon: 0.1 , success: 48  in steps:  0
________________________________________________________________________________
Environment.reset(): Primary agent could not reach destination within deadline!
gma = 0.1
eps = 0.5
alp = 0.3
epsilon:  0.5
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 3), deadline = 40
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 2.5 , self.eps_freq:  1.0 

annealing now. self.epsilon: 2.5 , action:  right , deadline: 40
annealing now. self.epsilon: 2.5 , action:  left , deadline: 39
annealing now. self.epsilon: 2.5 , action:  left , deadline: 38
annealing now. self.epsilon: 2.5 , action:  None , deadline: 37
annealing now. self.epsilon: 2.5 , action:  left , deadline: 36
annealing now. self.epsilon: 2.5 , action:  right , deadline: 35
annealing now. self.epsilon: 2.5 , action:  right , deadline: 34
annealing now. self.epsilon: 2.5 , action:  None , deadline: 33
annealing now. self.epsilon: 2.5 , action:  right , deadline: 32
annealing now. self.epsilon: 2.5 , action:  left , deadline: 31
annealing now. self.epsilon: 2.5 , action:  left , deadline: 30
annealing now. self.epsilon: 2.5 , action:  left , deadline: 29
annealing now. self.epsilon: 2.5 , action:  left , deadline: 28
annealing now. self.epsilon: 2.5 , action:  left , deadline: 27
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 26
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 25
annealing now. self.epsilon: 2.5 , action:  right , deadline: 24
annealing now. self.epsilon: 2.5 , action:  left , deadline: 23
annealing now. self.epsilon: 2.5 , action:  right , deadline: 22
annealing now. self.epsilon: 2.5 , action:  None , deadline: 21
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 20
annealing now. self.epsilon: 2.5 , action:  left , deadline: 19
annealing now. self.epsilon: 2.5 , action:  None , deadline: 18
annealing now. self.epsilon: 2.5 , action:  right , deadline: 17
annealing now. self.epsilon: 2.5 , action:  left , deadline: 16
annealing now. self.epsilon: 2.5 , action:  None , deadline: 15
annealing now. self.epsilon: 2.5 , action:  None , deadline: 14
annealing now. self.epsilon: 2.5 , action:  left , deadline: 13
annealing now. self.epsilon: 2.5 , action:  None , deadline: 12
annealing now. self.epsilon: 2.5 , action:  right , deadline: 11
annealing now. self.epsilon: 2.5 , action:  left , deadline: 10
annealing now. self.epsilon: 2.5 , action:  right , deadline: 9
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 8
annealing now. self.epsilon: 2.5 , action:  left , deadline: 7
annealing now. self.epsilon: 2.5 , action:  forward , deadline: 6
Environment.act(): Primary agent has reached destination!
success: 1 / 1
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (8, 6), destination = (4, 4), deadline = 30
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 1.25 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.25 , action:  right , deadline: 30
annealing now. self.epsilon: 1.25 , action:  right , deadline: 29
annealing now. self.epsilon: 1.25 , action:  right , deadline: 28
annealing now. self.epsilon: 1.25 , action:  right , deadline: 27
annealing now. self.epsilon: 1.25 , action:  right , deadline: 26
annealing now. self.epsilon: 1.25 , action:  None , deadline: 25
annealing now. self.epsilon: 1.25 , action:  None , deadline: 24
annealing now. self.epsilon: 1.25 , action:  None , deadline: 23
annealing now. self.epsilon: 1.25 , action:  right , deadline: 22
annealing now. self.epsilon: 1.25 , action:  left , deadline: 21
annealing now. self.epsilon: 1.25 , action:  right , deadline: 20
annealing now. self.epsilon: 1.25 , action:  right , deadline: 19
annealing now. self.epsilon: 1.25 , action:  right , deadline: 18
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 17
annealing now. self.epsilon: 1.25 , action:  None , deadline: 16
annealing now. self.epsilon: 1.25 , action:  right , deadline: 15
annealing now. self.epsilon: 1.25 , action:  None , deadline: 14
annealing now. self.epsilon: 1.25 , action:  right , deadline: 13
annealing now. self.epsilon: 1.25 , action:  left , deadline: 12
annealing now. self.epsilon: 1.25 , action:  None , deadline: 11
annealing now. self.epsilon: 1.25 , action:  left , deadline: 10
annealing now. self.epsilon: 1.25 , action:  right , deadline: 9
annealing now. self.epsilon: 1.25 , action:  None , deadline: 8
annealing now. self.epsilon: 1.25 , action:  right , deadline: 7
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 6
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 5
annealing now. self.epsilon: 1.25 , action:  forward , deadline: 4
annealing now. self.epsilon: 1.25 , action:  None , deadline: 3
annealing now. self.epsilon: 1.25 , action:  left , deadline: 2
success: 1 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (7, 2), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.833333333333 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 20
annealing now. self.epsilon: 0.833333333333 , action:  forward , deadline: 18
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 16
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 14
annealing now. self.epsilon: 0.833333333333 , action:  right , deadline: 12
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 10
annealing now. self.epsilon: 0.833333333333 , action:  None , deadline: 8
Environment.act(): Primary agent has reached destination!
success: 2 / 3
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (6, 5), destination = (1, 3), deadline = 35
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.625 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.625 , action:  None , deadline: 34
annealing now. self.epsilon: 0.625 , action:  right , deadline: 32
annealing now. self.epsilon: 0.625 , action:  right , deadline: 30
annealing now. self.epsilon: 0.625 , action:  right , deadline: 28
annealing now. self.epsilon: 0.625 , action:  None , deadline: 26
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.625 , action:  None , deadline: 22
annealing now. self.epsilon: 0.625 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.625 , action:  None , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 3 / 4
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (2, 1), destination = (7, 1), deadline = 25
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  None , deadline: 24
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 22
annealing now. self.epsilon: 0.5 , action:  None , deadline: 20
annealing now. self.epsilon: 0.5 , action:  left , deadline: 18
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.5 , action:  right , deadline: 14
Environment.act(): Primary agent has reached destination!
success: 4 / 5
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (7, 2), destination = (3, 1), deadline = 25
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.416666666667 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.416666666667 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.416666666667 , action:  right , deadline: 21
annealing now. self.epsilon: 0.416666666667 , action:  right , deadline: 18
annealing now. self.epsilon: 0.416666666667 , action:  right , deadline: 15
annealing now. self.epsilon: 0.416666666667 , action:  left , deadline: 12
annealing now. self.epsilon: 0.416666666667 , action:  left , deadline: 9
annealing now. self.epsilon: 0.416666666667 , action:  None , deadline: 6
Environment.act(): Primary agent has reached destination!
success: 5 / 6
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (2, 5), destination = (4, 2), deadline = 25
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.357142857143 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 24
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 21
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 18
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 15
annealing now. self.epsilon: 0.357142857143 , action:  left , deadline: 12
annealing now. self.epsilon: 0.357142857143 , action:  None , deadline: 9
annealing now. self.epsilon: 0.357142857143 , action:  right , deadline: 6
success: 5 / 7
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (4, 1), destination = (2, 4), deadline = 25
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.3125 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.3125 , action:  right , deadline: 24
annealing now. self.epsilon: 0.3125 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.3125 , action:  forward , deadline: 16
annealing now. self.epsilon: 0.3125 , action:  right , deadline: 12
annealing now. self.epsilon: 0.3125 , action:  None , deadline: 8
success: 5 / 8
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (5, 6), destination = (8, 1), deadline = 40
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.277777777778 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.277777777778 , action:  forward , deadline: 40
annealing now. self.epsilon: 0.277777777778 , action:  left , deadline: 36
annealing now. self.epsilon: 0.277777777778 , action:  left , deadline: 32
annealing now. self.epsilon: 0.277777777778 , action:  forward , deadline: 28
annealing now. self.epsilon: 0.277777777778 , action:  right , deadline: 24
annealing now. self.epsilon: 0.277777777778 , action:  right , deadline: 20
annealing now. self.epsilon: 0.277777777778 , action:  None , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 6 / 9
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (7, 3), destination = (2, 3), deadline = 25
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 7 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (2, 4), destination = (3, 1), deadline = 20
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.227272727273 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.227272727273 , action:  None , deadline: 20
annealing now. self.epsilon: 0.227272727273 , action:  left , deadline: 15
annealing now. self.epsilon: 0.227272727273 , action:  right , deadline: 10
Environment.act(): Primary agent has reached destination!
success: 8 / 11
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (3, 3), destination = (7, 4), deadline = 25
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.208333333333 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.208333333333 , action:  None , deadline: 25
annealing now. self.epsilon: 0.208333333333 , action:  left , deadline: 20
annealing now. self.epsilon: 0.208333333333 , action:  right , deadline: 15
Environment.act(): Primary agent has reached destination!
success: 9 / 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (6, 5), destination = (7, 2), deadline = 20
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.192307692308 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.192307692308 , action:  left , deadline: 18
annealing now. self.epsilon: 0.192307692308 , action:  forward , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 10 / 13
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (4, 4), destination = (1, 3), deadline = 20
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.178571428571 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.178571428571 , action:  left , deadline: 18
annealing now. self.epsilon: 0.178571428571 , action:  left , deadline: 12
Environment.act(): Primary agent has reached destination!
success: 11 / 14
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (5, 1), destination = (7, 5), deadline = 30
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 30
annealing now. self.epsilon: 0.166666666667 , action:  None , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 12 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (3, 3), destination = (5, 1), deadline = 20
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.15625 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.15625 , action:  None , deadline: 14
Environment.act(): Primary agent has reached destination!
success: 13 / 16
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (1, 6), destination = (4, 2), deadline = 35
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.147058823529 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.147058823529 , action:  left , deadline: 35
annealing now. self.epsilon: 0.147058823529 , action:  left , deadline: 28
annealing now. self.epsilon: 0.147058823529 , action:  None , deadline: 21
Environment.act(): Primary agent has reached destination!
success: 14 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (2, 6), destination = (6, 2), deadline = 40
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.138888888889 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.138888888889 , action:  right , deadline: 40
annealing now. self.epsilon: 0.138888888889 , action:  left , deadline: 32
annealing now. self.epsilon: 0.138888888889 , action:  forward , deadline: 24
annealing now. self.epsilon: 0.138888888889 , action:  left , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 15 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (4, 6), destination = (3, 2), deadline = 25
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.131578947368 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.131578947368 , action:  forward , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 16 / 19
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (5, 6), destination = (6, 1), deadline = 30
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  forward , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 17 / 20
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (4, 1), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.119047619048 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.119047619048 , action:  None , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 18 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (1, 2), destination = (7, 2), deadline = 30
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.113636363636 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.113636363636 , action:  right , deadline: 27
Environment.act(): Primary agent has reached destination!
success: 19 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (8, 6), destination = (5, 3), deadline = 30
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.108695652174 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.108695652174 , action:  left , deadline: 30
annealing now. self.epsilon: 0.108695652174 , action:  forward , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 20 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (8, 3), destination = (3, 5), deadline = 35
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.104166666667 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.104166666667 , action:  forward , deadline: 30
annealing now. self.epsilon: 0.104166666667 , action:  right , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 21 / 24
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (8, 2), destination = (7, 5), deadline = 20
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  right , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 22 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (7, 5), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0961538461538 , self.eps_freq:  11.0 

Environment.act(): Primary agent has reached destination!
success: 23 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (2, 4), destination = (8, 6), deadline = 40
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0925925925926 , self.eps_freq:  11.0 

annealing now. self.epsilon: 0.0925925925926 , action:  forward , deadline: 33
Environment.act(): Primary agent has reached destination!
success: 24 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (7, 5), destination = (8, 2), deadline = 20
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0892857142857 , self.eps_freq:  12.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 2), deadline = 45
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0862068965517 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0862068965517 , action:  None , deadline: 36
annealing now. self.epsilon: 0.0862068965517 , action:  left , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 26 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (4, 6), destination = (6, 1), deadline = 35
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 30
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (7, 6), destination = (1, 3), deadline = 45
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0806451612903 , self.eps_freq:  13.0 

annealing now. self.epsilon: 0.0806451612903 , action:  None , deadline: 39
annealing now. self.epsilon: 0.0806451612903 , action:  left , deadline: 26
Environment.act(): Primary agent has reached destination!
success: 28 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (6, 1), destination = (1, 5), deadline = 45
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.078125 , self.eps_freq:  13.0 

annealing now. self.epsilon: 0.078125 , action:  None , deadline: 39
annealing now. self.epsilon: 0.078125 , action:  forward , deadline: 26
Environment.act(): Primary agent has reached destination!
success: 29 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (8, 4), destination = (3, 2), deadline = 35
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0757575757576 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0757575757576 , action:  forward , deadline: 28
Environment.act(): Primary agent has reached destination!
success: 30 / 33
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (3, 5), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0735294117647 , self.eps_freq:  14.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 34
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (2, 4), destination = (5, 1), deadline = 30
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0714285714286 , action:  forward , deadline: 28
Environment.act(): Primary agent has reached destination!
success: 32 / 35
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (1, 2), destination = (5, 5), deadline = 35
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0694444444444 , self.eps_freq:  15.0 

annealing now. self.epsilon: 0.0694444444444 , action:  None , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 33 / 36
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (8, 2), destination = (3, 6), deadline = 45
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0675675675676 , self.eps_freq:  15.0 

annealing now. self.epsilon: 0.0675675675676 , action:  left , deadline: 45
annealing now. self.epsilon: 0.0675675675676 , action:  right , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 34 / 37
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (8, 3), destination = (5, 2), deadline = 20
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0657894736842 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 35 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (8, 3), destination = (3, 3), deadline = 25
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0641025641026 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (6, 1), destination = (4, 5), deadline = 30
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 40
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (8, 5), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0609756097561 , self.eps_freq:  17.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 41
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (4, 5), destination = (1, 2), deadline = 30
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0595238095238 , self.eps_freq:  17.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 42
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (7, 3), destination = (1, 2), deadline = 35
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0581395348837 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (6, 2), destination = (4, 6), deadline = 30
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0568181818182 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 44
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (1, 6), destination = (7, 5), deadline = 35
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (3, 1), destination = (7, 2), deadline = 25
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.054347826087 , self.eps_freq:  19.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 46
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (3, 4), destination = (1, 6), deadline = 20
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0531914893617 , self.eps_freq:  19.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 47
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (1, 1), destination = (2, 4), deadline = 20
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0520833333333 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (7, 4), destination = (3, 5), deadline = 25
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0510204081633 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (3, 1), destination = (5, 6), deadline = 35
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.05 , self.eps_freq:  20.0 

Environment.act(): Primary agent has reached destination!
success: 47 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (8, 3), destination = (2, 1), deadline = 40
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0490196078431 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (7, 3), destination = (1, 4), deadline = 35
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0480769230769 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 52
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (7, 4), destination = (3, 6), deadline = 30
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0471698113208 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (3, 3), destination = (2, 6), deadline = 20
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0462962962963 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (4, 4), destination = (8, 1), deadline = 35
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (2, 3), destination = (5, 6), deadline = 30
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0446428571429 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 53 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (2, 5), destination = (3, 1), deadline = 25
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0438596491228 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 54 / 57
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (2, 3), destination = (5, 6), deadline = 30
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0431034482759 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 55 / 58
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (7, 2), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0423728813559 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (1, 5), destination = (3, 3), deadline = 20
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 57 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (3, 6), destination = (2, 3), deadline = 20
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0409836065574 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 58 / 61
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (6, 5), destination = (2, 2), deadline = 35
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0403225806452 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 59 / 62
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (4, 3), destination = (7, 4), deadline = 20
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0396825396825 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 60 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (5, 2), destination = (2, 5), deadline = 30
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0390625 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 61 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (8, 6), destination = (7, 1), deadline = 30
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 62 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (2, 5), destination = (7, 1), deadline = 45
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0378787878788 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 63 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (1, 1), destination = (5, 4), deadline = 35
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.0373134328358 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 64 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (1, 4), destination = (3, 2), deadline = 20
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0367647058824 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 65 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (1, 1), destination = (6, 4), deadline = 40
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.036231884058 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 66 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (1, 5), destination = (1, 1), deadline = 20
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

success: 66 / 70
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (2, 3), destination = (4, 1), deadline = 20
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0352112676056 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 67 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (1, 4), destination = (8, 4), deadline = 35
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0347222222222 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 68 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (2, 3), destination = (8, 3), deadline = 30
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0342465753425 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 69 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (4, 4), destination = (6, 2), deadline = 20
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0337837837838 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 70 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (8, 6), destination = (1, 4), deadline = 45
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 71 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (5, 5), destination = (1, 5), deadline = 20
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0328947368421 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 72 / 76
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (6, 2), destination = (1, 4), deadline = 35
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0324675324675 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 73 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (3, 4), destination = (7, 4), deadline = 20
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0320512820513 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 74 / 78
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (5, 5), destination = (2, 3), deadline = 25
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0316455696203 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 75 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (6, 5), destination = (3, 3), deadline = 25
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 76 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (7, 4), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0308641975309 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 77 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (5, 3), destination = (1, 1), deadline = 30
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.030487804878 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 78 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (1, 4), destination = (3, 6), deadline = 20
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0301204819277 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 79 / 83
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (4, 6), destination = (6, 1), deadline = 35
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0297619047619 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 80 / 84
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (1, 5), destination = (8, 2), deadline = 50
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 81 / 85
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (2, 1), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0290697674419 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 82 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (4, 1), destination = (3, 6), deadline = 30
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0287356321839 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 83 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (5, 3), destination = (1, 6), deadline = 35
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0284090909091 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 84 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (1, 4), destination = (4, 1), deadline = 30
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0280898876404 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 85 / 89
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (4, 3), destination = (8, 6), deadline = 35
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 86 / 90
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (4, 2), destination = (2, 6), deadline = 30
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0274725274725 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 87 / 91
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (7, 3), destination = (3, 3), deadline = 20
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.0271739130435 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 88 / 92
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (3, 1), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0268817204301 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 89 / 93
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (4, 6), destination = (1, 4), deadline = 25
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0265957446809 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 90 / 94
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (4, 1), destination = (8, 4), deadline = 35
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 91 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (8, 1), destination = (3, 4), deadline = 40
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0260416666667 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 92 / 96
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (6, 5), destination = (2, 2), deadline = 35
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0257731958763 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 93 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (7, 2), destination = (3, 4), deadline = 30
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0255102040816 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 94 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (1, 1), destination = (7, 2), deadline = 35
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0252525252525 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 95 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (7, 4), destination = (2, 6), deadline = 35
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 96 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.99512
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05058
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01235
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01754
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06898
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02885
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01000
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.39717
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.15245
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.57962
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.34713
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01429
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.17612
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.19506
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.16217
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07044
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07020
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.03673
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06250
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.63171
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07692
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05334
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02799
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02703
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.02585
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.50000
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04033
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05174
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.07466
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.12500
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01471
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.75958
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 4.07453
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.21149
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.94852
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.51436
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.96193
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.55593
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.06797
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.56289
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.55854
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.52324
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 3.00009
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.37258
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 1.00902
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.49750
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.99376
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.57580
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.06595
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.93520
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.51525
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 3.04130
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 2.02695
--------------------------------------------------------------------------------
updated cells:  53 , self.total_cell_count: 2048 , updated_func_counter: 1548
self.alpha: 0.3 self.gamma: 0.1 , self.epsilon: 0.5 , success: 96  in steps:  17
________________________________________________________________________________
gma = 0.1
eps = 0.2
alp = 0.3
epsilon:  0.2
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (1, 1), destination = (7, 4), deadline = 45
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 1.0 , self.eps_freq:  1.0 

annealing now. self.epsilon: 1.0 , action:  None , deadline: 45
annealing now. self.epsilon: 1.0 , action:  left , deadline: 44
annealing now. self.epsilon: 1.0 , action:  right , deadline: 43
annealing now. self.epsilon: 1.0 , action:  None , deadline: 42
annealing now. self.epsilon: 1.0 , action:  right , deadline: 41
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 40
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 39
annealing now. self.epsilon: 1.0 , action:  left , deadline: 38
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 37
annealing now. self.epsilon: 1.0 , action:  right , deadline: 36
annealing now. self.epsilon: 1.0 , action:  right , deadline: 35
annealing now. self.epsilon: 1.0 , action:  None , deadline: 34
annealing now. self.epsilon: 1.0 , action:  right , deadline: 33
annealing now. self.epsilon: 1.0 , action:  left , deadline: 32
annealing now. self.epsilon: 1.0 , action:  left , deadline: 31
annealing now. self.epsilon: 1.0 , action:  left , deadline: 30
annealing now. self.epsilon: 1.0 , action:  None , deadline: 29
annealing now. self.epsilon: 1.0 , action:  None , deadline: 28
annealing now. self.epsilon: 1.0 , action:  None , deadline: 27
annealing now. self.epsilon: 1.0 , action:  None , deadline: 26
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 25
annealing now. self.epsilon: 1.0 , action:  None , deadline: 24
annealing now. self.epsilon: 1.0 , action:  left , deadline: 23
annealing now. self.epsilon: 1.0 , action:  None , deadline: 22
annealing now. self.epsilon: 1.0 , action:  left , deadline: 21
annealing now. self.epsilon: 1.0 , action:  left , deadline: 20
annealing now. self.epsilon: 1.0 , action:  None , deadline: 19
annealing now. self.epsilon: 1.0 , action:  None , deadline: 18
annealing now. self.epsilon: 1.0 , action:  right , deadline: 17
annealing now. self.epsilon: 1.0 , action:  right , deadline: 16
annealing now. self.epsilon: 1.0 , action:  None , deadline: 15
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 14
annealing now. self.epsilon: 1.0 , action:  right , deadline: 13
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 12
annealing now. self.epsilon: 1.0 , action:  None , deadline: 11
annealing now. self.epsilon: 1.0 , action:  right , deadline: 10
annealing now. self.epsilon: 1.0 , action:  left , deadline: 9
annealing now. self.epsilon: 1.0 , action:  right , deadline: 8
annealing now. self.epsilon: 1.0 , action:  left , deadline: 7
annealing now. self.epsilon: 1.0 , action:  right , deadline: 6
annealing now. self.epsilon: 1.0 , action:  None , deadline: 5
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 4
annealing now. self.epsilon: 1.0 , action:  forward , deadline: 3
annealing now. self.epsilon: 1.0 , action:  left , deadline: 2
success: 0 / 1
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (4, 4), destination = (8, 5), deadline = 25
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  None , deadline: 24
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 22
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.5 , action:  right , deadline: 18
annealing now. self.epsilon: 0.5 , action:  right , deadline: 16
annealing now. self.epsilon: 0.5 , action:  right , deadline: 14
annealing now. self.epsilon: 0.5 , action:  left , deadline: 12
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 10
Environment.act(): Primary agent has reached destination!
success: 1 / 2
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (2, 2), destination = (8, 3), deadline = 35
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.333333333333 , self.eps_freq:  3.0 

annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 33
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 30
annealing now. self.epsilon: 0.333333333333 , action:  right , deadline: 27
annealing now. self.epsilon: 0.333333333333 , action:  right , deadline: 24
annealing now. self.epsilon: 0.333333333333 , action:  forward , deadline: 21
annealing now. self.epsilon: 0.333333333333 , action:  None , deadline: 18
annealing now. self.epsilon: 0.333333333333 , action:  left , deadline: 15
annealing now. self.epsilon: 0.333333333333 , action:  forward , deadline: 12
annealing now. self.epsilon: 0.333333333333 , action:  right , deadline: 9
annealing now. self.epsilon: 0.333333333333 , action:  right , deadline: 6
success: 1 / 3
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (8, 6), destination = (2, 1), deadline = 55
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  right , deadline: 52
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 48
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 44
annealing now. self.epsilon: 0.25 , action:  None , deadline: 40
annealing now. self.epsilon: 0.25 , action:  None , deadline: 36
annealing now. self.epsilon: 0.25 , action:  None , deadline: 32
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 28
Environment.act(): Primary agent has reached destination!
success: 2 / 4
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (3, 2), destination = (5, 5), deadline = 25
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.2 , self.eps_freq:  5.0 

annealing now. self.epsilon: 0.2 , action:  left , deadline: 25
annealing now. self.epsilon: 0.2 , action:  left , deadline: 20
annealing now. self.epsilon: 0.2 , action:  None , deadline: 15
annealing now. self.epsilon: 0.2 , action:  None , deadline: 10
Environment.act(): Primary agent has reached destination!
success: 3 / 5
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (7, 1), destination = (7, 6), deadline = 25
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  left , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 4 / 6
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (3, 1), destination = (6, 5), deadline = 35
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.142857142857 , self.eps_freq:  7.0 

annealing now. self.epsilon: 0.142857142857 , action:  right , deadline: 35
annealing now. self.epsilon: 0.142857142857 , action:  None , deadline: 28
Environment.act(): Primary agent has reached destination!
success: 5 / 7
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (2, 4), destination = (5, 6), deadline = 25
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  None , deadline: 24
annealing now. self.epsilon: 0.125 , action:  None , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 6 / 8
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (7, 2), destination = (3, 6), deadline = 40
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.111111111111 , self.eps_freq:  9.0 

annealing now. self.epsilon: 0.111111111111 , action:  forward , deadline: 36
annealing now. self.epsilon: 0.111111111111 , action:  forward , deadline: 27
annealing now. self.epsilon: 0.111111111111 , action:  right , deadline: 18
Environment.act(): Primary agent has reached destination!
success: 7 / 9
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (8, 3), destination = (7, 6), deadline = 20
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  left , deadline: 20
Environment.act(): Primary agent has reached destination!
success: 8 / 10
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (6, 4), destination = (7, 1), deadline = 20
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0909090909091 , self.eps_freq:  11.0 

Environment.act(): Primary agent has reached destination!
success: 9 / 11
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (1, 4), destination = (8, 4), deadline = 35
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

Environment.act(): Primary agent has reached destination!
success: 10 / 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (6, 2), destination = (1, 1), deadline = 30
RoutePlanner.route_to(): destination = (1, 1)
self.epsilon: 0.0769230769231 , self.eps_freq:  13.0 

annealing now. self.epsilon: 0.0769230769231 , action:  None , deadline: 26
Environment.act(): Primary agent has reached destination!
success: 11 / 13
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (5, 2), destination = (8, 6), deadline = 35
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0714285714286 , action:  right , deadline: 28
Environment.act(): Primary agent has reached destination!
success: 12 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (6, 4), destination = (1, 2), deadline = 35
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0666666666667 , self.eps_freq:  15.0 

annealing now. self.epsilon: 0.0666666666667 , action:  left , deadline: 30
Environment.act(): Primary agent has reached destination!
success: 13 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (6, 2), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

Environment.act(): Primary agent has reached destination!
success: 14 / 16
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (4, 2), destination = (7, 5), deadline = 30
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.0588235294118 , self.eps_freq:  17.0 

Environment.act(): Primary agent has reached destination!
success: 15 / 17
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (2, 3), destination = (7, 3), deadline = 25
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 16 / 18
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (7, 4), destination = (2, 6), deadline = 35
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0526315789474 , self.eps_freq:  19.0 

Environment.act(): Primary agent has reached destination!
success: 17 / 19
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (3, 4), destination = (7, 5), deadline = 25
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.05 , self.eps_freq:  20.0 

success: 17 / 20
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (8, 6), destination = (8, 1), deadline = 25
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.047619047619 , self.eps_freq:  21.0 

Environment.act(): Primary agent has reached destination!
success: 18 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (3, 4), destination = (8, 4), deadline = 25
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 19 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (4, 5), destination = (8, 3), deadline = 30
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.0434782608696 , self.eps_freq:  23.0 

Environment.act(): Primary agent has reached destination!
success: 20 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (5, 1), destination = (1, 5), deadline = 40
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 21 / 24
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (7, 5), destination = (2, 1), deadline = 45
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.04 , self.eps_freq:  25.0 

Environment.act(): Primary agent has reached destination!
success: 22 / 25
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (7, 6), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 23 / 26
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (4, 5), destination = (3, 2), deadline = 20
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.037037037037 , self.eps_freq:  27.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (2, 4), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (7, 2), destination = (4, 5), deadline = 30
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0344827586207 , self.eps_freq:  29.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 29
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (1, 6), destination = (4, 3), deadline = 30
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 30
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (4, 3), destination = (2, 5), deadline = 20
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0322580645161 , self.eps_freq:  31.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 31
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (4, 1), destination = (2, 3), deadline = 20
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (4, 1), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
self.epsilon: 0.030303030303 , self.eps_freq:  33.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 33
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (3, 2), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 34
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (7, 4), destination = (1, 6), deadline = 40
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0285714285714 , self.eps_freq:  35.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 35
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (4, 3), destination = (3, 6), deadline = 20
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 36
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (2, 6), destination = (5, 3), deadline = 30
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.027027027027 , self.eps_freq:  37.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 37
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (2, 1), destination = (6, 5), deadline = 40
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

success: 34 / 38
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (6, 5), destination = (8, 3), deadline = 20
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.025641025641 , self.eps_freq:  39.0 

Environment.act(): Primary agent has reached destination!
success: 35 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (8, 6), destination = (1, 5), deadline = 40
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 40
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (1, 6), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0243902439024 , self.eps_freq:  41.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 41
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (1, 4), destination = (8, 5), deadline = 40
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 42
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (7, 2), destination = (2, 6), deadline = 45
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0232558139535 , self.eps_freq:  43.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 43
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (8, 3), destination = (5, 2), deadline = 20
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 44
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (8, 6), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0222222222222 , self.eps_freq:  45.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (8, 6), destination = (2, 3), deadline = 45
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 46
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (3, 3), destination = (7, 4), deadline = 25
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0212765957447 , self.eps_freq:  47.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 47
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (5, 6), destination = (5, 2), deadline = 20
RoutePlanner.route_to(): destination = (5, 2)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (3, 4), destination = (7, 2), deadline = 30
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0204081632653 , self.eps_freq:  50.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (6, 2), destination = (2, 3), deadline = 25
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.02 , self.eps_freq:  50.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (7, 5), destination = (8, 2), deadline = 20
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.0196078431373 , self.eps_freq:  51.0 

Environment.act(): Primary agent has reached destination!
success: 47 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (8, 4), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 52
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (6, 5), destination = (7, 1), deadline = 25
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0188679245283 , self.eps_freq:  53.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 53
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (2, 4), destination = (4, 6), deadline = 20
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (8, 4), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0181818181818 , self.eps_freq:  55.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 55
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (7, 5), destination = (6, 1), deadline = 25
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (2, 6), destination = (5, 1), deadline = 40
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0175438596491 , self.eps_freq:  57.0 

Environment.act(): Primary agent has reached destination!
success: 53 / 57
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (4, 4), destination = (1, 2), deadline = 25
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

Environment.act(): Primary agent has reached destination!
success: 54 / 58
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (5, 1), destination = (1, 4), deadline = 35
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0169491525424 , self.eps_freq:  59.0 

Environment.act(): Primary agent has reached destination!
success: 55 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (6, 3), destination = (4, 1), deadline = 20
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 60
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (6, 3), destination = (2, 4), deadline = 25
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.016393442623 , self.eps_freq:  61.0 

Environment.act(): Primary agent has reached destination!
success: 57 / 61
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (4, 4), destination = (1, 2), deadline = 25
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

Environment.act(): Primary agent has reached destination!
success: 58 / 62
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (7, 4), destination = (1, 5), deadline = 35
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.015873015873 , self.eps_freq:  63.0 

Environment.act(): Primary agent has reached destination!
success: 59 / 63
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (6, 5), destination = (7, 1), deadline = 25
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

Environment.act(): Primary agent has reached destination!
success: 60 / 64
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (7, 5), destination = (2, 6), deadline = 30
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0153846153846 , self.eps_freq:  65.0 

Environment.act(): Primary agent has reached destination!
success: 61 / 65
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (7, 2), destination = (5, 5), deadline = 25
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

Environment.act(): Primary agent has reached destination!
success: 62 / 66
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (2, 2), destination = (8, 4), deadline = 40
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0149253731343 , self.eps_freq:  67.0 

Environment.act(): Primary agent has reached destination!
success: 63 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (8, 1), destination = (2, 1), deadline = 30
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

Environment.act(): Primary agent has reached destination!
success: 64 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (6, 6), destination = (4, 3), deadline = 25
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0144927536232 , self.eps_freq:  69.0 

Environment.act(): Primary agent has reached destination!
success: 65 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (6, 2), destination = (8, 4), deadline = 20
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

Environment.act(): Primary agent has reached destination!
success: 66 / 70
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (5, 1), destination = (8, 4), deadline = 30
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0140845070423 , self.eps_freq:  71.0 

success: 66 / 71
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (7, 4), destination = (2, 5), deadline = 30
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

Environment.act(): Primary agent has reached destination!
success: 67 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (2, 5), destination = (5, 6), deadline = 20
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.013698630137 , self.eps_freq:  73.0 

Environment.act(): Primary agent has reached destination!
success: 68 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (8, 6), destination = (1, 6), deadline = 35
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

success: 68 / 74
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (1, 4), destination = (5, 6), deadline = 30
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0133333333333 , self.eps_freq:  75.0 

Environment.act(): Primary agent has reached destination!
success: 69 / 75
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (1, 1), destination = (2, 6), deadline = 30
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

Environment.act(): Primary agent has reached destination!
success: 70 / 76
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (8, 6), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.012987012987 , self.eps_freq:  77.0 

Environment.act(): Primary agent has reached destination!
success: 71 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (6, 5), destination = (2, 4), deadline = 25
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

Environment.act(): Primary agent has reached destination!
success: 72 / 78
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (4, 1), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.0126582278481 , self.eps_freq:  79.0 

Environment.act(): Primary agent has reached destination!
success: 73 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (4, 4), destination = (7, 1), deadline = 30
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

Environment.act(): Primary agent has reached destination!
success: 74 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (4, 1), destination = (3, 4), deadline = 20
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0123456790123 , self.eps_freq:  81.0 

Environment.act(): Primary agent has reached destination!
success: 75 / 81
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (3, 1), destination = (7, 3), deadline = 30
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

Environment.act(): Primary agent has reached destination!
success: 76 / 82
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (4, 1), destination = (3, 6), deadline = 30
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.0120481927711 , self.eps_freq:  83.0 

Environment.act(): Primary agent has reached destination!
success: 77 / 83
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (6, 3), destination = (3, 2), deadline = 20
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

success: 77 / 84
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (5, 1), destination = (2, 3), deadline = 25
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0117647058824 , self.eps_freq:  85.0 

success: 77 / 85
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (2, 3), destination = (6, 6), deadline = 35
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

Environment.act(): Primary agent has reached destination!
success: 78 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (1, 5), destination = (3, 2), deadline = 25
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0114942528736 , self.eps_freq:  87.0 

Environment.act(): Primary agent has reached destination!
success: 79 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (2, 1), destination = (3, 5), deadline = 25
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

Environment.act(): Primary agent has reached destination!
success: 80 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (2, 6), destination = (7, 2), deadline = 45
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.0112359550562 , self.eps_freq:  89.0 

Environment.act(): Primary agent has reached destination!
success: 81 / 89
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (3, 5), destination = (6, 3), deadline = 25
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

Environment.act(): Primary agent has reached destination!
success: 82 / 90
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (3, 4), destination = (8, 3), deadline = 30
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.010989010989 , self.eps_freq:  91.0 

Environment.act(): Primary agent has reached destination!
success: 83 / 91
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (2, 3), destination = (6, 3), deadline = 20
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

Environment.act(): Primary agent has reached destination!
success: 84 / 92
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (5, 5), destination = (7, 1), deadline = 30
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.010752688172 , self.eps_freq:  93.0 

Environment.act(): Primary agent has reached destination!
success: 85 / 93
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (6, 5), destination = (2, 4), deadline = 25
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

Environment.act(): Primary agent has reached destination!
success: 86 / 94
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (6, 2), destination = (1, 3), deadline = 30
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.0105263157895 , self.eps_freq:  95.0 

Environment.act(): Primary agent has reached destination!
success: 87 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (7, 2), destination = (5, 6), deadline = 30
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

Environment.act(): Primary agent has reached destination!
success: 88 / 96
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (1, 5), destination = (4, 2), deadline = 30
RoutePlanner.route_to(): destination = (4, 2)
self.epsilon: 0.0103092783505 , self.eps_freq:  97.0 

Environment.act(): Primary agent has reached destination!
success: 89 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (8, 6), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

Environment.act(): Primary agent has reached destination!
success: 90 / 98
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (5, 1), destination = (3, 3), deadline = 20
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.010101010101 , self.eps_freq:  99.0 

Environment.act(): Primary agent has reached destination!
success: 91 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (6, 1), destination = (1, 4), deadline = 40
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.01 , self.eps_freq:  100.0 

Environment.act(): Primary agent has reached destination!
success: 92 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.98757
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01099
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01163
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.54667
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01587
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.21467
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03768
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.50073
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05000
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 0.66362
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.31402
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.17900
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.43906
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.25480
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.15128
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02703
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.13185
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.48038
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00223
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06581
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.46124
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.05194
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06667
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09091
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.10715
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.41547
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02632
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00393
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.06250
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01754
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02456
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01852
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09878
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.06504
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.22806
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01887
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01124
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -1.00644
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 3.99828
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Forward | Q-Val: 0.91972
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.97272
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.53848
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.40269
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.51452
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.53449
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.51420
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.87937
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 3.04092
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 0.52656
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.57070
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Right | Q-Val: 0.08645
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -1.01282
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.59238
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.97344
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: -1.00000
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 0.54199
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: Left | Q-Val: 0.50000
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.98548
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: 3.29061
--------------------------------------------------------------------------------
updated cells:  59 , self.total_cell_count: 2048 , updated_func_counter: 1559
self.alpha: 0.3 self.gamma: 0.1 , self.epsilon: 0.2 , success: 92  in steps:  15
________________________________________________________________________________
gma = 0.1
eps = 0.1
alp = 0.3
epsilon:  0.1
--------------------------------------------------------------------------------
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (3, 1), destination = (3, 5), deadline = 20
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.5 , self.eps_freq:  2.0 

annealing now. self.epsilon: 0.5 , action:  right , deadline: 20
annealing now. self.epsilon: 0.5 , action:  None , deadline: 18
annealing now. self.epsilon: 0.5 , action:  forward , deadline: 16
Environment.act(): Primary agent has reached destination!
success: 1 / 1
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (1, 3), destination = (3, 1), deadline = 20
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.25 , self.eps_freq:  4.0 

annealing now. self.epsilon: 0.25 , action:  forward , deadline: 20
annealing now. self.epsilon: 0.25 , action:  right , deadline: 16
annealing now. self.epsilon: 0.25 , action:  forward , deadline: 12
annealing now. self.epsilon: 0.25 , action:  None , deadline: 8
success: 1 / 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (8, 6), destination = (2, 5), deadline = 35
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.166666666667 , self.eps_freq:  6.0 

annealing now. self.epsilon: 0.166666666667 , action:  right , deadline: 30
annealing now. self.epsilon: 0.166666666667 , action:  left , deadline: 24
Environment.act(): Primary agent has reached destination!
success: 2 / 3
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (6, 3), destination = (3, 5), deadline = 25
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.125 , self.eps_freq:  8.0 

annealing now. self.epsilon: 0.125 , action:  None , deadline: 24
annealing now. self.epsilon: 0.125 , action:  forward , deadline: 16
success: 2 / 4
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (4, 4), destination = (8, 2), deadline = 30
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.1 , self.eps_freq:  10.0 

annealing now. self.epsilon: 0.1 , action:  left , deadline: 30
annealing now. self.epsilon: 0.1 , action:  forward , deadline: 20
success: 2 / 5
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (1, 6), destination = (8, 1), deadline = 60
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0833333333333 , self.eps_freq:  12.0 

annealing now. self.epsilon: 0.0833333333333 , action:  forward , deadline: 60
annealing now. self.epsilon: 0.0833333333333 , action:  left , deadline: 48
Environment.act(): Primary agent has reached destination!
success: 3 / 6
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (2, 4), destination = (8, 1), deadline = 45
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0714285714286 , self.eps_freq:  14.0 

annealing now. self.epsilon: 0.0714285714286 , action:  None , deadline: 42
annealing now. self.epsilon: 0.0714285714286 , action:  left , deadline: 28
success: 3 / 7
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (1, 5), destination = (8, 6), deadline = 40
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0625 , self.eps_freq:  16.0 

annealing now. self.epsilon: 0.0625 , action:  None , deadline: 32
Environment.act(): Primary agent has reached destination!
success: 4 / 8
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (5, 2), destination = (2, 3), deadline = 20
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0555555555556 , self.eps_freq:  18.0 

Environment.act(): Primary agent has reached destination!
success: 5 / 9
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (1, 4), destination = (8, 5), deadline = 40
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.05 , self.eps_freq:  20.0 

annealing now. self.epsilon: 0.05 , action:  None , deadline: 40
success: 5 / 10
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (8, 6), destination = (7, 1), deadline = 30
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0454545454545 , self.eps_freq:  22.0 

Environment.act(): Primary agent has reached destination!
success: 6 / 11
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (4, 6), destination = (8, 1), deadline = 45
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0416666666667 , self.eps_freq:  24.0 

Environment.act(): Primary agent has reached destination!
success: 7 / 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (1, 3), destination = (5, 6), deadline = 35
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.0384615384615 , self.eps_freq:  26.0 

Environment.act(): Primary agent has reached destination!
success: 8 / 13
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (2, 1), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0357142857143 , self.eps_freq:  28.0 

Environment.act(): Primary agent has reached destination!
success: 9 / 14
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (7, 5), destination = (1, 6), deadline = 35
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.0333333333333 , self.eps_freq:  30.0 

Environment.act(): Primary agent has reached destination!
success: 10 / 15
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (5, 5), destination = (2, 2), deadline = 30
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.03125 , self.eps_freq:  32.0 

Environment.act(): Primary agent has reached destination!
success: 11 / 16
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (7, 2), destination = (3, 5), deadline = 35
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.0294117647059 , self.eps_freq:  34.0 

success: 11 / 17
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (4, 6), destination = (7, 3), deadline = 30
RoutePlanner.route_to(): destination = (7, 3)
self.epsilon: 0.0277777777778 , self.eps_freq:  36.0 

success: 11 / 18
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (2, 1), destination = (5, 3), deadline = 25
RoutePlanner.route_to(): destination = (5, 3)
self.epsilon: 0.0263157894737 , self.eps_freq:  38.0 

Environment.act(): Primary agent has reached destination!
success: 12 / 19
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (2, 6), destination = (7, 6), deadline = 25
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.025 , self.eps_freq:  40.0 

Environment.act(): Primary agent has reached destination!
success: 13 / 20
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (1, 5), destination = (8, 6), deadline = 40
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0238095238095 , self.eps_freq:  42.0 

Environment.act(): Primary agent has reached destination!
success: 14 / 21
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (1, 6), destination = (3, 1), deadline = 35
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.0227272727273 , self.eps_freq:  44.0 

Environment.act(): Primary agent has reached destination!
success: 15 / 22
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (2, 6), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
self.epsilon: 0.0217391304348 , self.eps_freq:  46.0 

Environment.act(): Primary agent has reached destination!
success: 16 / 23
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (1, 6), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
self.epsilon: 0.0208333333333 , self.eps_freq:  48.0 

Environment.act(): Primary agent has reached destination!
success: 17 / 24
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (7, 4), destination = (3, 6), deadline = 30
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.02 , self.eps_freq:  50.0 

success: 17 / 25
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (5, 2), destination = (2, 4), deadline = 25
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.0192307692308 , self.eps_freq:  52.0 

success: 17 / 26
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (5, 4), destination = (1, 2), deadline = 30
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0185185185185 , self.eps_freq:  54.0 

Environment.act(): Primary agent has reached destination!
success: 18 / 27
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (7, 4), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0178571428571 , self.eps_freq:  56.0 

Environment.act(): Primary agent has reached destination!
success: 19 / 28
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (5, 1), destination = (1, 4), deadline = 35
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.0172413793103 , self.eps_freq:  58.0 

success: 19 / 29
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (7, 1), destination = (6, 5), deadline = 25
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.0166666666667 , self.eps_freq:  60.0 

success: 19 / 30
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (3, 2), destination = (7, 1), deadline = 25
RoutePlanner.route_to(): destination = (7, 1)
self.epsilon: 0.0161290322581 , self.eps_freq:  62.0 

success: 19 / 31
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (2, 1), destination = (2, 6), deadline = 25
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.015625 , self.eps_freq:  64.0 

Environment.act(): Primary agent has reached destination!
success: 20 / 32
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (5, 2), destination = (8, 5), deadline = 30
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0151515151515 , self.eps_freq:  66.0 

success: 20 / 33
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (1, 2), destination = (8, 4), deadline = 45
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0147058823529 , self.eps_freq:  68.0 

Environment.act(): Primary agent has reached destination!
success: 21 / 34
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (5, 5), destination = (8, 4), deadline = 20
RoutePlanner.route_to(): destination = (8, 4)
self.epsilon: 0.0142857142857 , self.eps_freq:  70.0 

success: 21 / 35
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (6, 1), destination = (1, 2), deadline = 30
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0138888888889 , self.eps_freq:  72.0 

success: 21 / 36
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (5, 5), destination = (2, 6), deadline = 20
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.0135135135135 , self.eps_freq:  74.0 

success: 21 / 37
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (1, 1), destination = (4, 3), deadline = 25
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.0131578947368 , self.eps_freq:  76.0 

Environment.act(): Primary agent has reached destination!
success: 22 / 38
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (3, 6), destination = (5, 1), deadline = 35
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0128205128205 , self.eps_freq:  78.0 

Environment.act(): Primary agent has reached destination!
success: 23 / 39
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (4, 5), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.0125 , self.eps_freq:  80.0 

success: 23 / 40
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (4, 1), destination = (8, 1), deadline = 20
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0121951219512 , self.eps_freq:  82.0 

Environment.act(): Primary agent has reached destination!
success: 24 / 41
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (8, 1), destination = (2, 3), deadline = 40
RoutePlanner.route_to(): destination = (2, 3)
self.epsilon: 0.0119047619048 , self.eps_freq:  84.0 

Environment.act(): Primary agent has reached destination!
success: 25 / 42
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (6, 2), destination = (3, 4), deadline = 25
RoutePlanner.route_to(): destination = (3, 4)
self.epsilon: 0.0116279069767 , self.eps_freq:  86.0 

success: 25 / 43
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (3, 1), destination = (8, 1), deadline = 25
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.0113636363636 , self.eps_freq:  88.0 

Environment.act(): Primary agent has reached destination!
success: 26 / 44
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (3, 1), destination = (8, 6), deadline = 50
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.0111111111111 , self.eps_freq:  90.0 

Environment.act(): Primary agent has reached destination!
success: 27 / 45
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (6, 2), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.0108695652174 , self.eps_freq:  92.0 

Environment.act(): Primary agent has reached destination!
success: 28 / 46
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (5, 6), destination = (1, 2), deadline = 40
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.0106382978723 , self.eps_freq:  94.0 

Environment.act(): Primary agent has reached destination!
success: 29 / 47
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (2, 5), destination = (2, 1), deadline = 20
RoutePlanner.route_to(): destination = (2, 1)
self.epsilon: 0.0104166666667 , self.eps_freq:  96.0 

Environment.act(): Primary agent has reached destination!
success: 30 / 48
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (2, 4), destination = (8, 5), deadline = 35
RoutePlanner.route_to(): destination = (8, 5)
self.epsilon: 0.0102040816327 , self.eps_freq:  99.0 

Environment.act(): Primary agent has reached destination!
success: 31 / 49
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (6, 5), destination = (1, 2), deadline = 40
RoutePlanner.route_to(): destination = (1, 2)
self.epsilon: 0.01 , self.eps_freq:  100.0 

Environment.act(): Primary agent has reached destination!
success: 32 / 50
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (3, 5), destination = (7, 5), deadline = 20
RoutePlanner.route_to(): destination = (7, 5)
self.epsilon: 0.00980392156863 , self.eps_freq:  102.0 

Environment.act(): Primary agent has reached destination!
success: 33 / 51
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (7, 1), destination = (1, 3), deadline = 40
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.00961538461538 , self.eps_freq:  104.0 

success: 33 / 52
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (3, 2), destination = (6, 1), deadline = 20
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.00943396226415 , self.eps_freq:  106.0 

success: 33 / 53
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (1, 6), destination = (7, 2), deadline = 50
RoutePlanner.route_to(): destination = (7, 2)
self.epsilon: 0.00925925925926 , self.eps_freq:  108.0 

Environment.act(): Primary agent has reached destination!
success: 34 / 54
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (2, 4), destination = (6, 4), deadline = 20
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.00909090909091 , self.eps_freq:  110.0 

success: 34 / 55
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (5, 5), destination = (1, 3), deadline = 30
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.00892857142857 , self.eps_freq:  112.0 

Environment.act(): Primary agent has reached destination!
success: 35 / 56
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (8, 5), destination = (4, 1), deadline = 40
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.00877192982456 , self.eps_freq:  114.0 

Environment.act(): Primary agent has reached destination!
success: 36 / 57
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (1, 2), destination = (8, 6), deadline = 55
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.00862068965517 , self.eps_freq:  116.0 

Environment.act(): Primary agent has reached destination!
success: 37 / 58
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (3, 1), destination = (8, 6), deadline = 50
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.00847457627119 , self.eps_freq:  118.0 

Environment.act(): Primary agent has reached destination!
success: 38 / 59
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (2, 5), destination = (5, 1), deadline = 35
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.00833333333333 , self.eps_freq:  120.0 

success: 38 / 60
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (8, 5), destination = (6, 2), deadline = 25
RoutePlanner.route_to(): destination = (6, 2)
self.epsilon: 0.00819672131148 , self.eps_freq:  122.0 

Environment.act(): Primary agent has reached destination!
success: 39 / 61
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (1, 1), destination = (5, 5), deadline = 40
RoutePlanner.route_to(): destination = (5, 5)
self.epsilon: 0.00806451612903 , self.eps_freq:  124.0 

Environment.act(): Primary agent has reached destination!
success: 40 / 62
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (3, 3), destination = (8, 1), deadline = 35
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00793650793651 , self.eps_freq:  126.0 

success: 40 / 63
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (7, 1), destination = (3, 2), deadline = 25
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.0078125 , self.eps_freq:  128.0 

success: 40 / 64
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (3, 2), destination = (1, 5), deadline = 25
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.00769230769231 , self.eps_freq:  130.0 

success: 40 / 65
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (2, 1), destination = (6, 4), deadline = 35
RoutePlanner.route_to(): destination = (6, 4)
self.epsilon: 0.00757575757576 , self.eps_freq:  132.0 

success: 40 / 66
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (8, 3), destination = (4, 6), deadline = 35
RoutePlanner.route_to(): destination = (4, 6)
self.epsilon: 0.00746268656716 , self.eps_freq:  134.0 

Environment.act(): Primary agent has reached destination!
success: 41 / 67
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (6, 6), destination = (4, 1), deadline = 35
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.00735294117647 , self.eps_freq:  136.0 

Environment.act(): Primary agent has reached destination!
success: 42 / 68
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (6, 1), destination = (1, 5), deadline = 45
RoutePlanner.route_to(): destination = (1, 5)
self.epsilon: 0.00724637681159 , self.eps_freq:  138.0 

Environment.act(): Primary agent has reached destination!
success: 43 / 69
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (5, 2), destination = (3, 5), deadline = 25
RoutePlanner.route_to(): destination = (3, 5)
self.epsilon: 0.00714285714286 , self.eps_freq:  140.0 

success: 43 / 70
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (7, 1), destination = (3, 1), deadline = 20
RoutePlanner.route_to(): destination = (3, 1)
self.epsilon: 0.00704225352113 , self.eps_freq:  142.0 

Environment.act(): Primary agent has reached destination!
success: 44 / 71
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (6, 5), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.00694444444444 , self.eps_freq:  144.0 

Environment.act(): Primary agent has reached destination!
success: 45 / 72
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (1, 1), destination = (3, 3), deadline = 20
RoutePlanner.route_to(): destination = (3, 3)
self.epsilon: 0.00684931506849 , self.eps_freq:  146.0 

Environment.act(): Primary agent has reached destination!
success: 46 / 73
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (1, 2), destination = (8, 2), deadline = 35
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.00675675675676 , self.eps_freq:  148.0 

Environment.act(): Primary agent has reached destination!
success: 47 / 74
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (5, 2), destination = (2, 6), deadline = 35
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.00666666666667 , self.eps_freq:  150.0 

success: 47 / 75
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (7, 3), destination = (5, 1), deadline = 20
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.00657894736842 , self.eps_freq:  152.0 

success: 47 / 76
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (3, 2), destination = (6, 5), deadline = 30
RoutePlanner.route_to(): destination = (6, 5)
self.epsilon: 0.00649350649351 , self.eps_freq:  154.0 

Environment.act(): Primary agent has reached destination!
success: 48 / 77
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 1), deadline = 50
RoutePlanner.route_to(): destination = (8, 1)
self.epsilon: 0.00641025641026 , self.eps_freq:  156.0 

success: 48 / 78
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (3, 2), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
self.epsilon: 0.00632911392405 , self.eps_freq:  158.0 

Environment.act(): Primary agent has reached destination!
success: 49 / 79
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (2, 4), destination = (8, 6), deadline = 40
RoutePlanner.route_to(): destination = (8, 6)
self.epsilon: 0.00625 , self.eps_freq:  160.0 

Environment.act(): Primary agent has reached destination!
success: 50 / 80
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (8, 3), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
self.epsilon: 0.00617283950617 , self.eps_freq:  162.0 

success: 50 / 81
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (5, 2), destination = (3, 6), deadline = 30
RoutePlanner.route_to(): destination = (3, 6)
self.epsilon: 0.00609756097561 , self.eps_freq:  164.0 

success: 50 / 82
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (5, 1), destination = (2, 2), deadline = 20
RoutePlanner.route_to(): destination = (2, 2)
self.epsilon: 0.00602409638554 , self.eps_freq:  166.0 

success: 50 / 83
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (5, 3), destination = (1, 6), deadline = 35
RoutePlanner.route_to(): destination = (1, 6)
self.epsilon: 0.00595238095238 , self.eps_freq:  168.0 

success: 50 / 84
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (1, 4), destination = (8, 2), deadline = 45
RoutePlanner.route_to(): destination = (8, 2)
self.epsilon: 0.00588235294118 , self.eps_freq:  170.0 

success: 50 / 85
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (6, 1), destination = (5, 6), deadline = 30
RoutePlanner.route_to(): destination = (5, 6)
self.epsilon: 0.00581395348837 , self.eps_freq:  172.0 

Environment.act(): Primary agent has reached destination!
success: 51 / 86
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (4, 2), destination = (7, 6), deadline = 35
RoutePlanner.route_to(): destination = (7, 6)
self.epsilon: 0.00574712643678 , self.eps_freq:  174.0 

Environment.act(): Primary agent has reached destination!
success: 52 / 87
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (1, 6), destination = (5, 1), deadline = 45
RoutePlanner.route_to(): destination = (5, 1)
self.epsilon: 0.00568181818182 , self.eps_freq:  176.0 

Environment.act(): Primary agent has reached destination!
success: 53 / 88
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (6, 1), destination = (1, 3), deadline = 35
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.00561797752809 , self.eps_freq:  178.0 

success: 53 / 89
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (5, 5), destination = (4, 1), deadline = 25
RoutePlanner.route_to(): destination = (4, 1)
self.epsilon: 0.00555555555556 , self.eps_freq:  180.0 

Environment.act(): Primary agent has reached destination!
success: 54 / 90
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (4, 4), destination = (1, 3), deadline = 20
RoutePlanner.route_to(): destination = (1, 3)
self.epsilon: 0.00549450549451 , self.eps_freq:  182.0 

success: 54 / 91
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (5, 1), destination = (2, 5), deadline = 35
RoutePlanner.route_to(): destination = (2, 5)
self.epsilon: 0.0054347826087 , self.eps_freq:  184.0 

Environment.act(): Primary agent has reached destination!
success: 55 / 92
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (5, 1), destination = (2, 6), deadline = 40
RoutePlanner.route_to(): destination = (2, 6)
self.epsilon: 0.00537634408602 , self.eps_freq:  186.0 

Environment.act(): Primary agent has reached destination!
success: 56 / 93
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (3, 2), destination = (1, 4), deadline = 20
RoutePlanner.route_to(): destination = (1, 4)
self.epsilon: 0.00531914893617 , self.eps_freq:  188.0 

success: 56 / 94
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (1, 5), destination = (6, 3), deadline = 35
RoutePlanner.route_to(): destination = (6, 3)
self.epsilon: 0.00526315789474 , self.eps_freq:  190.0 

Environment.act(): Primary agent has reached destination!
success: 57 / 95
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (7, 5), destination = (2, 4), deadline = 30
RoutePlanner.route_to(): destination = (2, 4)
self.epsilon: 0.00520833333333 , self.eps_freq:  192.0 

Environment.act(): Primary agent has reached destination!
success: 58 / 96
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (2, 4), destination = (8, 3), deadline = 35
RoutePlanner.route_to(): destination = (8, 3)
self.epsilon: 0.00515463917526 , self.eps_freq:  194.0 

Environment.act(): Primary agent has reached destination!
success: 59 / 97
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (8, 6), destination = (6, 1), deadline = 35
RoutePlanner.route_to(): destination = (6, 1)
self.epsilon: 0.00510204081633 , self.eps_freq:  197.0 

success: 59 / 98
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (6, 6), destination = (3, 2), deadline = 35
RoutePlanner.route_to(): destination = (3, 2)
self.epsilon: 0.00505050505051 , self.eps_freq:  198.0 

Environment.act(): Primary agent has reached destination!
success: 60 / 99
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (7, 4), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
self.epsilon: 0.005 , self.eps_freq:  200.0 

success: 60 / 100
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.01002
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.27528
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01266
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.29853
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08225
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.86213
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01020
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.02563
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.38701
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.32563
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.09091
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04596
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.04545
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.54040
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.19928
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.88623
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03448
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.00970
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.05073
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.07768
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.25000
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.08237
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.72407
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.63394
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.25591
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.25436
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02381
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.14286
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.75093
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: None | Q-Val: 1.01256
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02657
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02381
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.02941
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01429
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.03226
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Green | Action: None | Q-Val: 0.01220
| Nav: Forward | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 3.28984
| Nav: Right | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.62180
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: 0.09264
| Nav: Left | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Forward | Q-Val: -0.49375
| Nav: Right | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 2.11394
| Nav: Left | Traffic state:  Left: Forward -+- Right: None -+- Oncoming: None |  Light: Red | Action: Right | Q-Val: 1.33786
| Nav: Forward | Traffic state:  Left: None -+- Right: None -+- Oncoming: None |  Light: Red | Action: Left | Q-Val: -0.60920
--------------------------------------------------------------------------------
updated cells:  43 , self.total_cell_count: 2048 , updated_func_counter: 2187
self.alpha: 0.3 self.gamma: 0.1 , self.epsilon: 0.1 , success: 60  in steps:  0
________________________________________________________________________________
Environment.reset(): Primary agent could not reach destination within deadline!
    alpha  gamma  epsilon  success  deadline
0     0.7  0.005      0.5       94        12
1     0.7  0.005      0.2       87        19
2     0.7  0.005      0.1       96        11
3     0.7  0.050      0.5       92        20
4     0.7  0.050      0.2        2         0
5     0.7  0.050      0.1       10         0
6     0.7  0.100      0.5       96         5
7     0.7  0.100      0.2       32        13
8     0.7  0.100      0.1        0         0
9     0.5  0.005      0.5       91        14
10    0.5  0.005      0.2       45        12
11    0.5  0.005      0.1       45         0
12    0.5  0.050      0.5       56         0
13    0.5  0.050      0.2       93        17
14    0.5  0.050      0.1       10         0
15    0.5  0.100      0.5       93        11
16    0.5  0.100      0.2       86        29
17    0.5  0.100      0.1        1         0
18    0.3  0.005      0.5       87        15
19    0.3  0.005      0.2       94        15
20    0.3  0.005      0.1       40         0
21    0.3  0.050      0.5       91        16
22    0.3  0.050      0.2       73        14
23    0.3  0.050      0.1       48         0
24    0.3  0.100      0.5       96        17
25    0.3  0.100      0.2       92        15
26    0.3  0.100      0.1       60         0
